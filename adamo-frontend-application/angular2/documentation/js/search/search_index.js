var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDto.html",[0,0.06,1,2.559]],["body/classes/AbstractDto.html",[0,0.087,1,4.454,2,2.101,3,0.193,4,0.193,5,0.145,6,4.871,7,0.32,8,0.733,9,5.15,10,3.552,11,5.15,12,0.782,13,6.743,14,4.948,15,0.498,16,6.743,17,0.579,18,0.015,19,0.458,20,0.323,21,0.579,22,4.871,23,4.948,24,5.621,25,0.812,26,5.621,27,4.377,28,5.621,29,0.401,30,4.871,31,0.217,32,4.377,33,5.621,34,5.621,35,5.621,36,5.621,37,5.621,38,0.011,39,0.013,40,0.011]],["title/classes/AbstractEntity.html",[0,0.06,14,2.559]],["body/classes/AbstractEntity.html",[0,0.088,1,3.745,2,2.118,3,0.195,4,0.195,5,0.146,7,0.322,8,0.737,9,5.169,10,3.565,11,5.169,14,4.789,15,0.499,18,0.015,20,0.313,22,4.912,23,4.962,25,0.817,29,0.405,31,0.219,38,0.011,39,0.013,40,0.011,41,4.912,42,7.511,43,6.282,44,5.669,45,5.669,46,5.669,47,5.669,48,5.669,49,1.115,50,4.414,51,5.669,52,1.474,53,5.669]],["title/injectables/AdamoMqttService.html",[54,1.048,55,1.578]],["body/injectables/AdamoMqttService.html",[0,0.058,3,0.128,4,0.128,5,0.096,7,0.212,8,0.562,10,3.578,12,0.719,15,0.502,17,0.611,18,0.016,19,0.483,20,0.314,21,0.611,25,0.901,29,0.509,31,0.144,32,4.022,38,0.007,39,0.01,40,0.007,49,1.016,52,1.749,54,1.397,55,2.104,56,1.929,57,3.227,58,1.678,59,5.237,60,5.929,61,5.138,62,4.806,63,0.752,64,0.983,65,4.022,66,6.403,67,4.475,68,5.549,69,6.403,70,2.158,71,2.714,72,3.041,73,5.929,74,3.316,75,3.724,76,5.164,77,3.724,78,0.968,79,1.241,80,3.724,81,5.164,82,3.724,83,2.417,84,2.037,85,3.724,86,3.724,87,3.724,88,5.138,89,1.957,90,1.482,91,5.164,92,2.03,93,4.475,94,6.403,95,4.475,96,5.549,97,3.412,98,3.724,99,3.724,100,1.573,101,3.724,102,3.724,103,0.427,104,1.587,105,2.158,106,2.298,107,3.724,108,1.392,109,0.895,110,3.658,111,3.724,112,1.743,113,2.298,114,2.46,115,2.655,116,6.403,117,3.724,118,5.164,119,5.929,120,3.227,121,1.851,122,0.931,123,3.724,124,3.724,125,3.724,126,2.993,127,3.724,128,3.724,129,3.724,130,1.743,131,3.683,132,2.417,133,1.662]],["title/components/AdministrationComponent.html",[134,0.357,135,0.895]],["body/components/AdministrationComponent.html",[0,0.072,3,0.159,4,0.159,5,0.12,7,0.264,8,0.65,12,0.645,15,0.397,17,0.478,18,0.015,19,0.57,20,0.258,21,0.478,25,0.72,29,0.427,31,0.179,38,0.009,39,0.011,40,0.009,64,0.838,89,1.53,90,1.158,103,0.531,112,2.169,122,1.748,134,0.61,135,1.615,136,1.555,137,1.304,138,1.304,139,1.304,140,4.016,141,1.114,142,2.297,143,4.264,144,1.682,145,5.979,146,6.619,147,4.635,148,3.825,149,5.979,150,3.255,151,1.483,152,2.86,153,4.635,154,1.412,155,1.411,156,1.529,157,1.721,158,1.205,159,1.617,160,1.495,161,1.304,162,1.304,163,1.304,164,1.114,165,1.304,166,1.114,167,1.304,168,1.114,169,1.617,170,1.304,171,1.114,172,1.304,173,1.114,174,1.253,175,2.122,176,1.07,177,1.205,178,1.304,179,1.114,180,1.304,181,1.114,182,1.304,183,1.682,184,1.07,185,2.037,186,1.07,187,1.304,188,1.07,189,1.114,190,1.304,191,1.114,192,1.114,193,1.158,194,1.114,195,1.114,196,1.114,197,1.114,198,1.205,199,1.114,200,1.205,201,1.114,202,1.304,203,1.114,204,1.114,205,1.437,206,1.114,207,1.07,208,1.253,209,1.304,210,1.304]],["title/components/AlertComponent.html",[134,0.357,164,0.931]],["body/components/AlertComponent.html",[0,0.07,3,0.154,4,0.154,5,0.116,7,0.255,8,0.637,12,0.625,15,0.459,17,0.463,18,0.015,19,0.563,20,0.253,21,0.463,29,0.418,31,0.174,38,0.009,39,0.011,40,0.009,58,1.39,63,0.854,64,0.93,78,0.815,79,1.408,103,0.515,122,1.727,134,0.6,135,1.037,136,1.523,137,1.264,138,1.264,139,1.264,141,1.079,142,2.292,144,1.648,151,0.92,154,1.368,155,0.958,156,1.037,157,1.168,158,1.168,159,1.585,160,1.464,161,1.264,162,1.264,163,1.264,164,1.661,165,1.264,166,1.079,167,1.264,168,1.079,169,1.585,170,1.264,171,1.079,172,1.264,173,1.079,174,1.215,175,2.106,176,1.037,177,1.168,178,1.264,179,1.079,180,1.264,181,1.079,182,1.264,183,1.648,184,1.037,185,2.017,186,1.037,187,1.264,188,1.037,189,1.079,190,1.264,191,1.079,192,1.079,193,1.123,194,1.079,195,1.079,196,1.079,197,1.079,198,1.168,199,1.079,200,1.168,201,1.079,202,1.264,203,1.079,204,1.079,205,1.408,206,1.079,207,1.037,208,1.215,209,1.264,210,1.264,211,3.893,212,5.859,213,5.859,214,5.077,215,5.859,216,2.816,217,3.084,218,4.566,219,4.492,220,4.261,221,5.859,222,4.492,223,4.492,224,2.772,225,3.498,226,4.492,227,5.859,228,2.209,229,5.077,230,5.077]],["title/injectables/AlertService.html",[54,1.048,220,2.245]],["body/injectables/AlertService.html",[0,0.069,3,0.152,4,0.152,5,0.115,7,0.252,8,0.632,12,0.618,15,0.487,17,0.668,18,0.016,19,0.529,20,0.322,21,0.668,25,0.883,29,0.491,31,0.172,38,0.008,39,0.011,40,0.008,49,1.143,52,1.154,54,1.572,56,2.299,58,1.562,61,6.748,62,5.003,63,0.847,64,0.969,72,3.122,78,0.902,79,1.397,89,2.271,90,1.719,100,2.306,103,0.508,104,2.477,108,1.659,121,2.323,154,1.352,214,5.038,216,2.91,220,3.37,231,3.846,232,5.357,233,3.188,234,3.456,235,5.813,236,5.038,237,4.438,238,2.464,239,4.438,240,2.893,241,5.813,242,4.438,243,4.438,244,5.813,245,5.038,246,2.739,247,3.18,248,4.438,249,2.573,250,4.438,251,6.879,252,3.846,253,3.846,254,4.438,255,6.483,256,2.721,257,5.813,258,2.477,259,4.438]],["title/components/AppComponent.html",[134,0.357,166,0.931]],["body/components/AppComponent.html",[0,0.062,3,0.137,4,0.137,5,0.103,18,0.016,19,0.5,29,0.284,31,0.154,38,0.008,39,0.01,40,0.008,97,2.626,103,0.455,122,1.645,134,0.565,135,0.918,136,1.404,137,1.118,138,1.118,139,1.118,141,0.955,142,2.272,144,1.52,151,0.814,152,3.333,155,0.848,156,0.918,157,1.034,158,1.034,159,1.659,160,1.35,161,1.118,162,1.118,163,1.118,164,0.955,165,1.118,166,1.581,167,1.118,168,0.955,169,1.964,170,1.118,171,0.955,172,1.118,173,0.955,174,1.075,175,2.043,176,0.918,177,1.034,178,1.118,179,0.955,180,1.118,181,0.955,182,1.118,183,1.52,184,0.918,185,1.936,186,0.918,187,1.118,188,0.918,189,0.955,190,1.118,191,0.955,192,0.955,193,0.994,194,0.955,195,0.955,196,0.955,197,0.955,198,1.034,199,0.955,200,1.034,201,0.955,202,1.118,203,0.955,204,0.955,205,1.298,206,0.955,207,0.918,208,1.075,209,1.118,210,1.118,224,2.453,256,1.86,258,3.283,260,2.626,261,3.445,262,6.135,263,5.401,264,2.835,265,3.852,266,3.096,267,3.975,268,2.626,269,3.096,270,3.096,271,3.096,272,3.096,273,3.096,274,2.835,275,4.375,276,4.053,277,4.693,278,3.096,279,2.835,280,3.096,281,4.908,282,3.445,283,2.626,284,4.375,285,3.785,286,4.375,287,5.655,288,3.852,289,4.777,290,5.317,291,5.317,292,4.206,293,4.681,294,5.401,295,5.401,296,2.954,297,5.401,298,3.975,299,3.445,300,5.401,301,3.785,302,3.445,303,7.575,304,6.582,305,2.41,306,5.704,307,6.582,308,5.401,309,3.975,310,3.975,311,2.835,312,3.975,313,3.975,314,3.975,315,4.681,316,3.975,317,5.401,318,3.975,319,3.975,320,3.975,321,5.401,322,3.975,323,3.975]],["title/components/AppFooterComponent.html",[134,0.357,168,0.931]],["body/components/AppFooterComponent.html",[0,0.069,3,0.152,4,0.152,5,0.115,7,0.252,8,0.632,12,0.617,15,0.457,17,0.457,18,0.016,19,0.561,20,0.279,21,0.457,25,0.781,29,0.462,31,0.171,38,0.008,39,0.011,40,0.008,58,1.562,63,0.846,64,0.82,78,0.617,79,1.065,103,0.508,108,1.656,122,1.719,134,0.597,135,1.024,136,1.51,137,1.247,138,1.247,139,1.247,141,1.065,142,2.29,144,1.634,151,0.908,155,0.945,156,1.024,157,1.152,158,1.152,159,1.571,160,1.452,161,1.247,162,1.247,163,1.247,164,1.065,165,1.247,166,1.065,167,1.247,168,1.652,169,1.859,170,1.247,171,1.065,172,1.247,173,1.065,174,1.199,175,2.1,176,1.024,177,1.152,178,1.247,179,1.065,180,1.247,181,1.065,182,1.247,183,1.634,184,1.024,185,2.008,186,1.024,187,1.247,188,1.024,189,1.065,190,1.247,191,1.065,192,1.065,193,1.108,194,1.065,195,1.065,196,1.065,197,1.065,198,1.152,199,1.065,200,1.152,201,1.065,202,1.247,203,1.065,204,1.065,205,1.396,206,1.065,207,1.024,208,1.199,209,1.247,210,1.247,217,3.068,246,4.404,324,3.841,325,5.808,326,5.808,327,6.479,328,5.808,329,6.347,330,5.808,331,4.433,332,4.433,333,3.452,334,2.296,335,4.433,336,5.808,337,4.433,338,4.433,339,2.592,340,4.433,341,4.433]],["title/components/AppHeaderComponent.html",[134,0.357,171,0.931]],["body/components/AppHeaderComponent.html",[0,0.078,3,0.172,4,0.172,5,0.13,18,0.015,19,0.56,29,0.358,31,0.194,38,0.01,39,0.012,40,0.01,103,0.575,122,1.8,134,0.632,135,1.158,136,1.635,137,1.411,138,1.411,139,1.411,141,1.205,142,2.309,144,1.769,151,1.027,155,1.07,156,1.158,157,1.304,158,1.304,159,1.7,160,1.572,161,1.411,162,1.411,163,1.411,164,1.205,165,1.411,166,1.205,167,1.411,168,1.205,169,1.947,170,1.411,171,1.73,172,1.411,173,1.205,174,1.357,175,2.16,176,1.158,177,1.304,178,1.411,179,1.205,180,1.411,181,1.205,182,1.411,183,1.769,184,1.158,185,2.086,186,1.158,187,1.411,188,1.158,189,1.205,190,1.411,191,1.205,192,1.205,193,1.254,194,1.205,195,1.205,196,1.205,197,1.205,198,1.304,199,1.205,200,1.304,201,1.205,202,1.411,203,1.205,204,1.205,205,1.511,206,1.205,207,1.158,208,1.357,209,1.411,210,1.411,342,4.347,343,5.449,344,6.288,345,3.092]],["title/modules/AppModule.html",[346,2.559,347,2.762]],["body/modules/AppModule.html",[0,0.044,3,0.097,4,0.097,5,0.073,18,0.016,29,0.578,31,0.164,38,0.005,39,0.008,40,0.005,55,2.579,71,2.469,88,3.665,92,1.341,93,2.447,95,2.447,97,1.866,103,0.324,109,0.679,110,2.61,112,2.373,135,1.462,150,1.389,158,0.734,164,1.521,166,1.737,168,1.521,169,0.764,171,1.521,173,1.622,176,1.462,177,0.734,179,1.622,181,1.521,184,1.462,186,1.462,188,1.462,189,1.521,191,1.521,192,1.521,194,1.521,195,1.622,197,1.622,199,1.622,201,1.622,203,1.521,204,1.521,206,1.622,207,1.462,220,3.67,225,2.199,311,2.014,346,1.866,347,5.838,348,1.742,349,2.014,350,3.949,351,2.966,352,3.949,353,2.199,354,2.447,355,2.447,356,2.447,357,2.447,358,2.447,359,4.182,360,3.906,361,2.579,362,4.182,363,2.825,364,3.665,365,2.014,366,2.447,367,4.23,368,3.294,369,3.294,370,4.23,371,2.447,372,1.866,373,2.824,374,4.23,375,2.452,376,4.23,377,4.23,378,2.199,379,4.23,380,4.395,381,1.742,382,4.23,383,2.313,384,2.447,385,2.447,386,2.824,387,2.447,388,2.447,389,2.199,390,4.23,391,1.545,392,1.462,393,2.824,394,2.824,395,2.824,396,2.824,397,2.824,398,2.61,399,2.447,400,2.824,401,2.824,402,1.322,403,1.389,404,2.447,405,2.447,406,2.824,407,2.447,408,2.824,409,2.824,410,2.824,411,2.824,412,2.824,413,2.824,414,2.824,415,2.824,416,2.824,417,2.824,418,2.824,419,2.824,420,3.016,421,2.824,422,2.191,423,1.545,424,2.824,425,2.824,426,4.23,427,1.462,428,1.462,429,3.016,430,3.016,431,3.294,432,2.824,433,4.23,434,2.824,435,2.014,436,2.824,437,2.824,438,2.824,439,2.824,440,2.824,441,2.824,442,3.665,443,2.199,444,2.447,445,2.824,446,2.824,447,2.824,448,2.824,449,2.824,450,2.824,451,2.824,452,2.447,453,2.824,454,2.824,455,2.824,456,2.824,457,4.395,458,4.395,459,3.665,460,2.824,461,1.742,462,1.462,463,2.447,464,2.199]],["title/modules/AppRoutingModule.html",[346,2.559,362,2.559]],["body/modules/AppRoutingModule.html",[0,0.08,3,0.176,4,0.176,5,0.133,18,0.016,20,0.222,29,0.565,31,0.199,38,0.01,39,0.012,40,0.01,97,5.029,103,0.589,108,1.92,109,1.235,132,3.25,134,0.669,135,1.474,143,3.664,156,1.187,176,1.474,177,1.888,188,1.474,207,1.474,208,1.39,345,2.527,348,3.171,353,4.002,362,4.217,368,4.002,369,4.971,387,4.453,388,4.453,398,4.284,399,4.453,404,4.453,405,4.453,465,5.139,466,5.139,467,6.383,468,4.951,469,3.664,470,5.139,471,2.979,472,3.664,473,2.811,474,4.971,475,2.405,476,4.002,477,3.171,478,6.383,479,6.383,480,6.383,481,5.139]],["title/guards/AuthGuard.html",[398,2.39,482,3.017]],["body/guards/AuthGuard.html",[0,0.064,3,0.141,4,0.141,5,0.106,7,0.233,12,0.571,15,0.367,17,0.569,18,0.016,19,0.45,20,0.269,21,0.569,29,0.531,31,0.159,38,0.008,39,0.01,40,0.008,49,0.807,50,4.296,52,1.96,54,1.492,58,1.329,62,4.118,63,0.804,64,0.519,71,2.855,72,3.053,78,0.571,92,2.205,100,1.899,103,0.47,104,1.748,108,1.533,109,1.326,112,1.92,121,1.47,122,1.025,126,3.864,130,1.92,131,3.934,132,3.353,133,1.83,148,3.647,150,3.279,154,1.249,156,1.274,196,0.986,234,3.194,238,2.058,240,2.462,246,3.404,305,2.462,334,2.124,398,3.846,402,1.92,435,2.925,471,2.378,472,2.925,474,5.418,483,3.194,484,3.555,485,3.6,486,4.102,487,5.402,488,6.029,489,6.029,490,4.102,491,2.378,492,4.102,493,1.671,494,4.445,495,2.531,496,4.102,497,4.102,498,6.667,499,4.102,500,3.194,501,4.102,502,4.102,503,4.781,504,5.402,505,3.194,506,3.555,507,3.194,508,3.645,509,3.404,510,5.517,511,4.102,512,3.555,513,4.102,514,3.555,515,3.555,516,4.102,517,3.555,518,4.102,519,4.102,520,4.102,521,4.102,522,4.102,523,2.71,524,4.102,525,4.102,526,5.517,527,4.102,528,4.102]],["title/injectables/AuthService.html",[54,1.048,485,1.905]],["body/injectables/AuthService.html",[0,0.055,3,0.121,4,0.121,5,0.091,7,0.2,8,0.54,12,0.49,15,0.477,17,0.512,18,0.016,19,0.405,20,0.295,21,0.512,25,0.891,29,0.539,31,0.136,38,0.007,39,0.009,40,0.007,49,0.693,52,1.897,54,1.344,56,1.825,58,1.577,63,0.724,64,0.947,72,1.502,78,0.692,79,1.194,83,2.925,89,1.163,90,0.881,92,1.825,100,1.753,103,0.404,104,1.502,108,1.317,112,1.649,113,2.174,114,2.328,130,2.694,132,1.649,148,3.419,150,3.074,151,1.401,154,1.073,216,2.345,218,2.328,228,1.733,238,1.163,240,2.568,245,3.054,246,2.174,252,3.054,311,2.513,333,3.87,334,1.825,339,1.573,381,2.174,422,2.574,435,2.513,461,2.174,473,1.928,485,2.444,494,4.104,507,2.744,508,4.518,529,3.054,530,4.988,531,5.756,532,5.132,533,3.543,534,5.756,535,2.513,536,5.417,537,4.969,538,4.969,539,3.964,540,3.524,541,3.524,542,3.87,543,4.306,544,3.524,545,6.251,546,3.524,547,3.524,548,3.524,549,3.524,550,2.718,551,2.744,552,3.524,553,4.988,554,4.457,555,3.543,556,3.524,557,2.328,558,3.524,559,2.574,560,2.513,561,3.054,562,1.825,563,3.524,564,3.524,565,3.054,566,3.524,567,3.524,568,3.524,569,3.524,570,3.524,571,3.524,572,3.524,573,4.969,574,3.054,575,4.988,576,3.524,577,3.524,578,4.354,579,3.524,580,3.524,581,4.969,582,4.969,583,3.524,584,3.524,585,4.988,586,5.756,587,3.054,588,3.524,589,3.524,590,3.524,591,3.524,592,3.524,593,3.524,594,3.524,595,4.306,596,2.513,597,3.524,598,4.969,599,3.524,600,3.524,601,3.054,602,3.524,603,3.524,604,3.524,605,3.054,606,2.744,607,3.524,608,3.524,609,3.524,610,3.524,611,3.524,612,3.524,613,3.524,614,3.524,615,3.524,616,3.524]],["title/injectables/AuthenticatedHttpService.html",[54,1.048,420,2.762]],["body/injectables/AuthenticatedHttpService.html",[0,0.078,3,0.171,4,0.171,5,0.129,7,0.284,12,0.695,15,0.417,17,0.646,18,0.016,19,0.511,20,0.27,21,0.646,25,0.826,29,0.529,31,0.193,38,0.009,39,0.012,40,0.009,52,1.63,54,1.696,56,2.586,58,1.065,63,0.913,64,0.868,72,3.268,78,0.695,84,2.731,103,0.572,104,2.128,108,1.866,130,2.934,131,3.561,132,2.934,151,1.023,240,3.058,334,2.586,375,2.894,420,4.471,422,3.55,464,3.888,503,4.327,508,3.299,509,3.081,596,3.561,617,4.327,618,4.471,619,5.389,620,6.27,621,7.189,622,7.189,623,7.189,624,4.994,625,6.27,626,5.337,627,7.189,628,4.994,629,4.327,630,4.994,631,4.994,632,4.994,633,7.189,634,3.888,635,4.994,636,4.994,637,4.994,638,4.994,639,4.994,640,4.994,641,4.994,642,4.994]],["title/classes/AuthenticationResponse.html",[0,0.06,643,3.017]],["body/classes/AuthenticationResponse.html",[0,0.061,2,1.475,3,0.136,4,0.136,5,0.102,7,0.224,8,0.585,15,0.532,18,0.016,20,0.343,25,0.927,31,0.153,38,0.007,39,0.01,40,0.007,49,1.393,63,0.783,64,1.048,78,0.986,83,2.861,100,2.304,130,3.071,157,1.589,193,1.528,216,2.491,233,3.006,256,3.071,283,4.038,339,2.728,493,2.19,509,3.772,643,4.186,644,3.421,645,5.297,646,4.896,647,5.297,648,4.76,649,5.297,650,5.297,651,5.297,652,5.687,653,5.687,654,5.687,655,5.687,656,5.687,657,4.658,658,3.947,659,3.947,660,3.947,661,3.947,662,3.947,663,3.947,664,3.947,665,3.947,666,3.947,667,3.947,668,2.19,669,3.947,670,3.947,671,3.947,672,5.993,673,3.947,674,4.658,675,3.947,676,3.947,677,3.947,678,3.947,679,3.947,680,3.947,681,3.947,682,3.947,683,6.139,684,6.139,685,6.139]],["title/injectables/BPMNStore.html",[54,1.048,686,2.762]],["body/injectables/BPMNStore.html",[0,0.078,3,0.123,4,0.123,5,0.093,7,0.204,12,0.5,15,0.335,17,0.371,18,0.016,19,0.293,20,0.155,21,0.371,25,0.701,29,0.491,31,0.225,38,0.007,39,0.01,40,0.007,49,1.24,52,1.31,54,1.363,56,1.862,63,0.734,64,0.871,78,0.5,103,0.412,104,1.532,154,1.095,155,0.767,196,0.864,198,1.31,200,0.935,240,2.814,256,2.359,365,2.564,375,2.084,422,3.565,535,2.564,646,2.564,686,3.594,687,4.531,688,4.531,689,2.8,690,5.465,691,3.596,692,3.596,693,2.8,694,3.116,695,3.116,696,4.368,697,4.368,698,3.116,699,2.564,700,3.116,701,2.564,702,2.084,703,5.043,704,4.368,705,4.368,706,3.116,707,3.116,708,2.564,709,3.116,710,3.116,711,3.116,712,5.465,713,4.368,714,3.33,715,2.564,716,2.757,717,3.116,718,3.116,719,3.116,720,3.116,721,3.116,722,3.116,723,3.116,724,3.116,725,2.8,726,3.116,727,4.368,728,5.402,729,5.043,730,6.565,731,6.7,732,3.116,733,3.116,734,2.8,735,4.143,736,6.565,737,6.565,738,5.465,739,4.497,740,3.116,741,3.116,742,3.116,743,3.116,744,3.116,745,2.084,746,4.368,747,3.116,748,3.116,749,3.116,750,4.368,751,2.376,752,3.116,753,3.796,754,3.116,755,6.352,756,2.48,757,2.376,758,3.116,759,3.116,760,3.116,761,3.116,762,3.116,763,3.116,764,2.564,765,2.8,766,3.116,767,3.116,768,3.116,769,2.564,770,3.116,771,2.376,772,3.116,773,3.116,774,1.768,775,3.116,776,3.116,777,3.116,778,1.967,779,3.116,780,3.116,781,3.116,782,3.116,783,1.768,784,3.116,785,3.116,786,2.564,787,3.116,788,3.116,789,3.116,790,2.564,791,3.116,792,3.116]],["title/classes/CommandStack.html",[0,0.06,793,3.017]],["body/classes/CommandStack.html",[0,0.081,2,0.916,3,0.084,4,0.084,5,0.063,7,0.139,8,0.413,10,2.785,12,0.528,15,0.504,17,0.253,18,0.016,19,0.2,20,0.312,21,0.253,25,0.881,27,1.908,29,0.428,31,0.095,32,3.619,38,0.005,39,0.007,40,0.005,49,1.029,52,1.472,55,2.132,58,1.7,59,3.619,63,0.553,64,0.955,74,2.407,78,0.341,79,0.589,84,1.34,89,2.392,90,1.75,92,1.203,96,3.29,97,1.619,100,1.156,105,1.42,106,1.512,109,1.439,110,3.229,113,1.512,114,1.619,126,2.201,151,0.502,155,1.207,160,0.949,184,0.566,186,1.383,205,0.912,216,2.441,238,1.253,249,3.742,264,1.747,305,1.093,345,3.563,372,1.619,403,1.205,407,2.123,435,1.747,461,2.342,523,2.508,542,2.956,714,3.458,753,1.966,771,2.508,793,5.642,794,2.123,795,4.647,796,4.647,797,5.234,798,7.001,799,4.604,800,4.647,801,5.869,802,6.248,803,4.647,804,4.647,805,4.647,806,4.647,807,4.647,808,4.647,809,3.704,810,5.234,811,3.796,812,3.796,813,2.45,814,2.45,815,2.45,816,2.45,817,2.45,818,2.45,819,2.45,820,2.45,821,2.45,822,2.45,823,2.45,824,2.45,825,2.45,826,2.45,827,2.45,828,2.45,829,2.45,830,2.45,831,2.45,832,2.45,833,2.45,834,3.29,835,2.45,836,2.45,837,2.123,838,2.123,839,3.796,840,3.796,841,4.647,842,4.647,843,2.45,844,1.908,845,2.45,846,2.45,847,2.45,848,2.45,849,4.027,850,2.45,851,3.796,852,2.123,853,3.796,854,1.42,855,1.908,856,1.908,857,4.076,858,2.45,859,2.45,860,2.45,861,2.45,862,2.45,863,2.45,864,2.45,865,2.45,866,2.45,867,6.456,868,2.45,869,3.796,870,2.45,871,4.076,872,2.45,873,5.663,874,3.796,875,2.45,876,2.45,877,2.123,878,2.45,879,1.42,880,4.536,881,3.796,882,2.45,883,5.234,884,3.796,885,1.908,886,1.908,887,2.45,888,2.45,889,2.45,890,3.796,891,2.45,892,2.45,893,2.45,894,2.123,895,2.45,896,2.45,897,2.123,898,2.123,899,2.45,900,2.45,901,2.45,902,3.07,903,1.908,904,2.45,905,1.34,906,2.123,907,3.458,908,1.619,909,1.619,910,2.45,911,2.45,912,4.027,913,3.796,914,2.123,915,2.45,916,1.908,917,4.536,918,2.342,919,3.29,920,4.027,921,2.45,922,2.45,923,2.123,924,2.45,925,2.123,926,2.45,927,2.45,928,2.45,929,2.45,930,2.45,931,2.45,932,2.45,933,2.45,934,2.45,935,2.45,936,2.45,937,2.45,938,2.45,939,2.45,940,2.45,941,2.45,942,2.45,943,1.42,944,1.747,945,2.45,946,2.123,947,2.45,948,2.45,949,2.45,950,2.123,951,2.123,952,1.619,953,2.45,954,1.747,955,2.45,956,2.45,957,2.45,958,2.45,959,2.45,960,2.45,961,2.45,962,2.45,963,2.45,964,2.45,965,2.45,966,2.123,967,2.45,968,2.45,969,2.45,970,1.747,971,3.796,972,1.619,973,2.45,974,2.45,975,2.45,976,2.45,977,2.45,978,1.42,979,2.45,980,2.45,981,2.45,982,6.628,983,2.45,984,2.45,985,2.45]],["title/classes/Entry.html",[0,0.06,986,2.762]],["body/classes/Entry.html",[0,0.083,2,1.994,3,0.183,4,0.183,5,0.138,7,0.303,8,0.71,12,0.742,15,0.502,17,0.673,18,0.016,19,0.533,20,0.325,21,0.673,25,0.946,29,0.381,31,0.206,38,0.01,39,0.012,40,0.01,58,1.506,63,0.952,64,1.002,78,0.742,79,1.282,100,1.99,238,1.761,735,4.129,986,4.658,987,4.623,988,2.877,989,4.665,990,6.533,991,6.533,992,5.335,993,5.335,994,5.335,995,5.335,996,6.533,997,5.335,998,5.661,999,6.533,1000,6.533,1001,5.335,1002,5.335,1003,3.092]],["title/interceptors/ErrorInterceptor.html",[430,2.762,1004,2.762]],["body/interceptors/ErrorInterceptor.html",[0,0.081,3,0.18,4,0.18,5,0.135,7,0.298,12,0.729,15,0.429,17,0.666,18,0.016,19,0.526,20,0.278,21,0.666,29,0.536,31,0.203,38,0.01,39,0.012,40,0.01,52,1.679,54,1.746,63,0.941,78,0.729,103,0.6,104,2.231,109,1.258,121,1.876,130,2.45,154,1.594,240,3.124,288,3.733,334,2.711,381,3.23,430,4.604,485,3.595,493,2.133,532,4.077,551,4.077,619,3.733,629,4.537,634,5.028,1005,4.077,1006,4.537,1007,5.028,1008,5.235,1009,5.235,1010,6.457,1011,5.028,1012,5.692,1013,4.993,1014,5.692,1015,5.235,1016,4.077,1017,5.028,1018,3.23,1019,5.235,1020,5.235,1021,5.235,1022,4.537,1023,5.235,1024,5.235,1025,5.235,1026,5.235,1027,5.235]],["title/components/EvalModal.html",[134,0.357,173,0.931]],["body/components/EvalModal.html",[0,0.043,3,0.096,4,0.096,5,0.072,7,0.319,8,0.457,12,0.389,15,0.518,17,0.578,18,0.016,19,0.533,20,0.325,21,0.578,25,0.908,29,0.45,31,0.108,38,0.008,39,0.008,40,0.005,49,0.826,58,1.657,63,0.612,64,1.019,72,1.192,78,0.976,79,1.733,89,2.272,90,1.721,92,2,100,2.05,103,0.321,108,1.046,122,1.401,134,0.464,135,0.646,136,1.092,137,0.787,138,0.787,139,0.787,141,0.672,142,2.2,144,1.182,151,0.573,154,0.852,155,0.597,156,0.646,157,0.727,158,0.727,159,1.136,160,1.05,161,0.787,162,0.787,163,0.787,164,0.672,165,0.787,166,0.672,167,0.787,168,0.672,169,1.136,170,0.787,171,0.672,172,0.787,173,1.347,174,1.364,175,1.841,176,0.646,177,0.727,178,0.787,179,0.672,180,1.182,181,1.009,182,0.787,183,1.182,184,0.646,185,1.69,186,0.646,187,0.787,188,0.646,189,0.672,190,0.787,191,0.672,192,0.672,193,0.699,194,0.672,195,0.672,196,0.672,197,0.672,198,0.727,199,0.672,200,1.562,201,0.672,202,0.787,203,0.672,204,0.672,205,1.654,206,0.672,207,0.646,208,0.757,209,0.787,210,0.787,238,1.386,258,1.79,296,2.758,345,2.954,351,1.376,383,1.53,391,1.53,392,3.267,427,1.449,428,1.449,461,2.592,562,3.389,668,1.712,753,2.175,756,1.79,757,4.323,764,2.995,771,2.775,778,2.297,783,2.066,854,1.622,905,3.066,988,2.055,1028,2.425,1029,4.201,1030,3.112,1031,2.923,1032,2.923,1033,3.112,1034,4.678,1035,4.678,1036,3.112,1037,2.923,1038,3.997,1039,3.64,1040,3.657,1041,3.482,1042,3.459,1043,3.482,1044,2.775,1045,4.858,1046,1.622,1047,3.249,1048,4.201,1049,2.435,1050,2.798,1051,2.798,1052,3.64,1053,2.798,1054,2.425,1055,2.798,1056,2.798,1057,2.798,1058,2.435,1059,2.798,1060,1.622,1061,2.798,1062,2.592,1063,2.798,1064,2.798,1065,2.798,1066,2.798,1067,2.798,1068,2.798,1069,2.798,1070,2.798,1071,2.798,1072,2.798,1073,2.798,1074,2.798,1075,2.798,1076,2.798,1077,2.798,1078,1.622,1079,2.435,1080,2.425,1081,1.848,1082,1.622,1083,1.622,1084,1.848,1085,1.622,1086,1.622,1087,1.726,1088,2.179,1089,1.622,1090,2.798,1091,1.726,1092,2.425,1093,5.043,1094,2.798,1095,2.798,1096,2.798,1097,2.798,1098,1.995,1099,2.798,1100,2.903,1101,3.271,1102,3.64,1103,2.297,1104,1.449,1105,2.297]],["title/interceptors/FakeBackendInterceptor.html",[1004,2.762,1106,3.017]],["body/interceptors/FakeBackendInterceptor.html",[0,0.063,3,0.139,4,0.139,5,0.105,7,0.231,9,2.893,10,3.049,11,2.893,15,0.27,17,0.418,18,0.016,19,0.331,20,0.236,21,0.418,23,3.618,27,3.159,29,0.521,31,0.212,38,0.008,39,0.01,40,0.008,49,1.077,52,1.956,54,1.481,58,0.865,63,0.798,64,0.514,78,0.565,83,2.901,92,1.286,103,0.465,104,1.729,109,1.595,121,2.221,151,1.359,156,1.432,216,2.231,236,3.516,240,2.962,283,2.68,305,2.444,306,3.516,334,2.101,339,2.766,380,4.746,381,2.503,422,2.101,431,3.159,457,3.516,458,3.516,459,3.516,463,5.372,464,4.264,471,2.352,472,2.893,473,2.219,493,1.653,500,4.264,539,3.593,551,4.827,554,3.905,559,2.836,560,2.893,578,4.385,605,3.516,619,2.893,634,3.159,648,3.159,714,2.68,857,4.827,880,4.746,954,2.893,1005,3.159,1007,4.264,1011,4.264,1012,5.169,1013,4.42,1014,5.169,1016,3.159,1017,4.264,1022,3.516,1106,4.827,1107,4.746,1108,3.516,1109,4.057,1110,5.476,1111,5.476,1112,4.057,1113,5.476,1114,5.476,1115,3.905,1116,6.006,1117,3.618,1118,3.618,1119,5.476,1120,4.057,1121,5.476,1122,4.057,1123,4.057,1124,4.057,1125,4.057,1126,4.057,1127,4.057,1128,6.199,1129,5.476,1130,4.057,1131,4.057,1132,4.057,1133,4.057,1134,4.057,1135,4.057,1136,4.057,1137,4.057,1138,4.057,1139,2.893,1140,3.159,1141,3.159,1142,4.057,1143,6.199,1144,4.057,1145,4.057,1146,4.057,1147,3.516,1148,4.057,1149,4.057,1150,3.516,1151,4.057,1152,4.057,1153,4.057,1154,4.057,1155,4.057,1156,4.057,1157,4.057,1158,4.057,1159,4.057,1160,4.057,1161,4.057,1162,4.057,1163,4.057,1164,4.057,1165,3.516,1166,3.159]],["title/interfaces/FileReaderEvent.html",[1167,2.006,1168,2.762]],["body/interfaces/FileReaderEvent.html",[3,0.202,4,0.202,5,0.152,7,0.334,8,0.753,15,0.391,18,0.015,20,0.253,25,0.887,31,0.227,38,0.013,39,0.013,40,0.011,63,1.009,78,0.818,232,5.918,249,4.013,618,5.248,1167,3.586,1168,4.937,1169,4.191,1170,4.577,1171,6.586,1172,5.877,1173,5.419,1174,5.093]],["title/interfaces/FileReaderEventTarget.html",[1167,2.006,1173,2.762]],["body/interfaces/FileReaderEventTarget.html",[3,0.205,4,0.205,5,0.155,7,0.34,8,0.761,18,0.015,20,0.258,25,0.921,31,0.231,38,0.015,39,0.013,40,0.011,232,4.658,249,3.468,618,5.287,1167,3.623,1168,4.266,1169,4.266,1170,4.658,1171,5.184,1173,5.287,1174,6.062]],["title/pipes/FilterUnique.html",[359,2.559,550,2.119]],["body/pipes/FilterUnique.html",[0,0.085,3,0.188,4,0.188,5,0.141,15,0.363,17,0.563,18,0.016,19,0.582,20,0.236,21,0.563,29,0.39,31,0.211,38,0.01,39,0.013,40,0.01,49,1.075,52,1.929,63,0.796,64,0.839,78,0.761,84,2.989,90,1.657,92,1.733,103,0.626,109,1.715,141,1.313,238,1.804,301,3.372,359,4.902,493,2.227,550,3.626,756,2.329,944,5.088,1175,3.897,1176,4.736,1177,5.162,1178,5.557,1179,5.466,1180,5.162,1181,4.256,1182,5.466,1183,5.466,1184,5.466,1185,5.466,1186,5.466,1187,5.466,1188,5.466,1189,5.466,1190,7.136,1191,5.466,1192,5.466]],["title/components/FrontPageComponent.html",[134,0.357,176,0.895]],["body/components/FrontPageComponent.html",[0,0.032,3,0.071,4,0.071,5,0.053,7,0.189,8,0.361,12,0.462,15,0.428,17,0.342,18,0.016,19,0.425,20,0.205,21,0.213,25,0.501,29,0.47,31,0.08,38,0.004,39,0.006,40,0.004,52,1.081,55,0.842,58,1.297,63,0.484,64,0.526,71,0.806,72,2.494,78,0.462,79,0.798,83,2.229,89,1.838,90,1.19,92,1.052,103,0.237,108,0.772,112,0.967,113,1.275,114,1.365,121,2.308,122,1.19,132,2.606,134,0.48,135,0.477,136,1.081,137,0.581,138,0.581,139,0.581,141,0.497,142,2.119,144,0.934,148,2.604,150,2.342,151,1.319,152,2.048,155,0.441,156,0.477,157,0.537,158,0.537,159,1.125,160,0.83,161,0.581,162,0.581,163,0.581,164,0.497,165,0.581,166,0.497,167,0.581,168,0.497,169,0.898,170,0.581,171,0.497,172,0.581,173,0.497,174,0.559,175,1.646,176,1.1,177,1.743,178,0.581,179,0.497,180,0.581,181,0.497,182,0.581,183,0.934,184,0.477,185,1.467,186,0.477,187,0.581,188,0.477,189,0.497,190,0.581,191,0.497,192,0.497,193,1.304,194,0.497,195,0.497,196,0.497,197,0.497,198,0.537,199,0.497,200,0.537,201,0.497,202,0.581,203,0.497,204,0.497,205,0.798,206,0.497,207,0.477,208,0.559,209,0.581,210,0.581,217,2.125,220,1.198,224,2.566,225,1.609,238,1.721,246,2.938,256,2.229,258,3.131,260,3.146,264,1.474,265,3.719,266,2.585,268,4.019,269,1.609,270,1.609,271,1.609,272,1.609,273,1.609,274,3.396,275,3.719,276,3.866,277,1.474,278,1.609,279,4.173,280,4.061,281,4.593,282,1.791,283,1.365,284,3.396,285,2.566,286,3.396,287,4.061,288,2.966,289,1.609,292,2.585,299,2.876,301,1.275,305,0.922,329,4.127,334,1.07,361,0.842,378,1.609,402,0.967,403,1.016,475,0.967,477,2.566,485,2.878,491,1.198,493,1.352,495,1.275,504,1.791,505,1.609,506,1.791,507,1.609,508,4.019,509,1.275,512,3.604,523,1.365,533,2.367,539,3.886,606,1.609,699,2.367,708,3.396,715,1.474,739,1.474,753,1.07,877,2.876,886,1.609,894,1.791,946,5.81,1018,1.275,1060,1.924,1167,1.07,1193,5.126,1194,1.791,1195,4.159,1196,3.319,1197,4.159,1198,3.604,1199,4.159,1200,4.762,1201,4.159,1202,2.067,1203,5.569,1204,3.319,1205,2.067,1206,2.067,1207,2.067,1208,4.159,1209,2.067,1210,3.319,1211,2.067,1212,2.067,1213,2.067,1214,2.067,1215,2.067,1216,2.067,1217,2.067,1218,1.791,1219,1.791,1220,1.365,1221,2.067,1222,2.067,1223,3.319,1224,3.319,1225,2.067,1226,2.067,1227,2.067,1228,2.067,1229,2.067,1230,6.812,1231,2.067,1232,2.067,1233,2.067,1234,2.067,1235,2.067,1236,3.319,1237,2.067,1238,2.067,1239,2.067,1240,2.367,1241,2.067,1242,2.067,1243,2.067,1244,2.067,1245,2.067,1246,2.067,1247,2.067,1248,2.067,1249,2.067,1250,4.476,1251,3.319,1252,4.762,1253,4.762,1254,3.319,1255,2.067,1256,2.067,1257,2.067,1258,2.067,1259,2.067,1260,2.067,1261,1.791,1262,2.067,1263,2.876,1264,5.016,1265,1.791,1266,2.067,1267,6.583,1268,2.067,1269,4.159,1270,5.378,1271,4.762,1272,4.762,1273,2.067,1274,5.215,1275,5.215,1276,2.067,1277,2.067,1278,2.067,1279,2.067,1280,2.067,1281,2.067,1282,6.084,1283,2.067,1284,2.067,1285,2.067,1286,3.319,1287,6.367,1288,5.582,1289,5.215,1290,2.067,1291,2.067,1292,2.067,1293,3.319,1294,1.791,1295,4.429,1296,4.159,1297,4.159,1298,2.067,1299,2.067,1300,5.569,1301,2.067,1302,4.762,1303,2.067,1304,4.061,1305,1.791,1306,4.159,1307,3.319,1308,3.319,1309,6.084,1310,3.604,1311,5.44,1312,1.791,1313,2.067,1314,5.569,1315,3.319,1316,5.215,1317,2.067,1318,4.762,1319,4.762,1320,2.067,1321,2.067,1322,2.067,1323,2.067,1324,2.067,1325,1.791,1326,2.067,1327,2.876,1328,1.791,1329,2.067,1330,2.067,1331,2.067,1332,7.133,1333,5.215,1334,5.215,1335,4.159,1336,3.319,1337,2.067,1338,2.876,1339,2.067,1340,1.791,1341,2.067,1342,2.067,1343,2.067,1344,1.198,1345,3.319,1346,1.791,1347,2.067,1348,2.067,1349,2.067,1350,2.067,1351,5.569,1352,2.067,1353,2.067,1354,2.067,1355,2.067,1356,2.067,1357,2.067,1358,2.067,1359,1.609,1360,2.067,1361,2.067,1362,4.762,1363,3.319,1364,4.762,1365,3.319,1366,3.319,1367,2.067,1368,2.067]],["title/modules/FrontPageModule.html",[346,2.559,1369,3.017]],["body/modules/FrontPageModule.html",[0,0.094,3,0.208,4,0.208,5,0.156,18,0.015,29,0.503,31,0.234,38,0.011,39,0.013,40,0.011,103,0.693,348,3.731,350,4.709,368,4.709,369,5.482,442,6.101,443,4.709,1193,4.709,1369,5.482,1370,6.047,1371,6.047]],["title/components/InputModal.html",[134,0.357,179,0.931]],["body/components/InputModal.html",[0,0.039,3,0.087,4,0.087,5,0.065,7,0.302,8,0.422,12,0.351,15,0.514,17,0.592,18,0.016,19,0.545,20,0.321,21,0.592,25,0.921,29,0.433,31,0.098,38,0.007,39,0.007,40,0.005,49,0.764,58,1.637,63,0.566,64,1.013,72,1.076,78,0.967,79,1.734,89,2.207,90,1.785,92,1.922,100,2.116,103,0.289,108,0.943,109,1.379,122,1.329,134,0.436,135,0.583,136,1.01,137,0.71,138,0.71,139,0.71,141,0.606,142,2.174,144,1.093,151,0.517,154,0.769,155,0.538,156,0.583,157,0.656,158,0.656,159,1.05,160,0.971,161,0.71,162,0.71,163,0.71,164,0.606,165,0.71,166,0.606,167,0.71,168,0.606,169,1.05,170,0.71,171,0.606,172,0.71,173,0.606,174,0.683,175,1.777,176,0.583,177,0.656,178,0.71,179,1.277,180,1.496,181,0.933,182,0.71,183,1.093,184,0.583,185,1.615,186,0.583,187,0.71,188,0.583,189,0.606,190,0.71,191,0.606,192,0.606,193,0.631,194,0.606,195,0.606,196,0.606,197,0.606,198,0.656,199,0.606,200,1.492,201,0.606,202,0.71,203,0.606,204,0.606,205,1.457,206,0.606,207,0.583,208,0.683,209,0.71,210,0.71,238,1.563,258,2.018,296,2.59,345,2.823,351,1.241,383,1.381,391,1.381,392,2.973,427,1.307,428,1.307,461,2.397,562,3.27,668,1.583,753,2.012,756,1.655,757,3.128,764,2.77,771,2.566,778,2.125,783,2.328,799,2.77,854,2.251,871,3.025,905,2.908,970,1.8,972,1.668,988,1.929,1030,2.921,1031,2.744,1032,2.744,1033,2.921,1034,4.47,1035,4.47,1036,2.921,1037,2.744,1038,3.791,1039,3.366,1040,3.514,1041,3.327,1042,2.921,1043,3.082,1044,2.566,1045,4.607,1046,1.463,1047,3.082,1049,2.251,1052,3.366,1054,2.187,1058,2.251,1060,1.463,1062,2.397,1078,1.463,1079,2.251,1080,2.187,1081,1.668,1082,1.463,1083,1.463,1084,1.668,1085,1.463,1086,1.463,1088,1.966,1089,1.463,1091,1.557,1092,2.187,1100,2.754,1101,3.025,1102,3.366,1103,2.125,1104,1.307,1105,2.125,1372,2.187,1373,3.884,1374,3.366,1375,3.884,1376,2.524,1377,3.366,1378,4.14,1379,2.524,1380,2.524,1381,2.524,1382,2.524,1383,2.524,1384,2.524,1385,2.524,1386,2.524,1387,2.524,1388,2.524,1389,2.524,1390,2.524,1391,2.524,1392,2.524,1393,2.524,1394,2.524,1395,2.524,1396,2.524,1397,2.524,1398,2.524,1399,2.524,1400,2.524,1401,2.524,1402,1.8,1403,2.524,1404,2.524,1405,2.187,1406,3.884,1407,2.524,1408,2.524,1409,2.524,1410,2.524,1411,2.524,1412,2.524,1413,2.524,1414,2.524,1415,2.524,1416,2.524,1417,2.524,1418,2.524,1419,2.524,1420,2.524,1421,2.524,1422,2.524,1423,2.524,1424,2.524,1425,2.524,1426,1.8,1427,1.8,1428,2.77,1429,2.77,1430,1.8,1431,1.8,1432,1.8,1433,1.8,1434,2.77,1435,1.8,1436,2.187,1437,2.187,1438,2.187,1439,3.128,1440,3.791,1441,2.187,1442,2.187,1443,1.966,1444,1.966,1445,1.966,1446,1.966,1447,1.8,1448,1.8,1449,1.8,1450,1.8,1451,1.8,1452,1.8,1453,1.8,1454,1.8,1455,1.8,1456,1.8,1457,1.8,1458,1.8,1459,1.8,1460,1.8,1461,1.966,1462,1.8,1463,1.8,1464,1.8,1465,3.884,1466,3.884,1467,2.524,1468,2.524,1469,2.524,1470,2.524,1471,2.187,1472,2.187]],["title/components/InputVarComponent.html",[134,0.357,181,0.931]],["body/components/InputVarComponent.html",[0,0.073,3,0.162,4,0.162,5,0.122,7,0.268,15,0.314,18,0.015,19,0.544,20,0.203,29,0.432,31,0.183,38,0.009,39,0.011,40,0.009,49,1.19,64,0.597,103,0.541,122,1.76,134,0.615,135,1.09,136,1.573,137,1.328,138,1.328,139,1.328,141,1.134,142,2.3,144,1.702,151,0.967,155,1.006,156,1.09,157,1.227,158,1.227,159,1.636,160,1.512,161,1.328,162,1.328,163,1.328,164,1.134,165,1.328,166,1.134,167,1.328,168,1.134,169,1.636,170,1.328,171,1.134,172,1.328,173,1.134,174,1.276,175,2.131,176,1.09,177,1.227,178,1.328,179,1.134,180,1.878,181,1.692,182,1.878,183,1.702,184,1.09,185,2.048,186,1.09,187,1.328,188,1.09,189,1.134,190,1.328,191,1.134,192,1.134,193,1.18,194,1.134,195,1.134,196,1.134,197,1.134,198,1.227,199,1.134,200,1.893,201,1.134,202,1.328,203,1.134,204,1.134,205,1.79,206,1.134,207,1.09,208,1.276,209,1.328,210,1.328,756,2.578,783,2.975,1100,3.133,1103,3.309,1104,2.444,1105,3.309,1473,4.09,1474,5.242,1475,6.049,1476,4.711,1477,5.786,1478,4.719,1479,6.049]],["title/interceptors/JwtInterceptor.html",[429,2.762,1004,2.762]],["body/interceptors/JwtInterceptor.html",[0,0.082,3,0.181,4,0.181,5,0.137,7,0.301,12,0.735,15,0.432,17,0.669,18,0.016,19,0.529,20,0.28,21,0.669,29,0.524,31,0.204,38,0.01,39,0.012,40,0.01,52,1.374,54,1.756,63,0.946,78,0.735,103,0.605,104,2.252,154,1.61,240,3.137,343,4.58,381,3.261,429,4.631,485,3.769,493,2.153,494,4.631,495,3.261,554,3.768,578,3.491,619,4.631,1005,4.115,1007,5.057,1011,5.057,1012,5.711,1013,5.014,1014,5.711,1016,4.115,1017,5.057,1018,3.261,1150,4.58,1480,4.58,1481,4.58,1482,5.285,1483,5.285,1484,3.768,1485,6.495,1486,4.58,1487,6.495,1488,5.285,1489,5.285,1490,5.285]],["title/classes/Link.html",[0,0.06,701,2.762]],["body/classes/Link.html",[0,0.076,2,1.287,3,0.118,4,0.118,5,0.089,7,0.196,8,0.532,12,0.479,15,0.411,17,0.355,18,0.016,19,0.281,20,0.267,21,0.674,25,0.906,29,0.485,31,0.22,38,0.007,39,0.009,40,0.007,49,1.217,52,1.271,54,1.322,64,0.931,84,2.674,103,0.395,104,1.468,154,1.049,155,0.734,196,0.828,198,1.271,200,0.896,240,2.536,256,3.177,365,2.456,375,1.997,422,2.944,646,2.456,686,2.456,687,5.088,688,5.088,689,2.682,690,2.985,693,2.682,694,2.985,695,2.985,696,4.237,697,4.237,698,2.985,699,2.456,700,2.985,701,3.487,702,1.997,703,6.289,704,5.662,705,5.882,706,2.985,707,2.985,708,2.456,709,2.985,710,2.985,711,2.985,712,5.362,713,4.237,714,3.23,715,2.456,716,2.674,717,2.985,718,2.985,719,2.985,720,2.985,721,2.985,722,2.985,723,2.985,724,2.985,725,2.682,726,2.985,727,4.237,728,5.36,729,4.926,730,6.515,731,6.658,732,2.985,733,2.985,734,2.682,735,4.112,736,6.515,737,6.515,738,5.362,739,4.412,740,2.985,741,2.985,742,2.985,743,2.985,744,2.985,745,1.997,746,4.237,747,2.985,748,2.985,749,2.985,750,4.237,751,2.276,752,2.985,753,3.759,754,2.985,755,6.289,756,2.422,757,2.276,758,2.985,759,2.985,760,2.985,761,2.985,762,2.985,763,2.985,764,2.456,765,2.682,766,2.985,767,2.985,768,2.985,769,2.456,770,2.985,771,2.276,772,2.985,773,2.985,774,1.694,775,2.985,776,2.985,777,2.985,778,1.884,779,2.985,780,2.985,781,2.985,782,2.985,783,1.694,784,2.985,785,2.985,786,2.456,787,2.985,788,2.985,789,2.985,790,2.456,791,2.985,792,2.985,1491,3.445,1492,3.445,1493,5.684]],["title/classes/LoginPayloadDto.html",[0,0.06,555,2.762]],["body/classes/LoginPayloadDto.html",[0,0.088,2,2.111,3,0.194,4,0.194,5,0.146,7,0.321,8,0.736,12,0.786,15,0.481,17,0.582,18,0.015,19,0.461,20,0.312,21,0.582,29,0.483,31,0.219,38,0.011,39,0.013,40,0.011,151,1.571,555,4.822,559,4.076,578,5.2,1494,4.896,1495,5.861,1496,5.612,1497,6.763,1498,5.65,1499,4.896,1500,5.65]],["title/classes/LoginResponse.html",[0,0.06,1501,3.017]],["body/classes/LoginResponse.html",[0,0.061,2,1.475,3,0.136,4,0.136,5,0.102,7,0.224,8,0.585,15,0.532,18,0.016,20,0.343,25,0.927,31,0.153,38,0.007,39,0.01,40,0.007,49,1.393,63,0.783,64,1.048,78,0.986,83,2.861,100,2.304,130,3.071,157,1.589,193,1.528,216,2.491,233,3.006,256,3.071,283,4.038,339,2.728,493,2.19,509,3.772,645,5.297,646,4.896,647,5.297,648,4.76,649,5.297,650,5.297,651,5.297,652,5.687,653,5.687,654,5.687,655,5.687,656,5.687,657,4.658,668,2.19,672,5.993,674,4.658,683,6.139,684,6.139,685,6.139,1501,4.186,1502,3.421,1503,3.947,1504,3.947,1505,3.947,1506,3.947,1507,3.947,1508,3.947,1509,3.947,1510,3.947,1511,3.947,1512,3.947,1513,3.947,1514,3.947,1515,3.947,1516,3.947,1517,3.947,1518,3.947,1519,3.947,1520,3.947,1521,3.947,1522,3.947,1523,3.947,1524,3.947]],["title/classes/Model.html",[0,0.06,155,0.826]],["body/classes/Model.html",[0,0.055,2,1.32,3,0.121,4,0.121,5,0.091,7,0.201,8,0.541,10,2.834,12,0.802,15,0.533,17,0.752,18,0.016,19,0.616,20,0.336,21,0.752,25,0.955,29,0.252,31,0.137,38,0.007,39,0.009,40,0.007,52,1.898,58,1.708,68,3.06,78,1.016,79,1.754,90,1.955,100,2.382,155,1.061,186,1.658,361,2.348,389,2.75,533,3.549,668,2.788,716,3.152,756,3.11,907,3.807,1525,3.06,1526,5.763,1527,5.763,1528,5.763,1529,5.763,1530,5.763,1531,5.763,1532,5.763,1533,5.763,1534,5.763,1535,4.994,1536,5.763,1537,4.109,1538,4.977,1539,3.532,1540,3.532,1541,3.532,1542,3.532,1543,3.532,1544,3.532,1545,3.532,1546,3.532,1547,3.532,1548,3.532,1549,3.532,1550,3.532,1551,3.532,1552,3.532,1553,3.532,1554,3.532,1555,3.532,1556,3.532,1557,3.532,1558,3.532,1559,3.532,1560,3.532,1561,3.532,1562,3.532,1563,3.532,1564,3.532,1565,3.532,1566,3.532,1567,3.532,1568,3.532,1569,3.532,1570,3.532,1571,3.532,1572,3.532,1573,3.532,1574,3.532,1575,3.532,1576,3.532,1577,3.532,1578,3.532,1579,3.532,1580,3.532,1581,3.532,1582,4.977,1583,3.532,1584,4.977,1585,3.532,1586,4.977,1587,3.532,1588,4.977,1589,3.532,1590,4.977,1591,3.532,1592,4.977,1593,3.532,1594,4.977,1595,3.532,1596,4.977,1597,3.532,1598,4.977,1599,3.532]],["title/components/ModelComponent.html",[134,0.357,184,0.895]],["body/components/ModelComponent.html",[0,0.047,3,0.105,4,0.105,5,0.079,7,0.174,8,0.488,12,0.425,15,0.468,17,0.315,18,0.016,19,0.477,20,0.252,21,0.315,25,0.849,29,0.418,31,0.118,38,0.006,39,0.009,40,0.006,49,1.151,55,2.385,58,1.549,63,0.653,64,0.961,70,1.771,71,2.541,74,2.751,78,0.867,79,1.498,103,0.35,109,0.734,121,2.233,122,1.463,130,2.099,133,2.781,134,0.489,135,0.706,136,1.166,137,0.86,138,0.86,139,0.86,141,0.734,142,2.22,144,1.262,151,0.626,154,0.931,155,1.549,156,0.706,157,0.794,158,0.794,159,1.213,160,1.121,161,0.86,162,0.86,163,0.86,164,0.734,165,0.86,166,0.734,167,0.86,168,0.734,169,1.213,170,0.86,171,0.734,172,0.86,173,0.734,174,0.826,175,1.894,176,0.706,177,0.794,178,0.86,179,0.734,180,0.86,181,0.734,182,0.86,183,1.262,184,1.352,185,1.754,186,0.706,187,0.86,188,0.706,189,0.734,190,0.86,191,0.734,192,0.734,193,0.764,194,0.734,195,0.734,196,0.734,197,0.734,198,0.794,199,0.734,200,0.794,201,0.734,202,0.86,203,0.734,204,0.734,205,1.077,206,0.734,207,0.706,208,0.826,209,0.86,210,0.86,216,1.245,217,2.612,228,2.205,233,2.878,247,2.453,339,2.37,361,2.919,363,3.004,402,1.43,403,1.503,423,1.671,462,2.322,473,3.201,475,1.43,774,1.503,809,1.671,879,1.771,902,2.019,908,2.019,909,2.019,918,2.767,943,1.771,978,1.771,988,2.54,1003,2.599,1600,2.648,1601,2.599,1602,4.484,1603,5.401,1604,4.445,1605,5.853,1606,5.853,1607,5.853,1608,4.484,1609,3.055,1610,3.055,1611,3.055,1612,3.055,1613,3.055,1614,3.055,1615,3.055,1616,2.019,1617,2.019,1618,2.019,1619,2.648,1620,4.445,1621,4.604,1622,2.179,1623,2.648,1624,2.648,1625,3.055,1626,1.885,1627,4.173,1628,2.648,1629,3.409,1630,2.767,1631,4.02,1632,2.648,1633,2.648,1634,3.392,1635,1.671,1636,3.611,1637,2.019,1638,3.055,1639,3.886,1640,2.648,1641,3.055,1642,3.886,1643,4.604,1644,3.055,1645,3.788,1646,3.51,1647,3.055,1648,3.055,1649,2.019,1650,3.055,1651,3.055,1652,2.179,1653,2.962,1654,5.853,1655,4.484,1656,2.599]],["title/classes/ModelElement.html",[0,0.06,1657,2.762]],["body/classes/ModelElement.html",[0,0.087,2,2.104,3,0.193,4,0.193,5,0.146,7,0.32,8,0.734,10,3.768,12,0.784,15,0.498,17,0.58,18,0.015,19,0.625,20,0.323,21,0.58,25,0.975,31,0.218,38,0.011,39,0.013,40,0.011,64,1.004,702,3.264,907,5.062,1657,4.813,1658,4.879,1659,4.879,1660,5.631,1661,7.228]],["title/components/ModelLoaderComponent.html",[134,0.357,189,0.931]],["body/components/ModelLoaderComponent.html",[0,0.034,3,0.075,4,0.075,5,0.155,7,0.125,8,0.379,12,0.485,15,0.493,17,0.446,18,0.016,19,0.535,20,0.298,21,0.446,25,0.87,29,0.478,31,0.085,38,0.004,39,0.007,40,0.004,49,1.29,55,2.008,58,1.654,63,0.507,64,0.971,65,1.71,71,2.338,72,2.554,74,2.242,78,0.913,79,1.609,89,1.15,90,0.871,103,0.252,105,1.273,106,1.355,108,0.82,109,1.374,110,1.355,112,1.027,115,1.565,121,2.228,122,1.232,130,2.805,131,2.484,132,1.63,133,2.398,134,0.399,135,0.507,136,0.906,137,0.618,138,0.618,139,0.618,141,0.527,142,2.137,144,0.98,148,2.695,150,2.423,151,0.713,155,1.563,156,0.507,157,1.126,158,0.571,159,0.942,160,0.871,161,0.618,162,0.618,163,0.618,164,0.527,165,0.618,166,0.527,167,0.618,168,0.527,169,0.942,170,0.618,171,0.527,172,0.618,173,0.527,174,0.594,175,1.686,176,0.507,177,0.571,178,0.618,179,0.527,180,0.618,181,0.527,182,0.618,183,0.98,184,0.507,185,1.512,186,0.507,187,0.618,188,0.507,189,1.184,190,0.618,191,0.527,192,0.527,193,0.549,194,0.527,195,0.527,196,0.527,197,0.527,198,0.571,199,0.527,200,0.571,201,0.527,202,0.618,203,0.527,204,0.527,205,0.837,206,0.527,207,0.507,208,0.594,209,0.618,210,0.618,216,0.894,217,2.199,228,1.08,233,1.08,247,1.905,249,2.856,285,1.355,305,0.98,339,1.554,345,1.08,360,2.149,361,2.609,363,2.675,403,1.08,423,1.201,462,1.804,473,2.939,475,1.63,485,2.812,491,1.273,495,1.355,508,1.45,523,2.301,596,2.484,716,1.201,751,2.86,769,1.565,774,1.713,809,1.201,879,1.273,885,3.371,903,1.71,916,2.712,918,1.355,925,1.902,943,1.273,951,1.902,988,2.008,1003,1.273,1018,1.355,1037,2.509,1310,1.902,1439,1.45,1481,1.902,1601,1.273,1603,3.752,1604,3.514,1616,1.45,1617,1.45,1618,3.256,1619,1.902,1620,2.484,1621,1.902,1622,2.484,1623,1.902,1624,1.902,1626,3.316,1627,3.087,1628,1.902,1629,2.368,1630,2.149,1631,3.529,1632,3.018,1635,1.201,1636,2.671,1639,3.018,1640,1.902,1642,1.902,1643,1.902,1646,2.301,1652,1.565,1653,2.301,1662,1.902,1663,3.483,1664,3.483,1665,4.329,1666,4.329,1667,4.329,1668,4.329,1669,4.329,1670,3.483,1671,4.928,1672,4.928,1673,4.928,1674,4.928,1675,4.271,1676,3.483,1677,4.928,1678,3.018,1679,3.752,1680,4.329,1681,3.483,1682,5.194,1683,2.195,1684,2.195,1685,3.483,1686,2.195,1687,2.195,1688,2.195,1689,2.195,1690,2.195,1691,2.195,1692,2.195,1693,3.483,1694,2.195,1695,2.195,1696,2.195,1697,2.195,1698,2.195,1699,2.195,1700,2.195,1701,2.195,1702,2.195,1703,2.195,1704,3.752,1705,2.195,1706,1.45,1707,2.195,1708,2.195,1709,1.902,1710,2.195,1711,2.195,1712,2.195,1713,2.195,1714,2.195,1715,2.195,1716,2.195,1717,2.195,1718,2.195,1719,2.195,1720,2.195,1721,1.902,1722,1.902,1723,2.195,1724,3.018,1725,3.483,1726,1.902,1727,2.195,1728,2.195,1729,2.195,1730,1.902,1731,1.71,1732,2.195,1733,1.902,1734,2.195,1735,1.902,1736,3.483,1737,2.195,1738,2.195,1739,2.195,1740,2.484,1741,2.195,1742,2.484,1743,2.195,1744,3.483,1745,1.902,1746,2.195,1747,3.752,1748,2.195,1749,3.018,1750,3.483,1751,2.195,1752,3.018,1753,2.195,1754,4.329,1755,2.195,1756,2.195,1757,2.195,1758,2.195,1759,3.483,1760,2.195,1761,2.195,1762,3.018,1763,2.712,1764,2.195,1765,1.902,1766,2.195,1767,2.195,1768,2.195,1769,2.195,1770,2.195,1771,2.195,1772,2.195,1773,2.195,1774,1.71,1775,2.195,1776,1.71,1777,2.195,1778,1.902,1779,2.195,1780,2.195,1781,2.195,1782,1.902,1783,2.195,1784,1.902,1785,4.329,1786,2.195,1787,2.195,1788,3.483,1789,3.018,1790,3.018,1791,3.483,1792,3.483,1793,3.483]],["title/components/ModellerPageComponent.html",[134,0.357,188,0.895]],["body/components/ModellerPageComponent.html",[0,0.028,3,0.063,4,0.063,5,0.047,7,0.316,8,0.326,12,0.417,15,0.481,17,0.542,18,0.016,19,0.49,20,0.302,21,0.542,25,0.745,29,0.478,31,0.071,38,0.003,39,0.006,40,0.003,52,0.474,55,1.803,58,1.38,63,0.437,64,0.996,65,1.421,70,1.058,71,2.05,72,2.367,74,1.978,78,0.836,79,1.631,89,2.175,90,1.502,92,0.951,100,1.163,103,0.209,105,1.058,106,1.126,108,0.682,109,0.918,112,0.854,115,2.139,120,2.6,121,1.99,122,1.106,130,0.854,132,2.288,133,0.814,134,0.407,135,0.421,136,0.993,137,0.513,138,0.513,139,0.513,141,0.439,142,2.059,143,3.155,144,0.844,148,2.42,150,2.176,151,0.782,152,1.851,155,1.532,156,0.693,157,1.271,158,0.474,159,0.811,160,0.75,161,0.513,162,0.513,163,0.513,164,0.439,165,0.513,166,0.439,167,0.513,168,0.439,169,0.811,170,0.513,171,0.439,172,0.513,173,0.439,174,0.494,175,1.563,176,0.421,177,0.474,178,0.513,179,0.439,180,0.513,181,0.439,182,0.513,183,0.844,184,0.421,185,1.375,186,1.283,187,0.513,188,1.129,189,0.439,190,0.513,191,0.439,192,0.439,193,0.456,194,0.439,195,0.439,196,0.439,197,0.439,198,0.474,199,0.439,200,0.474,201,0.439,202,0.513,203,0.439,204,0.439,205,0.721,206,0.439,207,0.421,208,0.494,209,0.513,210,0.513,216,0.744,217,1.974,218,1.982,224,2.357,228,1.475,229,3.31,230,2.6,238,1.46,249,1.058,256,1.788,258,2.758,260,1.206,265,2.139,268,1.982,274,2.724,275,2.724,276,2.923,277,3.155,281,1.301,284,4.137,285,2.357,286,2.724,287,3.807,289,1.421,290,3.834,291,3.834,292,4.817,293,4.236,296,1.641,301,1.126,305,2.941,315,3.834,361,1.803,363,2.478,389,1.421,402,0.854,403,0.897,423,0.998,471,1.058,472,1.301,473,2.42,475,1.404,485,2.731,493,1.222,494,2.724,495,1.126,500,1.421,505,2.336,532,4.517,533,2.139,559,1.978,560,1.301,565,4.236,596,2.139,668,1.992,708,1.301,716,0.998,735,2.089,745,1.739,809,1.641,871,2.974,897,2.6,898,3.31,907,2.524,914,1.582,916,3.445,917,1.582,918,3.579,919,1.582,920,1.582,923,3.31,952,1.982,988,0.744,1018,1.126,1104,1.554,1167,0.945,1218,1.582,1219,1.582,1240,2.724,1250,3.486,1264,2.336,1270,1.421,1287,3.834,1288,3.834,1294,1.582,1295,1.982,1304,2.336,1311,3.31,1312,2.6,1327,2.6,1328,4.813,1338,2.6,1340,2.6,1344,1.739,1346,1.582,1359,3.807,1535,3.834,1601,1.058,1629,0.998,1675,3.834,1679,2.6,1704,2.6,1706,1.206,1724,1.582,1726,1.582,1730,1.582,1733,1.582,1735,1.582,1749,3.834,1752,2.6,1763,1.421,1790,1.582,1794,1.582,1795,3.82,1796,3,1797,3.31,1798,3.82,1799,3,1800,4.424,1801,3,1802,3,1803,3.82,1804,3,1805,1.825,1806,3,1807,1.825,1808,1.825,1809,1.825,1810,3,1811,1.825,1812,1.825,1813,3,1814,1.825,1815,3,1816,1.825,1817,3,1818,1.825,1819,1.825,1820,1.825,1821,1.825,1822,1.825,1823,1.825,1824,2.923,1825,1.825,1826,1.825,1827,2.139,1828,1.825,1829,1.825,1830,1.825,1831,1.825,1832,1.825,1833,1.825,1834,1.825,1835,1.825,1836,1.825,1837,1.825,1838,1.825,1839,1.825,1840,1.825,1841,1.825,1842,1.825,1843,1.825,1844,1.825,1845,1.825,1846,3.82,1847,1.825,1848,1.825,1849,1.825,1850,1.825,1851,1.825,1852,3,1853,3,1854,1.825,1855,1.825,1856,1.825,1857,1.825,1858,2.6,1859,1.825,1860,1.825,1861,3.31,1862,1.825,1863,1.825,1864,1.825,1865,1.825,1866,3,1867,1.825,1868,1.825,1869,1.825,1870,1.825,1871,1.825,1872,1.825,1873,1.825,1874,1.825,1875,2.6,1876,1.825,1877,1.582,1878,1.301,1879,1.582,1880,1.825,1881,1.301,1882,3.31,1883,1.825,1884,1.825,1885,1.825,1886,1.825,1887,1.825,1888,1.825,1889,1.825,1890,1.825,1891,1.825,1892,1.825,1893,4.424,1894,4.424,1895,4.424,1896,4.424,1897,4.424,1898,4.424,1899,3.834,1900,4.424,1901,4.424,1902,4.424,1903,4.424,1904,3.155,1905,4.424,1906,3,1907,4.424,1908,2.6,1909,3,1910,3.82,1911,1.421,1912,1.582,1913,1.825,1914,1.825,1915,1.825,1916,4.424,1917,1.825,1918,6.009,1919,1.825,1920,1.825,1921,1.825,1922,1.825,1923,1.825,1924,3,1925,3,1926,3,1927,1.825,1928,3,1929,1.825,1930,1.825,1931,3,1932,1.825,1933,1.825,1934,1.825,1935,4.424,1936,4.424,1937,4.424,1938,3]],["title/components/PermissionComponent.html",[134,0.357,191,0.931]],["body/components/PermissionComponent.html",[0,0.039,3,0.086,4,0.086,5,0.065,7,0.142,8,0.419,12,0.348,15,0.495,17,0.648,18,0.016,19,0.555,20,0.311,21,0.648,25,0.858,29,0.377,31,0.097,38,0.005,39,0.007,40,0.005,49,0.491,55,2.154,58,1.691,63,0.561,64,0.921,70,1.448,71,2.354,74,2.436,78,0.947,79,1.636,83,1.803,103,0.286,109,0.6,121,2.44,122,1.322,133,2.807,134,0.433,135,0.577,136,1.002,137,0.703,138,0.703,139,0.703,141,0.6,142,2.172,144,1.084,151,1.236,154,0.761,155,1.421,156,1.572,157,1.828,158,0.649,159,1.042,160,0.963,161,0.703,162,0.703,163,0.703,164,0.6,165,0.703,166,0.6,167,0.703,168,0.6,169,1.042,170,0.703,171,0.6,172,0.703,173,0.6,174,0.676,175,1.77,176,0.577,177,0.649,178,0.703,179,0.6,180,0.703,181,0.6,182,0.703,183,1.084,184,0.577,185,1.607,186,0.577,187,0.703,188,0.577,189,0.6,190,0.703,191,1.27,192,0.6,193,0.624,194,0.6,195,0.6,196,0.6,197,0.6,198,0.649,199,0.6,200,0.649,201,0.6,202,0.703,203,0.6,204,0.6,205,0.926,206,0.6,207,0.577,208,0.676,209,0.703,210,0.703,216,1.018,217,2.359,228,3.407,233,3.094,247,2.107,339,1.115,361,1.57,363,2.807,402,1.169,403,1.228,423,1.366,462,1.995,473,2.892,475,2.474,476,4.117,774,2.313,809,2.107,879,1.448,903,1.945,943,3.065,978,1.448,988,1.917,989,1.65,1115,3.77,1139,2.747,1601,2.233,1604,3.77,1620,2.747,1622,1.781,1626,2.902,1627,2.747,1629,3.441,1630,2.902,1631,4.113,1633,2.165,1634,3.647,1635,2.892,1636,3.725,1637,1.65,1649,1.65,1652,3.77,1653,2.546,1656,2.233,1721,2.165,1731,1.945,1939,2.165,1940,3.853,1941,4.076,1942,4.704,1943,4.704,1944,4.704,1945,4.582,1946,4.117,1947,3.853,1948,3.853,1949,3.853,1950,3.853,1951,3.853,1952,3.853,1953,3.853,1954,2.498,1955,2.498,1956,2.498,1957,3.853,1958,2.498,1959,2.498,1960,3.853,1961,2.498,1962,3.853,1963,2.498,1964,5.713,1965,3.853,1966,2.498,1967,3.853,1968,2.498,1969,3.853,1970,2.498,1971,2.498,1972,2.498,1973,2.498,1974,2.498,1975,2.498,1976,2.498,1977,3.853,1978,3.853,1979,6.037,1980,5.231,1981,2.498,1982,2.498,1983,2.498,1984,2.498,1985,2.498,1986,4.704,1987,2.165,1988,2.498,1989,5.287,1990,4.704,1991,2.498,1992,2.165,1993,2.498,1994,2.498,1995,2.165,1996,2.165,1997,2.498,1998,2.498,1999,2.498,2000,3.339,2001,2.165,2002,3.339,2003,2.165,2004,2.498,2005,2.498,2006,2.498,2007,2.498,2008,3.853,2009,3.853,2010,3.853,2011,4.582,2012,5.287]],["title/components/ProfileComponent.html",[134,0.357,192,0.931]],["body/components/ProfileComponent.html",[0,0.049,3,0.108,4,0.108,5,0.081,7,0.179,8,0.498,12,0.637,15,0.472,17,0.324,18,0.016,19,0.483,20,0.256,21,0.324,25,0.88,29,0.423,31,0.122,38,0.006,39,0.009,40,0.006,49,1.166,55,2.416,58,1.575,63,0.667,64,0.959,67,4.678,70,1.821,71,2.566,74,2.795,78,0.877,79,1.515,103,0.36,109,0.755,121,2.125,122,1.482,130,2.775,133,2.646,134,0.497,135,0.725,136,1.19,137,0.884,138,0.884,139,0.884,141,0.755,142,2.226,144,1.287,151,0.643,155,0.67,156,0.725,157,0.817,158,0.817,159,1.238,160,1.144,161,0.884,162,0.884,163,0.884,164,0.755,165,0.884,166,0.755,167,0.884,168,0.755,169,1.238,170,0.884,171,0.755,172,0.884,173,0.755,174,0.85,175,1.911,176,0.725,177,0.817,178,0.884,179,0.755,180,0.884,181,0.755,182,0.884,183,1.287,184,0.725,185,1.773,186,0.725,187,0.884,188,0.725,189,0.755,190,0.884,191,0.755,192,1.425,193,1.847,194,0.755,195,0.755,196,0.755,197,0.755,198,0.817,199,0.755,200,0.817,201,0.755,202,0.884,203,0.755,204,0.755,205,1.099,206,0.755,207,0.725,208,0.85,209,0.884,210,0.884,216,1.28,217,2.646,228,1.545,233,2.916,247,2.503,339,2.409,363,3.031,402,1.47,403,1.545,423,1.718,462,2.37,475,1.47,477,3.33,523,3.023,716,2.952,774,1.545,809,1.718,879,1.821,902,2.075,908,2.075,909,2.075,943,1.821,978,1.821,988,2.568,1003,1.821,1537,3.849,1601,2.652,1616,2.075,1617,2.075,1618,2.075,1626,1.938,1629,3.244,1630,3.659,1631,4.294,1635,1.718,1636,3.659,1637,2.075,1645,3.849,1646,3.566,1649,2.075,1656,2.652,1742,3.263,1774,3.563,1776,3.563,2013,2.722,2014,4.576,2015,6.303,2016,4.618,2017,4.618,2018,5.462,2019,5.139,2020,5.462,2021,4.576,2022,3.141,2023,3.141,2024,3.141,2025,3.141,2026,3.141,2027,3.141,2028,3.141,2029,3.141,2030,2.722,2031,2.722,2032,3.141,2033,3.141,2034,3.141,2035,3.965,2036,3.141,2037,3.141,2038,3.965,2039,3.965,2040,5.398,2041,5.398,2042,3.141,2043,3.965,2044,5.93,2045,4.576,2046,3.965,2047,5.93]],["title/components/RoleComponent.html",[134,0.357,194,0.931]],["body/components/RoleComponent.html",[0,0.05,3,0.11,4,0.11,5,0.083,7,0.182,8,0.505,12,0.445,15,0.474,17,0.33,18,0.016,19,0.488,20,0.258,21,0.33,25,0.884,29,0.427,31,0.124,38,0.006,39,0.009,40,0.006,49,1.177,55,2.438,58,1.564,63,0.676,64,0.962,70,1.856,71,2.583,74,2.826,78,0.884,79,1.526,103,0.367,109,0.769,121,2.144,122,1.495,133,2.67,134,0.502,135,0.739,136,1.206,137,0.901,138,0.901,139,0.901,141,0.769,142,2.23,144,1.305,151,0.656,154,0.975,155,0.683,156,1.712,157,0.832,158,0.832,159,1.255,160,1.16,161,0.901,162,0.901,163,0.901,164,0.769,165,0.901,166,0.769,167,0.901,168,0.769,169,1.255,170,0.901,171,0.769,172,0.901,173,0.769,174,0.866,175,1.922,176,0.739,177,0.832,178,0.901,179,0.769,180,0.901,181,0.769,182,0.901,183,1.305,184,0.739,185,1.787,186,0.739,187,0.901,188,0.739,189,0.769,190,0.901,191,0.769,192,0.769,193,0.8,194,1.438,195,0.769,196,0.769,197,0.769,198,0.832,199,0.769,200,0.832,201,0.769,202,0.901,203,0.769,204,0.769,205,1.115,206,0.769,207,0.739,208,0.866,209,0.901,210,0.901,216,1.304,217,2.67,228,1.574,233,2.942,247,2.537,339,2.435,363,3.048,402,1.498,403,1.574,423,1.751,462,2.403,475,1.498,476,4.659,477,3.367,716,2.984,774,1.574,809,1.751,879,1.856,902,2.115,908,2.115,909,2.115,943,1.856,978,1.856,988,2.588,1003,1.856,1537,3.891,1601,2.689,1616,2.115,1617,2.115,1618,2.115,1626,1.975,1629,3.272,1630,2.862,1631,4.317,1634,3.468,1635,1.751,1636,3.692,1637,2.115,1645,3.891,1646,3.605,1649,2.115,1656,2.689,1731,2.493,1740,2.283,1774,3.613,1776,3.613,1945,5.185,1995,2.774,2000,4.02,2001,2.774,2011,4.02,2030,2.774,2039,4.02,2048,2.774,2049,4.639,2050,6.351,2051,5.983,2052,5.983,2053,5.983,2054,4.639,2055,3.201,2056,3.201,2057,3.201,2058,3.201,2059,3.201,2060,3.201,2061,3.201,2062,3.201,2063,3.201,2064,3.201,2065,3.201,2066,3.201,2067,3.201,2068,5.456,2069,3.201,2070,3.201,2071,3.201,2072,4.639,2073,5.983,2074,4.639,2075,5.983]],["title/guards/RoleGuard.html",[469,2.762,482,3.017]],["body/guards/RoleGuard.html",[0,0.077,3,0.171,4,0.171,5,0.128,7,0.283,12,0.87,15,0.415,17,0.644,18,0.016,19,0.51,20,0.27,21,0.644,29,0.528,31,0.192,38,0.009,39,0.012,40,0.009,50,4.869,52,1.778,54,1.691,58,1.458,62,3.284,63,0.911,64,0.866,72,3.217,78,0.692,92,2.168,100,2.083,103,0.57,104,2.118,108,1.858,109,1.502,122,1.243,126,3.965,132,2.327,151,1.281,234,3.871,238,1.641,240,3.052,246,3.858,334,2.575,398,3.067,469,4.458,474,5.759,483,3.871,485,3.768,487,4.308,488,6.22,489,6.22,491,2.882,493,2.026,495,3.067,514,4.308,515,4.308,517,4.308,1018,3.067,2076,4.308,2077,5.464,2078,4.971,2079,4.971,2080,4.971,2081,4.308,2082,4.971,2083,4.308,2084,4.971]],["title/components/SaveModal.html",[134,0.357,195,0.931]],["body/components/SaveModal.html",[0,0.042,3,0.093,4,0.093,5,0.07,7,0.154,8,0.445,12,0.376,15,0.509,17,0.509,18,0.016,19,0.508,20,0.309,21,0.509,25,0.838,29,0.462,31,0.105,38,0.008,39,0.008,40,0.005,49,0.805,52,1.064,54,1.107,58,1.328,63,0.596,64,1.022,71,2.825,78,0.967,79,1.72,89,0.892,90,0.676,92,1.297,100,1.247,103,0.469,109,0.983,121,1.467,122,1.377,133,1.826,134,0.455,135,0.624,136,1.064,137,0.761,138,0.761,139,0.761,141,0.65,142,2.191,144,1.151,151,0.554,154,0.823,155,1.56,156,0.624,157,0.703,158,0.703,159,1.107,160,1.023,161,0.761,162,0.761,163,0.761,164,0.65,165,0.761,166,0.65,167,0.761,168,0.65,169,1.107,170,0.761,171,0.65,172,0.761,173,0.65,174,0.731,175,1.82,176,0.624,177,0.703,178,0.761,179,0.65,180,0.761,181,0.65,182,0.761,183,1.151,184,0.624,185,1.665,186,0.624,187,0.761,188,0.624,189,0.65,190,0.761,191,0.65,192,0.65,193,0.676,194,0.65,195,1.324,196,1.758,197,0.65,198,0.703,199,0.65,200,1.539,201,0.65,202,0.761,203,0.65,204,0.65,205,0.983,206,0.65,207,0.624,208,0.731,209,0.761,210,0.761,238,1.818,339,1.826,351,1.329,361,2.981,375,1.567,383,1.479,391,1.479,392,3.065,402,1.265,422,1.4,427,1.4,428,1.4,562,3.35,668,2.714,756,1.744,778,2.239,783,2.013,905,3.013,906,2.343,907,4.273,1013,3.928,1031,2.863,1038,4.22,1040,3.609,1041,3.431,1043,3.431,1046,1.567,1047,3.193,1049,2.372,1058,2.372,1060,1.567,1078,1.567,1079,2.372,1081,1.786,1082,1.567,1083,1.567,1084,1.786,1085,1.567,1086,1.567,1087,1.668,1089,1.567,1091,1.668,1098,2.918,1100,2.12,1103,2.239,1104,1.4,1105,2.239,1220,3.639,1402,1.928,1634,2.863,1706,1.786,1740,3.522,1742,1.928,1882,4.774,2085,2.343,2086,4.093,2087,4.939,2088,4.939,2089,4.939,2090,4.939,2091,4.939,2092,5.509,2093,5.509,2094,5.509,2095,4.093,2096,4.093,2097,2.703,2098,2.703,2099,2.703,2100,2.703,2101,2.703,2102,2.703,2103,2.703,2104,2.703,2105,2.703,2106,4.093,2107,2.703,2108,2.703,2109,2.703,2110,2.703,2111,2.703,2112,2.703,2113,2.703,2114,2.703,2115,2.703,2116,2.703,2117,2.105,2118,2.343,2119,2.105,2120,4.939,2121,2.703,2122,2.703,2123,2.703,2124,2.703,2125,2.703,2126,2.343,2127,2.703,2128,2.703,2129,2.343,2130,2.703,2131,2.703,2132,2.105,2133,4.093,2134,4.093,2135,4.939,2136,4.093,2137,5.509,2138,4.093,2139,2.703,2140,2.703,2141,2.703,2142,2.703,2143,2.343,2144,2.703,2145,2.703,2146,2.703,2147,2.703,2148,2.703,2149,2.703,2150,2.703,2151,4.939,2152,2.343,2153,3.547,2154,4.774,2155,6.227]],["title/classes/SnackBarMessage.html",[0,0.06,1824,2.559]],["body/classes/SnackBarMessage.html",[0,0.09,2,2.162,3,0.199,4,0.199,5,0.15,7,0.329,8,0.746,12,0.805,15,0.486,17,0.596,18,0.015,19,0.472,20,0.315,21,0.596,25,0.96,31,0.224,38,0.011,39,0.013,40,0.011,64,0.977,256,3.539,702,3.354,1295,5.1,1824,4.532,2156,5.014,2157,5.786,2158,5.786,2159,6.86]],["title/injectables/SnackBarService.html",[54,1.048,363,1.729]],["body/injectables/SnackBarService.html",[0,0.073,3,0.162,4,0.162,5,0.122,7,0.268,8,0.658,15,0.495,17,0.688,18,0.016,19,0.544,20,0.321,21,0.688,25,0.941,29,0.52,31,0.183,38,0.009,39,0.011,40,0.009,49,1.19,54,1.636,56,2.444,58,1.588,62,4.81,63,0.881,64,0.989,78,0.929,79,1.604,89,2.204,90,1.669,103,0.541,104,2.578,105,2.736,106,2.912,109,1.134,121,2.168,159,1.276,160,1.512,233,2.975,240,2.979,256,3.125,363,2.699,491,2.736,1295,4.652,1656,2.736,1797,6.455,1824,4.652,1878,4.761,2160,4.09,2161,6.677,2162,6.049,2163,4.719,2164,4.719,2165,6.049,2166,4.719,2167,4.719,2168,4.719,2169,4.719,2170,4.719,2171,6.049,2172,4.719,2173,6.049,2174,6.049,2175,4.719,2176,4.719,2177,4.719,2178,4.719,2179,4.719,2180,4.719,2181,4.719,2182,4.719,2183,4.719,2184,4.719,2185,4.719,2186,4.719,2187,4.719]],["title/injectables/StoreService.html",[54,1.048,2188,3.017]],["body/injectables/StoreService.html",[0,0.056,3,0.123,4,0.123,5,0.093,7,0.204,8,0.548,12,0.81,15,0.519,17,0.71,18,0.016,19,0.561,20,0.32,21,0.71,25,0.701,29,0.36,31,0.139,38,0.007,39,0.01,40,0.007,49,0.707,52,1.79,54,1.363,56,1.862,58,1.649,63,0.734,64,1.024,78,1.054,79,1.698,89,1.187,90,0.899,92,1.14,100,1.921,103,0.412,109,1.515,126,2.084,218,3.33,228,2.479,238,1.664,305,1.605,715,4.497,735,1.967,986,4.149,989,4.166,1484,3.594,2188,3.925,2189,3.116,2190,5.819,2191,5.819,2192,5.819,2193,6.64,2194,6.307,2195,5.04,2196,6.307,2197,6.307,2198,6.307,2199,6.307,2200,6.307,2201,5.04,2202,5.04,2203,5.04,2204,3.596,2205,5.04,2206,3.596,2207,5.04,2208,3.596,2209,3.596,2210,5.04,2211,3.596,2212,3.596,2213,3.596,2214,3.596,2215,5.04,2216,3.596,2217,3.596,2218,5.04,2219,3.596,2220,6.64,2221,5.04,2222,3.596,2223,3.596,2224,3.596,2225,3.596,2226,3.596,2227,3.596,2228,3.596,2229,5.04,2230,3.596,2231,5.04,2232,3.596,2233,3.596,2234,6.64,2235,3.596,2236,5.04,2237,3.596,2238,3.596,2239,3.596,2240,3.596,2241,3.596,2242,6.64,2243,5.819,2244,6.307,2245,6.307,2246,5.04,2247,3.596,2248,3.596,2249,3.596,2250,3.596,2251,3.596,2252,3.596,2253,3.596]],["title/components/SubProcessModal.html",[134,0.357,197,0.931]],["body/components/SubProcessModal.html",[0,0.036,3,0.079,4,0.079,5,0.06,7,0.288,8,0.394,10,1.783,12,0.322,15,0.514,17,0.523,18,0.016,19,0.531,20,0.321,21,0.523,25,0.803,29,0.393,31,0.089,38,0.007,39,0.007,40,0.004,49,1.083,52,0.601,58,1.527,63,0.528,64,1.022,72,0.984,78,0.96,79,1.702,89,2.089,90,1.582,92,2.063,100,2.029,103,0.265,108,0.863,109,1.323,121,1.299,122,1.267,133,1.618,134,0.412,135,0.534,136,0.943,137,0.65,138,0.65,139,0.65,141,0.555,142,2.151,144,1.02,151,0.743,154,0.704,155,1.35,156,0.534,157,0.601,158,0.601,159,0.981,160,1.119,161,0.65,162,0.65,163,0.65,164,0.555,165,0.65,166,0.555,167,0.65,168,0.555,169,0.981,170,0.65,171,0.555,172,0.65,173,0.555,174,0.625,175,1.72,176,0.534,177,0.601,178,0.65,179,0.555,180,1.02,181,0.555,182,0.65,183,1.02,184,0.534,185,1.55,186,0.534,187,0.65,188,0.534,189,0.555,190,0.65,191,0.555,192,0.555,193,0.577,194,0.555,195,0.555,196,0.555,197,1.218,198,1.732,199,0.555,200,1.432,201,0.555,202,0.65,203,0.555,204,0.555,205,0.871,206,0.555,207,0.534,208,0.625,209,0.65,210,0.65,218,2.396,238,1.818,249,1.339,258,2.16,279,1.647,285,3.399,296,2.448,305,1.031,345,2.709,351,1.136,361,2.066,383,1.264,391,1.264,392,2.853,427,1.196,428,1.196,473,2.773,491,1.339,562,3.166,668,1.477,751,1.526,753,1.878,756,2.16,774,1.783,778,2.773,783,2.493,790,1.647,844,1.799,852,3.142,854,2.102,855,1.799,905,2.773,918,2.237,944,1.647,970,1.647,972,1.526,988,2.714,1030,2.762,1031,2.594,1032,2.594,1033,2.762,1036,2.762,1037,2.594,1040,3.388,1041,3.193,1042,3.399,1043,2.939,1044,2.396,1046,1.339,1047,2.939,1049,2.102,1058,2.102,1060,1.339,1062,2.237,1078,1.339,1079,2.102,1081,1.526,1082,1.339,1083,1.339,1084,1.526,1085,1.339,1086,1.339,1087,1.425,1089,1.339,1091,1.425,1098,1.647,1100,3.027,1103,2.448,1104,1.196,1105,2.773,1220,1.526,1240,3.191,1325,2.002,1426,1.647,1427,1.647,1428,1.647,1429,2.586,1430,1.647,1431,1.647,1432,1.647,1433,1.647,1434,2.586,1435,1.647,1439,2.396,1440,3.191,1443,1.799,1444,1.799,1445,1.799,1446,1.799,1447,1.647,1448,1.647,1449,1.647,1450,1.647,1451,1.647,1452,1.647,1453,1.647,1454,1.647,1455,1.647,1456,1.647,1457,1.647,1458,1.647,1459,1.647,1460,1.647,1462,1.647,1463,1.647,1464,1.647,1604,3.615,1622,1.647,1627,1.647,1629,1.264,1634,1.339,1635,1.264,1653,2.396,1706,1.526,1747,2.002,1763,1.799,1778,2.002,1782,2.002,1875,2.002,1877,2.002,1881,1.647,1941,3.879,1980,2.002,2083,2.002,2143,3.879,2254,2.002,2255,3.626,2256,4.476,2257,4.476,2258,6.113,2259,3.485,2260,5.07,2261,4.476,2262,3.626,2263,5.07,2264,3.626,2265,2.31,2266,2.31,2267,2.31,2268,2.31,2269,2.31,2270,2.31,2271,2.31,2272,2.31,2273,2.31,2274,2.31,2275,2.31,2276,2.31,2277,2.31,2278,2.31,2279,2.31,2280,2.31,2281,2.31,2282,2.31,2283,2.31,2284,2.31,2285,2.31,2286,2.31,2287,2.31,2288,2.31,2289,2.31,2290,2.31,2291,2.31,2292,2.31,2293,2.31,2294,3.626,2295,2.31,2296,4.476,2297,2.31,2298,2.002,2299,2.31,2300,2.31,2301,2.31,2302,2.31,2303,2.31,2304,2.31,2305,2.31,2306,2.31,2307,2.31,2308,4.476,2309,1.799,2310,1.799,2311,2.31,2312,2.31,2313,2.002,2314,2.002,2315,2.31,2316,2.002,2317,2.31,2318,2.31,2319,2.31,2320,2.824,2321,2.31,2322,2.31,2323,2.31,2324,2.31,2325,2.31,2326,3.626,2327,3.626,2328,2.31,2329,2.31,2330,2.31,2331,2.31,2332,3.626]],["title/components/TermModal.html",[134,0.357,199,0.931]],["body/components/TermModal.html",[0,0.038,3,0.085,4,0.085,5,0.064,7,0.299,8,0.415,12,0.344,15,0.509,17,0.394,18,0.016,19,0.463,20,0.306,21,0.394,25,0.845,29,0.375,31,0.096,38,0.009,39,0.007,40,0.005,49,0.918,52,1.366,58,1.619,63,0.556,64,0.994,78,0.961,79,1.685,89,1.983,90,1.502,92,1.904,100,1.971,103,0.283,109,1.262,112,1.787,122,1.313,134,0.43,135,0.57,136,0.993,137,0.694,138,0.694,139,0.694,141,0.593,142,2.168,144,1.074,148,2.874,150,2.584,151,0.506,154,0.752,155,0.526,156,0.57,157,0.642,158,0.642,159,1.033,160,1.167,161,0.694,162,0.694,163,0.694,164,0.593,165,0.694,166,0.593,167,0.694,168,0.593,169,1.033,170,0.694,171,0.593,172,0.694,173,0.593,174,0.668,175,1.762,176,0.57,177,0.642,178,0.694,179,0.593,180,1.478,181,0.593,182,0.694,183,1.074,184,0.57,185,1.598,186,0.57,187,0.694,188,0.57,189,0.593,190,0.694,191,0.593,192,0.593,193,0.617,194,0.593,195,0.593,196,1.365,197,0.593,198,0.642,199,1.262,200,1.727,201,0.593,202,0.694,203,0.593,204,0.593,205,0.917,206,0.593,207,0.57,208,0.668,209,0.694,210,0.694,217,2.345,224,2.881,238,1.26,258,2.239,296,2.554,305,1.101,345,2.794,351,1.878,392,2.943,427,1.278,428,1.278,491,2.213,493,1.556,562,2.418,668,1.556,702,1.431,734,1.922,735,2.874,756,1.627,783,2.584,854,2.213,855,1.922,885,2.973,905,2.874,944,1.76,970,1.76,972,1.631,988,2.552,1030,3.506,1031,1.431,1032,2.706,1033,2.881,1036,2.881,1037,3.293,1040,3.631,1041,3.482,1042,3.506,1043,3.046,1046,1.431,1047,3.046,1049,2.213,1058,1.431,1062,1.523,1078,1.431,1079,1.431,1082,1.431,1083,1.431,1085,2.213,1086,3.046,1087,1.523,1089,1.431,1091,1.523,1100,1.977,1103,2.874,1104,1.278,1105,2.088,1220,1.631,1304,1.922,1402,1.76,1426,1.76,1427,1.76,1428,1.76,1429,2.722,1430,1.76,1431,1.76,1432,1.76,1433,1.76,1434,2.722,1435,1.76,1439,2.522,1440,3.329,1443,1.922,1444,1.922,1445,1.922,1446,1.922,1447,1.76,1448,1.76,1449,1.76,1450,1.76,1451,1.76,1452,1.76,1453,1.76,1454,1.76,1455,1.76,1456,1.76,1457,1.76,1458,1.76,1459,1.76,1460,1.76,1461,1.922,1462,1.76,1463,1.76,1464,1.76,1476,2.973,1678,3.309,1682,4.553,1878,1.76,1881,1.76,1899,2.139,2259,3.636,2309,1.922,2310,1.922,2313,3.309,2314,2.139,2316,2.139,2320,4.092,2333,2.139,2334,3.818,2335,3.818,2336,5.254,2337,5.254,2338,5.254,2339,5.254,2340,5.206,2341,4.669,2342,2.468,2343,2.468,2344,2.468,2345,2.468,2346,2.468,2347,2.468,2348,2.468,2349,2.468,2350,2.468,2351,2.468,2352,2.468,2353,2.468,2354,2.468,2355,2.468,2356,2.468,2357,2.468,2358,2.468,2359,2.468,2360,2.468,2361,2.468,2362,2.468,2363,2.468,2364,2.468,2365,2.468,2366,2.468,2367,2.139,2368,2.468,2369,4.669,2370,2.468,2371,2.468,2372,2.468,2373,2.468,2374,2.139,2375,2.468,2376,2.468,2377,2.468,2378,2.139,2379,2.468,2380,2.468,2381,3.818,2382,2.468,2383,2.468,2384,2.468,2385,2.468,2386,2.468,2387,2.468,2388,2.468,2389,2.468,2390,3.818,2391,2.468,2392,4.669,2393,2.468,2394,2.468,2395,2.468,2396,2.468,2397,2.468,2398,2.468,2399,2.468,2400,2.468,2401,3.309]],["title/pipes/Timestamp2Date.html",[360,2.39,550,2.119]],["body/pipes/Timestamp2Date.html",[0,0.083,3,0.184,4,0.184,5,0.139,15,0.356,17,0.553,18,0.016,19,0.577,20,0.231,21,0.553,23,4.328,25,0.646,29,0.383,31,0.207,38,0.01,39,0.012,40,0.01,49,1.054,52,1.394,63,0.781,64,0.829,78,0.746,84,2.932,90,1.34,103,0.614,109,1.7,141,1.288,238,1.769,258,3.141,301,3.308,360,4.548,493,2.184,550,3.583,585,4.645,1175,3.822,1177,5.102,1178,5.51,1180,5.102,1181,4.174,1344,4.272,2402,4.645,2403,5.361,2404,5.361,2405,5.361,2406,5.361,2407,5.361,2408,5.361,2409,6.552,2410,5.361,2411,5.361,2412,5.361,2413,5.361,2414,6.552,2415,5.361,2416,5.361]],["title/classes/TokenPayloadDto.html",[0,0.06,1496,2.762]],["body/classes/TokenPayloadDto.html",[0,0.089,2,2.144,3,0.197,4,0.197,5,0.148,7,0.326,8,0.742,12,0.798,15,0.484,17,0.591,18,0.015,19,0.468,20,0.332,21,0.591,25,0.878,31,0.222,38,0.011,39,0.013,40,0.011,475,2.685,668,2.969,1496,4.867,2417,4.971,2418,7.54,2419,7.54,2420,6.825,2421,6.825,2422,6.825,2423,5.737,2424,5.737,2425,5.737,2426,5.737,2427,5.737]],["title/components/UsageModal.html",[134,0.357,201,0.931]],["body/components/UsageModal.html",[0,0.04,3,0.089,4,0.089,5,0.067,7,0.306,8,0.429,12,0.359,15,0.515,17,0.495,18,0.016,19,0.535,20,0.32,21,0.495,25,0.827,29,0.436,31,0.1,38,0.008,39,0.008,40,0.005,49,0.776,58,1.595,63,0.575,64,1.019,71,2.797,72,1.099,78,0.956,79,1.702,89,2.166,90,1.641,92,2.133,100,2.158,103,0.295,108,0.964,121,0.924,122,1.344,133,1.151,134,0.442,135,0.595,136,1.027,137,0.725,138,0.725,139,0.725,141,0.62,142,2.18,144,1.111,151,0.528,154,0.785,155,1.435,156,0.595,157,0.67,158,0.67,159,1.068,160,0.987,161,0.725,162,0.725,163,0.725,164,0.62,165,0.725,166,0.62,167,0.725,168,0.62,169,1.068,170,0.725,171,0.62,172,0.725,173,0.62,174,0.697,175,1.79,176,0.595,177,0.67,178,0.725,179,0.62,180,1.111,181,0.62,182,0.725,183,1.111,184,0.595,185,1.631,186,0.595,187,0.725,188,0.595,189,0.62,190,0.725,191,0.62,192,0.62,193,0.645,194,0.62,195,0.62,196,0.62,197,0.62,198,1.247,199,0.62,200,1.507,201,1.292,202,1.631,203,0.62,204,0.62,205,0.949,206,0.62,207,0.595,208,0.697,209,0.725,210,0.725,238,2.1,258,2.605,285,3.926,296,2.624,345,2.85,351,1.268,361,2.592,383,1.41,391,1.41,392,3.002,402,1.207,427,1.335,428,1.335,475,1.207,562,3.295,668,1.609,728,2.815,751,2.608,753,2.045,756,1.682,774,1.268,778,2.16,783,1.942,790,4.359,854,1.495,905,2.941,918,2.436,988,1.955,1003,1.495,1030,2.96,1031,2.781,1032,2.781,1033,2.96,1036,2.96,1037,2.781,1040,3.544,1041,3.359,1042,3.576,1043,3.116,1044,2.608,1046,1.495,1047,3.116,1049,2.289,1058,2.289,1060,1.495,1062,2.436,1078,1.495,1079,2.289,1081,1.703,1082,1.495,1083,1.495,1084,1.703,1085,1.495,1086,1.495,1087,1.591,1089,1.495,1091,1.591,1098,1.839,1100,2.045,1103,2.16,1104,1.335,1105,2.16,1116,2.235,1240,2.815,1344,1.495,1620,1.839,1634,1.495,1635,2.16,1652,1.839,1653,2.608,1706,1.703,1742,1.839,1911,4.761,1912,3.422,2154,3.422,2259,3.736,2298,4.659,2309,2.008,2310,2.008,2401,3.422,2428,2.235,2429,3.948,2430,4.798,2431,4.798,2432,5.376,2433,5.376,2434,5.376,2435,3.948,2436,2.579,2437,2.579,2438,2.579,2439,2.579,2440,2.579,2441,2.579,2442,2.579,2443,2.579,2444,2.579,2445,2.579,2446,2.579,2447,2.579,2448,2.579,2449,2.579,2450,2.579,2451,2.579,2452,2.579,2453,2.579,2454,2.579,2455,2.579,2456,2.579,2457,2.579,2458,2.579,2459,2.579,2460,2.579,2461,3.948,2462,2.579,2463,2.579,2464,2.579,2465,2.579,2466,2.579,2467,2.579,2468,5.376,2469,2.579,2470,3.948,2471,3.948,2472,3.948,2473,3.948,2474,3.948,2475,3.948]],["title/components/UserComponent.html",[134,0.357,203,0.931]],["body/components/UserComponent.html",[0,0.04,3,0.089,4,0.089,5,0.067,7,0.147,8,0.43,12,0.359,15,0.482,17,0.407,18,0.016,19,0.473,20,0.274,21,0.407,25,0.902,29,0.384,31,0.1,38,0.005,39,0.008,40,0.005,49,1.058,52,0.671,55,2.192,58,1.614,63,0.576,64,0.962,70,1.497,71,2.386,74,2.487,78,0.914,79,1.53,83,2.979,103,0.296,109,0.95,110,2.963,115,1.841,121,2.192,122,1.345,133,1.152,134,0.442,135,0.596,136,1.028,137,0.727,138,0.727,139,0.727,141,0.621,142,2.18,144,1.112,151,1.452,152,2.439,154,0.787,155,0.551,156,0.596,157,0.671,158,0.671,159,1.069,160,0.988,161,0.727,162,0.727,163,0.727,164,0.621,165,0.727,166,0.621,167,0.727,168,0.621,169,1.069,170,0.727,171,0.621,172,0.727,173,0.621,174,0.698,175,1.791,176,0.596,177,0.671,178,0.727,179,0.621,180,0.727,181,0.621,182,0.727,183,1.112,184,0.596,185,1.632,186,0.596,187,0.727,188,0.596,189,0.621,190,0.727,191,0.621,192,0.621,193,1.345,194,0.621,195,0.621,196,0.621,197,0.621,198,0.671,199,0.621,200,0.671,201,0.621,202,0.727,203,1.293,204,0.621,205,0.95,206,0.621,207,0.596,208,0.698,209,0.727,210,0.727,216,1.052,217,2.401,228,1.27,233,3.008,247,2.943,258,1.1,260,1.706,276,1.706,339,2.143,363,2.841,402,1.209,403,1.27,423,1.412,462,2.047,475,1.85,539,3.546,606,3.74,774,1.944,809,1.412,879,1.497,902,1.706,908,1.706,909,1.706,943,2.291,978,1.497,988,2.492,989,1.706,1003,1.497,1115,3.837,1117,3.832,1118,3.832,1139,2.819,1140,3.078,1141,3.078,1270,2.011,1295,1.706,1305,2.238,1359,2.011,1601,2.291,1616,1.706,1617,1.706,1618,1.706,1626,2.439,1629,3.346,1630,3.774,1631,4.373,1634,3.546,1635,2.162,1636,3.774,1637,2.612,1645,3.837,1646,3.173,1649,1.706,1656,2.291,1722,2.238,1740,3.424,1765,4.162,1904,3.424,1946,4.19,1987,2.238,1992,2.238,1996,2.238,2002,3.426,2003,2.238,2016,4.19,2017,4.19,2031,2.238,2035,3.426,2038,3.426,2046,3.426,2476,2.238,2477,4.803,2478,3.953,2479,5.8,2480,4.663,2481,4.663,2482,4.663,2483,4.663,2484,3.953,2485,3.953,2486,2.583,2487,2.583,2488,2.583,2489,2.583,2490,2.583,2491,2.583,2492,2.583,2493,3.953,2494,2.583,2495,2.583,2496,2.583,2497,2.583,2498,2.583,2499,2.583,2500,4.803,2501,2.583,2502,2.583,2503,2.583,2504,2.583,2505,2.583,2506,2.583,2507,2.583,2508,4.803,2509,2.583,2510,3.953,2511,2.583,2512,2.583,2513,2.583,2514,2.583,2515,4.803,2516,2.583,2517,2.583,2518,3.953,2519,2.583,2520,2.583,2521,3.953,2522,3.953,2523,3.953,2524,5.381,2525,3.953,2526,2.583,2527,3.953,2528,2.583,2529,2.583,2530,2.583,2531,2.583,2532,5.381,2533,2.583,2534,3.953,2535,3.953,2536,2.583,2537,2.583,2538,2.583,2539,2.583,2540,2.583,2541,2.238,2542,2.583,2543,2.583,2544,2.583,2545,2.583,2546,2.583]],["title/classes/UserDto.html",[0,0.06,559,2.006]],["body/classes/UserDto.html",[0,0.068,1,4.916,2,1.637,3,0.15,4,0.15,5,0.113,7,0.249,8,0.627,9,4.11,10,2.834,11,4.11,15,0.495,18,0.016,20,0.326,23,3.808,25,0.972,29,0.411,31,0.169,38,0.008,39,0.011,40,0.008,83,3.015,126,2.539,156,1.581,471,3.734,539,3.734,557,2.894,559,2.985,578,4.255,618,4.11,1117,2.894,1118,2.894,1139,3.123,1140,3.411,1141,3.411,1250,3.123,1495,3.796,1861,3.796,2081,3.796,2547,3.796,2548,4.38,2549,4.38,2550,4.38,2551,4.38,2552,6.441,2553,4.38,2554,4.38,2555,4.38,2556,7.821,2557,3.796,2558,3.796,2559,3.796,2560,3.796,2561,3.796,2562,3.796,2563,3.796,2564,3.796,2565,3.796,2566,3.796,2567,4.38,2568,4.38,2569,4.38,2570,4.38,2571,4.38,2572,4.38,2573,4.38,2574,4.38,2575,4.38,2576,4.38,2577,4.38,2578,4.38,2579,4.38,2580,4.38,2581,4.38,2582,4.38,2583,4.38,2584,4.38,2585,4.38,2586,4.38,2587,4.38,2588,4.38,2589,4.38,2590,4.38,2591,4.38,2592,4.38,2593,4.38,2594,4.38]],["title/classes/UserEntity.html",[0,0.06,557,2.559]],["body/classes/UserEntity.html",[0,0.074,2,1.776,3,0.163,4,0.163,5,0.123,7,0.27,8,0.661,14,3.14,15,0.496,18,0.016,20,0.327,25,0.979,29,0.504,30,4.119,31,0.184,38,0.009,39,0.012,40,0.009,43,4.119,83,3.135,92,2.495,126,2.755,156,1.63,471,3.883,539,3.883,557,4.015,559,3.147,739,5.612,1117,4.425,1118,4.425,1250,4.777,2557,4.119,2558,4.119,2559,4.119,2560,4.119,2561,4.119,2562,4.119,2563,4.119,2564,4.119,2565,4.119,2566,4.119,2595,4.119,2596,4.753,2597,4.753,2598,4.753,2599,4.753,2600,4.753,2601,4.753,2602,4.753,2603,4.753,2604,4.753,2605,7.871]],["title/injectables/UserService.html",[54,1.048,2077,2.762]],["body/injectables/UserService.html",[0,0.043,3,0.095,4,0.095,5,0.072,7,0.158,8,0.454,10,2.052,12,0.386,15,0.503,17,0.733,18,0.016,19,0.579,20,0.317,21,0.733,25,0.967,29,0.479,31,0.107,38,0.005,39,0.008,40,0.005,49,0.82,52,1.893,54,1.128,56,1.436,58,1.341,63,0.608,64,1.016,78,1.023,79,0.666,83,3.214,89,0.915,90,0.693,92,1.322,100,2.304,103,0.318,105,1.607,106,1.711,109,0.666,113,1.711,114,1.832,132,3.214,143,4.897,151,1.475,193,1.927,247,1.516,333,2.159,334,1.436,381,1.711,422,2.89,462,2.161,477,4.317,530,4.346,535,1.977,536,5.186,539,4.119,542,3.249,543,3.615,559,3.477,560,1.977,561,2.403,562,1.436,574,5.653,575,2.403,595,4.346,626,5.534,668,3.083,702,1.607,716,3.827,989,4.623,1115,1.977,1117,4.623,1118,4.623,1499,3.615,1537,4.989,1656,2.418,1657,1.977,1878,2.975,1946,4.345,2016,2.159,2017,4.345,2018,4.346,2019,3.615,2020,4.346,2043,5.653,2077,2.975,2480,4.346,2481,3.615,2482,3.615,2483,4.346,2606,2.403,2607,5.58,2608,4.172,2609,5.58,2610,4.172,2611,4.172,2612,2.773,2613,2.773,2614,2.773,2615,2.773,2616,4.172,2617,2.773,2618,2.773,2619,4.172,2620,2.773,2621,2.773,2622,2.773,2623,4.172,2624,2.773,2625,2.773,2626,2.773,2627,4.172,2628,2.773,2629,2.773,2630,2.773,2631,4.172,2632,2.773,2633,4.172,2634,2.773,2635,2.773,2636,2.773,2637,2.773,2638,2.773,2639,2.773,2640,2.773,2641,2.773,2642,2.773,2643,2.773,2644,2.773,2645,2.773,2646,2.773,2647,2.773,2648,6.524,2649,2.773,2650,4.172,2651,2.773,2652,2.773,2653,2.773,2654,2.773,2655,2.773,2656,2.773,2657,2.773,2658,2.773]],["title/classes/Variable.html",[0,0.06,205,0.931]],["body/classes/Variable.html",[0,0.087,2,2.104,3,0.193,4,0.193,5,0.146,7,0.32,8,0.734,12,0.784,15,0.498,17,0.58,18,0.015,19,0.625,20,0.323,21,0.58,25,0.956,31,0.218,38,0.011,39,0.013,40,0.011,64,1.004,90,1.915,100,2.282,205,1.622,702,3.264,1378,5.967,1659,4.879,2659,4.879,2660,5.631,2661,7.228]],["title/components/VariableComponent.html",[134,0.357,204,0.931]],["body/components/VariableComponent.html",[0,0.075,3,0.166,4,0.166,5,0.125,7,0.275,15,0.322,18,0.015,19,0.551,20,0.209,29,0.439,31,0.187,38,0.009,39,0.012,40,0.009,64,0.613,90,1.537,103,0.555,122,1.777,134,0.622,135,1.118,136,1.599,137,1.362,138,1.362,139,1.362,141,1.163,142,2.304,144,1.73,151,0.992,155,1.032,156,1.118,157,1.259,158,1.259,159,1.663,160,1.537,161,1.362,162,1.362,163,1.362,164,1.163,165,1.362,166,1.163,167,1.362,168,1.163,169,1.663,170,1.362,171,1.163,172,1.362,173,1.163,174,1.31,175,2.143,176,1.118,177,1.259,178,1.362,179,1.163,180,1.901,181,1.163,182,1.362,183,1.73,184,1.118,185,2.064,186,1.118,187,1.362,188,1.118,189,1.163,190,1.362,191,1.163,192,1.163,193,1.21,194,1.163,195,1.163,196,1.163,197,1.163,198,1.259,199,1.163,200,1.259,201,1.163,202,1.362,203,1.163,204,1.708,205,1.884,206,1.163,207,1.118,208,1.31,209,1.362,210,1.362,1474,5.329,1476,4.788,1477,5.856,2662,4.196,2663,6.149,2664,4.842,2665,6.149]],["title/components/VariableModal.html",[134,0.357,206,0.931]],["body/components/VariableModal.html",[0,0.039,3,0.086,4,0.086,5,0.065,7,0.301,8,0.42,12,0.656,15,0.516,17,0.546,18,0.016,19,0.53,20,0.323,21,0.546,25,0.908,29,0.432,31,0.097,38,0.009,39,0.007,40,0.005,49,1.279,58,1.607,63,0.563,64,1.021,78,0.965,79,1.732,84,2.898,89,2.203,90,1.782,92,2.16,100,2.112,103,0.287,109,1.375,112,1.173,122,1.324,134,0.434,135,0.579,136,1.005,137,0.705,138,0.705,139,0.705,141,0.602,142,2.172,144,1.087,148,2.898,150,2.605,151,0.513,154,0.764,155,0.535,156,0.579,157,0.652,158,0.652,159,1.045,160,1.178,161,0.705,162,0.705,163,0.705,164,0.602,165,0.705,166,0.602,167,0.705,168,0.602,169,1.045,170,0.705,171,0.602,172,0.705,173,0.602,174,0.678,175,1.772,176,0.579,177,0.652,178,0.705,179,0.602,180,1.087,181,0.602,182,0.705,183,1.087,184,0.579,185,1.61,186,0.579,187,0.705,188,0.579,189,0.602,190,0.705,191,0.602,192,0.602,193,0.627,194,0.602,195,0.602,196,0.602,197,0.602,198,0.652,199,0.602,200,1.488,201,0.602,202,0.705,203,0.602,204,0.928,205,1.691,206,1.273,207,0.579,208,0.678,209,0.705,210,0.705,238,1.889,258,2.009,296,2.579,345,2.814,351,1.233,383,1.371,391,1.371,392,3.262,427,1.298,428,1.298,461,2.384,562,3.262,668,1.574,735,1.371,753,2.001,756,2.438,757,4.297,778,2.113,783,2.319,799,2.755,854,2.24,856,1.952,905,2.579,988,1.921,1030,2.909,1031,2.733,1032,2.733,1033,2.909,1034,4.456,1035,4.456,1036,2.909,1037,2.733,1038,3.362,1040,3.071,1041,2.733,1042,3.531,1043,3.071,1044,2.553,1046,1.453,1047,3.071,1049,2.24,1058,2.24,1060,1.453,1062,2.384,1078,1.453,1079,2.24,1082,1.453,1083,1.453,1085,1.453,1086,1.453,1087,1.547,1088,1.952,1089,1.453,1100,2.744,1101,3.009,1103,2.113,1104,1.298,1105,2.113,1374,3.349,1377,3.349,1378,4.125,1402,1.788,1405,3.349,1426,1.788,1427,1.788,1428,2.755,1429,1.788,1430,1.788,1431,1.788,1432,1.788,1433,1.788,1434,1.788,1435,1.788,1436,2.173,1437,2.173,1438,2.173,1439,2.553,1440,3.362,1441,2.173,1442,2.173,1447,1.788,1448,1.788,1449,1.788,1450,1.788,1451,1.788,1452,1.788,1453,1.788,1454,1.788,1455,1.788,1456,1.788,1457,1.788,1458,1.788,1459,1.788,1460,1.788,1461,1.952,1462,1.788,1463,1.788,1464,1.788,1471,2.173,1472,2.173,1484,2.755,2152,2.173,2340,4.086,2367,4.086,2374,2.173,2378,2.173,2666,2.173,2667,3.864,2668,4.715,2669,5.298,2670,4.715,2671,3.864,2672,2.507,2673,2.507,2674,2.507,2675,2.507,2676,2.507,2677,2.507,2678,2.507,2679,2.507,2680,2.507,2681,2.507,2682,2.507,2683,2.507,2684,2.507,2685,2.507,2686,2.507,2687,2.507,2688,2.507,2689,2.507,2690,2.507,2691,2.507,2692,2.507,2693,2.507,2694,2.507,2695,2.507,2696,2.507,2697,2.507,2698,2.507,2699,3.864,2700,3.864,2701,3.864,2702,2.507,2703,2.507,2704,2.507,2705,2.507,2706,2.507,2707,2.507,2708,2.507,2709,2.507,2710,2.507,2711,2.507,2712,2.507]],["title/pipes/Version.html",[361,1.578,550,2.119]],["body/pipes/Version.html",[0,0.071,3,0.157,4,0.157,5,0.118,15,0.304,17,0.472,18,0.016,19,0.536,20,0.197,21,0.472,29,0.327,31,0.177,38,0.009,39,0.011,40,0.009,52,1.19,63,0.667,64,0.751,78,0.637,84,2.504,90,1.144,103,0.524,109,1.733,141,1.1,155,1.484,238,1.511,301,2.825,305,2.647,361,3.335,452,6.403,493,1.865,550,3.244,601,3.967,668,3.064,978,2.653,1175,3.264,1177,4.619,1178,5.124,1180,4.619,1181,3.565,1220,4.599,1344,2.653,1879,3.967,2117,3.565,2118,3.967,2119,3.565,2126,3.967,2129,3.967,2132,3.565,2153,6.032,2541,3.967,2713,3.967,2714,4.578,2715,4.578,2716,6.58,2717,5.932,2718,6.58,2719,4.578,2720,6.961,2721,4.578,2722,4.578,2723,4.578,2724,6.58,2725,4.578,2726,4.578,2727,4.578,2728,4.578,2729,7.211,2730,4.578,2731,4.578,2732,6.961,2733,4.578,2734,3.967,2735,4.578,2736,6.58,2737,4.578,2738,5.932,2739,4.578,2740,4.578,2741,4.578,2742,4.578,2743,4.578]],["title/components/ViewerComponent.html",[134,0.357,207,0.895]],["body/components/ViewerComponent.html",[0,0.061,3,0.136,4,0.136,5,0.102,7,0.225,8,0.586,12,0.551,15,0.471,17,0.555,18,0.016,19,0.56,20,0.283,21,0.555,25,0.649,29,0.437,31,0.153,38,0.008,39,0.01,40,0.008,49,0.779,63,0.785,78,0.852,79,1.471,89,1.307,90,0.99,103,0.454,109,1.295,122,1.643,134,0.564,135,0.915,136,1.401,137,1.114,138,1.114,139,1.114,141,0.952,142,2.271,144,1.516,151,0.811,152,3.325,154,1.206,155,0.845,156,0.915,157,1.03,158,1.03,159,1.457,160,1.347,161,1.114,162,1.114,163,1.114,164,0.952,165,1.114,166,0.952,167,1.114,168,0.952,169,1.457,170,1.114,171,0.952,172,1.114,173,0.952,174,1.071,175,2.041,176,0.915,177,1.03,178,1.114,179,0.952,180,1.114,181,0.952,182,1.114,183,1.516,184,0.915,185,1.934,186,0.915,187,1.114,188,0.915,189,0.952,190,1.114,191,0.952,192,0.952,193,0.99,194,0.952,195,0.952,196,0.952,197,0.952,198,1.03,199,0.952,200,1.03,201,0.952,202,1.114,203,0.952,204,0.952,205,1.295,206,0.952,207,1.518,208,1.997,209,1.114,210,1.114,217,2.933,224,3.778,256,1.854,260,2.617,264,2.825,265,2.825,266,3.085,268,2.617,269,3.085,270,3.085,271,3.085,272,3.085,273,3.085,274,2.825,275,2.825,276,2.617,277,2.825,278,3.085,279,2.825,280,3.085,281,2.825,284,2.825,286,2.825,375,2.296,422,3.673,493,2.195,509,2.444,535,2.825,699,2.825,725,3.085,735,3.349,745,3.81,786,3.842,912,5.307,952,3.56,1261,4.67,1263,3.433,1264,3.085,1265,3.433,1344,3.123,1784,3.433,1789,4.67,1827,4.686,2744,3.433,2745,6.124,2746,5.388,2747,5.388,2748,6.572,2749,5.388,2750,5.388,2751,3.961,2752,3.961,2753,3.961,2754,3.961,2755,3.961,2756,3.961,2757,3.961,2758,3.961,2759,3.961,2760,3.961,2761,3.961,2762,3.961,2763,3.961,2764,3.961,2765,3.961,2766,3.961,2767,3.961,2768,3.961,2769,3.961,2770,4.67,2771,3.961]],["title/interfaces/Window.html",[1167,2.006,2772,3.017]],["body/interfaces/Window.html",[3,0.191,4,0.191,5,0.197,7,0.316,8,0.729,18,0.016,20,0.31,29,0.478,38,0.011,39,0.013,40,0.011,972,3.677,1166,4.334,1167,2.882,1169,3.968,1762,6.469,2772,5.948,2773,4.823,2774,7.465,2775,5.808,2776,5.565,2777,5.565,2778,5.565,2779,5.565,2780,5.565,2781,4.823,2782,5.565,2783,6.702,2784,5.565,2785,5.565,2786,5.565,2787,5.565,2788,5.565,2789,5.565,2790,5.565,2791,5.565,2792,5.565,2793,6.702,2794,5.565]],["title/coverage.html",[2795,4.599]],["body/coverage.html",[0,0.117,1,1.954,5,0.076,6,2.564,14,1.954,18,0.016,20,0.128,38,0.006,39,0.008,40,0.006,41,2.564,49,0.582,54,1.974,55,1.205,57,2.564,71,1.708,105,1.715,113,2.702,134,0.72,135,0.683,140,2.564,155,0.631,164,0.711,166,0.711,168,0.711,171,0.711,173,0.711,176,0.683,179,0.711,181,0.711,184,0.683,186,0.683,188,0.683,189,0.711,191,0.711,192,0.711,194,0.711,195,1.052,197,0.711,199,0.711,201,0.711,203,0.711,204,0.711,205,1.906,206,0.711,207,0.683,211,2.564,220,1.715,231,2.564,258,3.521,261,2.564,305,1.32,324,2.564,342,2.564,359,1.954,360,1.825,361,1.205,363,1.32,366,2.564,398,1.825,420,2.11,429,2.11,430,2.11,431,2.304,444,2.564,469,2.11,482,3.41,484,2.564,485,1.455,529,2.564,550,2.851,555,2.11,557,1.954,559,1.532,617,2.564,626,4.487,643,2.304,644,2.564,686,2.11,687,4.059,688,3.41,689,3.41,693,2.304,701,2.11,745,1.715,793,2.304,794,3.795,834,2.564,857,4.79,986,2.11,987,2.564,1004,3.717,1006,2.564,1028,2.564,1106,2.304,1107,3.795,1108,3.795,1167,2.7,1168,2.11,1170,3.41,1173,2.11,1176,2.564,1193,2.304,1194,2.564,1372,2.564,1473,2.564,1480,2.564,1494,2.564,1496,2.11,1501,2.304,1502,2.564,1525,2.564,1600,2.564,1657,2.11,1658,2.564,1662,2.564,1794,2.564,1824,1.954,1911,2.304,1939,2.564,2013,2.564,2048,2.564,2076,2.564,2077,2.11,2085,4.518,2117,3.41,2156,2.564,2160,2.564,2188,2.304,2189,2.564,2254,2.564,2333,2.564,2402,2.564,2417,2.564,2428,2.564,2476,2.564,2547,2.564,2595,2.564,2606,3.795,2659,2.564,2662,2.564,2666,2.564,2713,3.795,2744,3.795,2772,2.304,2773,2.564,2795,2.564,2796,2.958,2797,2.958,2798,2.958,2799,2.958,2800,2.958,2801,2.958,2802,8.042,2803,5.213,2804,2.958,2805,2.564,2806,5.213,2807,2.958,2808,2.958,2809,4.379,2810,2.958,2811,6.664,2812,6.843,2813,5.762,2814,4.379,2815,5.762,2816,2.958,2817,2.958,2818,2.958,2819,4.379,2820,4.379,2821,2.958,2822,2.564,2823,2.564,2824,6.25,2825,6.25,2826,2.564,2827,2.564,2828,2.564,2829,2.958,2830,2.958,2831,2.958,2832,2.958,2833,2.958,2834,2.958,2835,2.958,2836,2.958,2837,4.518,2838,2.564,2839,2.958,2840,2.958,2841,2.958,2842,2.958,2843,5.762,2844,4.379,2845,2.958,2846,2.958,2847,5.762,2848,4.379,2849,2.958,2850,5.762,2851,4.379,2852,2.958,2853,2.958,2854,4.379,2855,2.958,2856,4.379,2857,2.958,2858,2.958,2859,2.958,2860,2.958]],["title/dependencies.html",[349,3.326,2861,3.225]],["body/dependencies.html",[5,0.12,8,0.506,18,0.016,38,0.009,39,0.011,40,0.009,59,3.624,103,0.533,104,1.983,108,1.739,110,4.092,112,3.392,141,1.118,150,2.948,174,1.259,240,2.077,302,4.033,349,3.319,351,3.262,371,5.195,372,3.961,375,2.698,378,3.624,383,3.279,384,4.033,385,4.033,391,2.545,392,3.105,427,3.105,428,2.41,443,3.624,553,4.033,554,3.319,672,3.624,745,3.844,786,3.319,849,4.033,950,4.033,952,4.382,998,4.033,1709,4.033,1827,5.169,1904,3.319,2119,3.624,2320,3.624,2775,4.033,2862,5.995,2863,4.654,2864,4.654,2865,4.654,2866,4.654,2867,4.654,2868,7.649,2869,4.654,2870,4.654,2871,4.654,2872,4.654,2873,4.654,2874,4.654,2875,4.654,2876,4.654,2877,6.633,2878,4.654,2879,4.654,2880,4.654,2881,4.654,2882,4.654,2883,4.654,2884,4.654,2885,4.654,2886,5.995,2887,4.654,2888,4.654,2889,4.654,2890,4.654,2891,4.654,2892,4.654,2893,4.654,2894,4.654,2895,4.654,2896,4.654,2897,4.654,2898,4.654,2899,4.654,2900,4.654,2901,4.654,2902,4.654,2903,4.654,2904,4.654,2905,4.654,2906,4.654,2907,4.654,2908,4.654,2909,4.654,2910,4.654,2911,6.633,2912,4.654,2913,5.995,2914,4.654,2915,4.654,2916,4.654,2917,4.654,2918,4.654,2919,4.654,2920,4.654,2921,4.654,2922,4.654,2923,4.654,2924,4.654,2925,4.654,2926,4.654,2927,4.654,2928,4.654,2929,4.654]],["title/miscellaneous/enumerations.html",[2930,2.3,2931,4.042]],["body/miscellaneous/enumerations.html",[7,0.353,18,0.015,38,0.012,39,0.014,40,0.012,90,1.786,151,1.463,471,4.141,477,4.408,2930,4.423,2931,5.376,2932,6.204,2933,7.145,2934,6.204]],["title/miscellaneous/functions.html",[954,3.326,2930,2.3]],["body/miscellaneous/functions.html",[7,0.312,17,0.784,18,0.015,19,0.62,20,0.328,21,0.784,38,0.01,39,0.013,40,0.01,160,1.857,462,3.44,728,3.91,799,5.513,801,4.752,954,3.91,2822,4.752,2823,5.756,2824,4.752,2825,6.437,2826,5.756,2827,5.756,2828,5.756,2837,4.752,2838,5.756,2930,3.91,2935,7.146,2936,5.483,2937,5.483,2938,5.483,2939,5.483,2940,7.428,2941,5.483,2942,5.483,2943,5.483,2944,6.643,2945,6.643,2946,6.643,2947,6.643,2948,6.643,2949,6.643,2950,6.643,2951,4.752]],["title/index.html",[7,0.183,2952,3.225,2953,3.225]],["body/index.html",[8,0.661,18,0.015,38,0.009,39,0.012,40,0.009,132,2.227,136,1.237,196,1.144,253,4.125,268,3.144,288,3.394,352,3.706,372,3.144,587,4.125,714,4.018,745,4.399,756,2.592,765,3.706,769,4.337,837,4.125,838,4.125,844,4.736,856,3.706,886,3.706,952,4.018,966,4.125,1032,2.759,1100,2.465,1147,4.125,1165,4.125,1166,3.706,1198,5.809,1484,3.394,1745,4.125,1827,5.037,1858,4.125,1881,3.394,1904,3.394,1908,4.125,2770,5.271,2781,4.125,2805,5.271,2951,4.125,2954,7.064,2955,6.082,2956,6.082,2957,7.064,2958,4.76,2959,6.082,2960,4.76,2961,6.082,2962,4.76,2963,6.082,2964,4.76,2965,4.76,2966,4.76,2967,7.064,2968,4.76,2969,4.76,2970,6.703,2971,4.76,2972,4.76,2973,4.76,2974,4.76,2975,4.76,2976,4.76,2977,4.76,2978,4.76,2979,4.76,2980,4.76,2981,4.76,2982,4.76,2983,4.76,2984,4.76,2985,6.082,2986,7.064,2987,6.082,2988,4.76,2989,4.76,2990,4.76,2991,4.76,2992,4.76,2993,4.76,2994,4.76,2995,4.76,2996,4.76,2997,4.76,2998,6.082,2999,4.76,3000,4.76,3001,4.76,3002,6.082,3003,4.76,3004,4.76,3005,4.76,3006,4.76,3007,4.76,3008,4.76,3009,4.76,3010,4.76,3011,4.76,3012,4.76,3013,4.76,3014,4.76,3015,4.76,3016,4.76,3017,4.76,3018,4.76,3019,4.76,3020,4.76,3021,4.76,3022,4.76,3023,4.76,3024,4.76,3025,4.76,3026,4.76,3027,4.76,3028,4.76,3029,4.76,3030,4.76,3031,4.76,3032,4.76,3033,4.76,3034,4.76,3035,4.76,3036,4.76,3037,4.76,3038,4.76,3039,4.76,3040,4.76,3041,4.76,3042,4.76,3043,4.76,3044,4.76,3045,4.76]],["title/modules.html",[348,3.274]],["body/modules.html",[18,0.014,38,0.012,39,0.014,40,0.012,347,4.448,348,3.849,362,4.121,372,4.121,1369,4.858,1486,6.211,3046,6.238,3047,6.238,3048,7.542,3049,7.168]],["title/overview.html",[3050,4.599]],["body/overview.html",[2,1.656,18,0.016,38,0.008,39,0.011,40,0.008,55,2.64,56,2.296,71,2.527,135,1.496,136,1.152,158,1.152,164,1.557,166,1.793,168,1.557,171,1.557,173,1.557,176,1.496,179,1.557,181,1.557,184,1.496,186,1.496,188,1.496,189,1.557,191,1.557,192,1.557,194,1.557,195,1.557,197,1.557,199,1.557,201,1.557,203,1.557,204,1.557,206,1.557,207,1.496,220,3.755,311,3.161,346,2.928,347,5.926,348,2.735,349,3.161,350,3.452,351,2.18,352,3.452,353,3.452,354,3.841,355,3.841,356,3.841,357,3.841,358,3.841,359,4.28,360,3.997,361,2.64,362,4.28,363,2.891,364,5.033,365,3.161,468,3.161,483,3.452,1169,3.161,1175,3.161,1344,2.569,2132,3.452,2734,5.614,3050,3.841,3051,4.433,3052,4.433,3053,4.433]],["title/routes.html",[468,3.784]],["body/routes.html",[18,0.014,38,0.012,39,0.014,40,0.012,468,4.558]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":258,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableModal.html":{},"coverage.html":{}}}],["0).tostring(16).substring(1",{"_index":985,"title":{},"body":{"classes/CommandStack.html":{}}}],["0.1.13",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["0.13.4",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["0.13.8",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["0.218s",{"_index":1319,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["0.29.0",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":1335,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["0.3.2",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["0.35.4",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["0.4.7",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["0.5s",{"_index":1936,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["0.6",{"_index":1919,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["0.8.9",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2813,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2815,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2803,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2817,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2819,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2814,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2818,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2816,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":2852,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":2855,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":1259,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["075",{"_index":1365,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["08",{"_index":1258,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["0px",{"_index":1314,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["0x10000",{"_index":984,"title":{},"body":{"classes/CommandStack.html":{}}}],["1",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Version.html":{},"coverage.html":{}}}],["1)).slice",{"_index":2412,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["1.0.0",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["1.1=>1.2",{"_index":2721,"title":{},"body":{"pipes/Version.html":{}}}],["1.3.4",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["1.5s",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["1.6.34",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["1/84",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["100vh",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{}}}],["102",{"_index":1930,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["10px",{"_index":1289,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["12",{"_index":3052,"title":{},"body":{"overview.html":{}}}],["124px",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["125px",{"_index":1926,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["13.2.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":1336,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["145",{"_index":1274,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["14px",{"_index":1315,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["150px",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":1921,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["16",{"_index":2132,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{},"overview.html":{}}}],["16)).shiftright(16",{"_index":2129,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{}}}],["16)).shiftright(32",{"_index":2126,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{}}}],["162",{"_index":1275,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["16px",{"_index":1338,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["17px",{"_index":1931,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["18",{"_index":1260,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["1=>1.1",{"_index":2723,"title":{},"body":{"pipes/Version.html":{}}}],["1=>2",{"_index":2719,"title":{},"body":{"pipes/Version.html":{}}}],["1].modelercomponent",{"_index":1888,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["1em",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["1px",{"_index":1364,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["2",{"_index":1344,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["2.0.1",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["2.16.0",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["2.5s",{"_index":1938,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["200",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["200px",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":1326,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["24",{"_index":3051,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":1925,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["25px",{"_index":1327,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["2^16",{"_index":2735,"title":{},"body":{"pipes/Version.html":{}}}],["2^32",{"_index":2731,"title":{},"body":{"pipes/Version.html":{}}}],["2^48",{"_index":2728,"title":{},"body":{"pipes/Version.html":{}}}],["2px",{"_index":1264,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["2s",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":2734,"title":{},"body":{"pipes/Version.html":{},"overview.html":{}}}],["3.0.1",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["3.1.5",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["3.3.11",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1328,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["33",{"_index":1278,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["350px",{"_index":1285,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["35px",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["36px",{"_index":1308,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["3d8610",{"_index":1302,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["3px",{"_index":1316,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["4",{"_index":2541,"title":{},"body":{"components/UserComponent.html":{},"pipes/Version.html":{}}}],["4.0.0",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["4.16.2",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["4.2.6",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1162,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["401",{"_index":634,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["403",{"_index":635,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["404040",{"_index":1342,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["40px",{"_index":1286,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["44px",{"_index":1354,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["496",{"_index":637,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["497",{"_index":636,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["5.2.1",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["500px",{"_index":1262,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["50px",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["6",{"_index":3053,"title":{},"body":{"overview.html":{}}}],["6.2.0",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["6.8.5",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["65535.65535.65535.65535",{"_index":2727,"title":{},"body":{"pipes/Version.html":{}}}],["7.1.0",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["7.2.7",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1307,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["750px",{"_index":2771,"title":{},"body":{"components/ViewerComponent.html":{}}}],["89",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["8px",{"_index":1366,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["9001",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["97",{"_index":1277,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["9]+\\.)+[a",{"_index":2511,"title":{},"body":{"components/UserComponent.html":{}}}],["9]{1,3}\\.[0",{"_index":2508,"title":{},"body":{"components/UserComponent.html":{}}}],["9]{1,3}])|(([a",{"_index":2509,"title":{},"body":{"components/UserComponent.html":{}}}],["_",{"_index":871,"title":{},"body":{"classes/CommandStack.html":{},"components/InputModal.html":{},"components/ModellerPageComponent.html":{}}}],["_body",{"_index":1631,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["_clearcache",{"_index":2194,"title":{},"body":{"injectables/StoreService.html":{}}}],["_collaborator",{"_index":1526,"title":{},"body":{"classes/Model.html":{}}}],["_findbyuid",{"_index":2195,"title":{},"body":{"injectables/StoreService.html":{}}}],["_findbyuid(uid",{"_index":2205,"title":{},"body":{"injectables/StoreService.html":{}}}],["_id",{"_index":1527,"title":{},"body":{"classes/Model.html":{}}}],["_modelercomponent",{"_index":1528,"title":{},"body":{"classes/Model.html":{}}}],["_mqttservice",{"_index":73,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["_name",{"_index":1529,"title":{},"body":{"classes/Model.html":{}}}],["_read",{"_index":1530,"title":{},"body":{"classes/Model.html":{}}}],["_showinfo",{"_index":1531,"title":{},"body":{"classes/Model.html":{}}}],["_version",{"_index":1532,"title":{},"body":{"classes/Model.html":{}}}],["_write",{"_index":1533,"title":{},"body":{"classes/Model.html":{}}}],["_xml",{"_index":1534,"title":{},"body":{"classes/Model.html":{}}}],["abfrage",{"_index":2517,"title":{},"body":{"components/UserComponent.html":{}}}],["abfragen",{"_index":1412,"title":{},"body":{"components/InputModal.html":{}}}],["aborting",{"_index":843,"title":{},"body":{"classes/CommandStack.html":{}}}],["above",{"_index":1149,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["absolute",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/ModellerPageComponent.html":{}}}],["abstract",{"_index":42,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["abstract.entity",{"_index":30,"title":{},"body":{"classes/AbstractDto.html":{},"classes/UserEntity.html":{}}}],["abstractdto",{"_index":1,"title":{"classes/AbstractDto.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["abstractdto:6",{"_index":2554,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractdto:7",{"_index":2553,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractdto:8",{"_index":2555,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractentity",{"_index":14,"title":{"classes/AbstractEntity.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["accept",{"_index":1038,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/VariableModal.html":{}}}],["access",{"_index":1229,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["accessors",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"classes/Model.html":{},"components/ModellerPageComponent.html":{}}}],["accesstoken",{"_index":2418,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["action",{"_index":736,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["activatedroute",{"_index":329,"title":{},"body":{"components/AppFooterComponent.html":{},"components/FrontPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":488,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["active",{"_index":906,"title":{},"body":{"classes/CommandStack.html":{},"components/SaveModal.html":{}}}],["actual_component",{"_index":210,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["adamo",{"_index":1893,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["adamomqttservice",{"_index":55,"title":{"injectables/AdamoMqttService.html":{}},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["add",{"_index":1484,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/StoreService.html":{},"components/VariableModal.html":{},"index.html":{}}}],["add(title",{"_index":2207,"title":{},"body":{"injectables/StoreService.html":{}}}],["added",{"_index":955,"title":{},"body":{"classes/CommandStack.html":{}}}],["adding",{"_index":3030,"title":{},"body":{"index.html":{}}}],["addnewvar",{"_index":2669,"title":{},"body":{"components/VariableModal.html":{}}}],["address",{"_index":2563,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["addvar",{"_index":1374,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["addvar(name",{"_index":1377,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["admin",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FrontPageComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["administration",{"_index":143,"title":{},"body":{"components/AdministrationComponent.html":{},"modules/AppRoutingModule.html":{},"components/ModellerPageComponent.html":{},"injectables/UserService.html":{}}}],["administration'},{'name",{"_index":163,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["administration.component.css",{"_index":153,"title":{},"body":{"components/AdministrationComponent.html":{}}}],["administration.component.html",{"_index":145,"title":{},"body":{"components/AdministrationComponent.html":{}}}],["administrationcomponent",{"_index":135,"title":{"components/AdministrationComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administrator",{"_index":1254,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["adminlogin",{"_index":1368,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["again",{"_index":896,"title":{},"body":{"classes/CommandStack.html":{}}}],["alert",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alert'},{'name",{"_index":165,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["alert.component.html",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertcomponent",{"_index":164,"title":{"components/AlertComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alertmodule",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["alertmodule.forroot",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["alertservice",{"_index":220,"title":{"injectables/AlertService.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/FrontPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["align",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["allcompleted",{"_index":2196,"title":{},"body":{"injectables/StoreService.html":{}}}],["alle",{"_index":1439,"title":{},"body":{"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["already",{"_index":1220,"title":{},"body":{"components/FrontPageComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Version.html":{}}}],["alsoexists",{"_index":2087,"title":{},"body":{"components/SaveModal.html":{}}}],["alt",{"_index":750,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["angular",{"_index":952,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/FrontPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/FrontPageComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/SaveModal.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":108,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"dependencies.html":{}}}],["angular2",{"_index":2954,"title":{},"body":{"index.html":{}}}],["animation",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["any).global",{"_index":2792,"title":{},"body":{"interfaces/Window.html":{}}}],["any).process",{"_index":2779,"title":{},"body":{"interfaces/Window.html":{}}}],["anymore",{"_index":2185,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["anything",{"_index":1746,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["api",{"_index":1022,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["api.service",{"_index":107,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["api/logs",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["apimodelpropertyoptional",{"_index":2556,"title":{},"body":{"classes/UserDto.html":{}}}],["apiservice",{"_index":71,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":169,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["app'},{'name",{"_index":167,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["app.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":166,"title":{"components/AppComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appfootercomponent",{"_index":168,"title":{"components/AppFooterComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appheadercomponent",{"_index":171,"title":{"components/AppHeaderComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":837,"title":{},"body":{"classes/CommandStack.html":{},"index.html":{}}}],["appmodule",{"_index":347,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":362,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1178,"title":{},"body":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}}}],["args[0",{"_index":1183,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["args[1",{"_index":1184,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["args[2",{"_index":1187,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["args[2][propertytobefiltered",{"_index":1188,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["arial",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["arialabelledby",{"_index":1082,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["array",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["arraybuffer",{"_index":652,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["arrow",{"_index":741,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["async",{"_index":712,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["attention",{"_index":2397,"title":{},"body":{"components/TermModal.html":{}}}],["auslesen",{"_index":1459,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["auth/blob/master/src/app/helpers/jwt",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate",{"_index":1126,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authenticatedhttpservice",{"_index":420,"title":{"injectables/AuthenticatedHttpService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthenticatedHttpService.html":{},"coverage.html":{}}}],["authentication",{"_index":639,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["authenticationresponse",{"_index":643,"title":{"classes/AuthenticationResponse.html":{}},"body":{"classes/AuthenticationResponse.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":1010,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["authguard",{"_index":398,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["authheader",{"_index":1119,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authheader.startswith('bearer",{"_index":1122,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authing",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authorised",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticatedHttpService.html":{}}}],["authorization",{"_index":1485,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservice",{"_index":485,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FrontPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["auto",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FrontPageComponent.html":{},"index.html":{}}}],["autocomplete",{"_index":3040,"title":{},"body":{"index.html":{}}}],["automate",{"_index":3033,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":924,"title":{},"body":{"classes/CommandStack.html":{}}}],["available",{"_index":1486,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"modules.html":{}}}],["avatar",{"_index":2557,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["avoid",{"_index":850,"title":{},"body":{"classes/CommandStack.html":{}}}],["awesome",{"_index":2975,"title":{},"body":{"index.html":{}}}],["back",{"_index":520,"title":{},"body":{"guards/AuthGuard.html":{}}}],["backdrop",{"_index":1030,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["backdropclass",{"_index":2376,"title":{},"body":{"components/TermModal.html":{}}}],["backend",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticatedHttpService.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["backend.ts",{"_index":1108,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["backend.ts:12",{"_index":1109,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["backend_uri",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["background",{"_index":1270,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{}}}],["badge",{"_index":1898,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["based",{"_index":2955,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1083,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["be0000",{"_index":1296,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["bearer",{"_index":1490,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["behaviorsubject",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["ber",{"_index":1464,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["bereich",{"_index":1407,"title":{},"body":{"components/InputModal.html":{}}}],["bereitet",{"_index":1710,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["between",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["big",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["bigint",{"_index":2117,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{},"coverage.html":{}}}],["bigint(model.version).and(bigint('000000000000ffff",{"_index":2131,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(model.version).and(bigint('00000000ffff0000",{"_index":2128,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(model.version).and(bigint('0000ffff00000000",{"_index":2125,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(model.version).shiftright(48",{"_index":2123,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(this.version1).shiftleft(48",{"_index":2139,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(this.version2).shiftleft(32",{"_index":2140,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(this.version3).shiftleft(16",{"_index":2141,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(this.version4",{"_index":2142,"title":{},"body":{"components/SaveModal.html":{}}}],["bigint(value).and(bigint('000000000000ffff",{"_index":2739,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(value).and(bigint('00000000ffff0000",{"_index":2737,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(value).and(bigint('0000ffff00000000",{"_index":2733,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(value).shiftright(48",{"_index":2730,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(vers1).iszero",{"_index":2743,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(vers2).iszero",{"_index":2742,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(vers3).iszero",{"_index":2741,"title":{},"body":{"pipes/Version.html":{}}}],["bigint(vers4).iszero",{"_index":2740,"title":{},"body":{"pipes/Version.html":{}}}],["blame",{"_index":3001,"title":{},"body":{"index.html":{}}}],["blob",{"_index":653,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["block",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["blue",{"_index":2377,"title":{},"body":{"components/TermModal.html":{}}}],["body",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthenticationResponse.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"classes/LoginResponse.html":{}}}],["body._deineklasse",{"_index":2545,"title":{},"body":{"components/UserComponent.html":{}}}],["body>.ng",{"_index":2534,"title":{},"body":{"components/UserComponent.html":{}}}],["bodyused",{"_index":645,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["bold",{"_index":1339,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["boolean",{"_index":100,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{}}}],["bootstrap",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["border",{"_index":1287,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["bordered",{"_index":2475,"title":{},"body":{"components/UsageModal.html":{}}}],["borders",{"_index":1331,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["bottom",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["box",{"_index":1332,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["bpmn",{"_index":745,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["bpmn({container",{"_index":2757,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bpmn.io",{"_index":3015,"title":{},"body":{"index.html":{}}}],["bpmnfactory",{"_index":2940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bpmnstore",{"_index":686,"title":{"injectables/BPMNStore.html":{}},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["branch",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["bring",{"_index":3003,"title":{},"body":{"index.html":{}}}],["browse",{"_index":3048,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"classes/CommandStack.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["bs3",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["bsmodalcomponent",{"_index":1079,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["bsmodalmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodalref",{"_index":2369,"title":{},"body":{"components/TermModal.html":{}}}],["btn",{"_index":1305,"title":{},"body":{"components/FrontPageComponent.html":{},"components/UserComponent.html":{}}}],["btn.btn",{"_index":1300,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["buffer",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":2957,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":2973,"title":{},"body":{"index.html":{}}}],["bundling",{"_index":3028,"title":{},"body":{"index.html":{}}}],["button",{"_index":1358,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["call",{"_index":880,"title":{},"body":{"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["called",{"_index":925,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{}}}],["camunda",{"_index":1709,"title":{},"body":{"components/ModelLoaderComponent.html":{},"dependencies.html":{}}}],["camundamoddle",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["canactivate",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["cancel",{"_index":905,"title":{},"body":{"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["canvas",{"_index":1261,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["card",{"_index":1282,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["cascading",{"_index":770,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["case",{"_index":1325,"title":{},"body":{"components/FrontPageComponent.html":{},"components/SubProcessModal.html":{}}}],["catch",{"_index":120,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/ModellerPageComponent.html":{}}}],["catch(error",{"_index":1722,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/UserComponent.html":{}}}],["catch(this.handleerror",{"_index":2769,"title":{},"body":{"components/ViewerComponent.html":{}}}],["catcherror",{"_index":629,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["centered",{"_index":1922,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["change",{"_index":247,"title":{},"body":{"injectables/AlertService.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["changed",{"_index":840,"title":{},"body":{"classes/CommandStack.html":{}}}],["changedmodel.lastchange",{"_index":1793,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changedmodel.modelname",{"_index":1791,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changedmodel.version",{"_index":1792,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changelistener",{"_index":1670,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changelistener($event",{"_index":1685,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changes",{"_index":885,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/TermModal.html":{}}}],["changeslast7day",{"_index":1665,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["changing",{"_index":2716,"title":{},"body":{"pipes/Version.html":{}}}],["check",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{}}}],["checking",{"_index":2471,"title":{},"body":{"components/UsageModal.html":{}}}],["checks",{"_index":2504,"title":{},"body":{"components/UserComponent.html":{}}}],["circle",{"_index":742,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["city",{"_index":2565,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AuthenticationResponse.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"classes/ModelElement.html":{},"classes/SnackBarMessage.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"classes/Variable.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["class=\"badge",{"_index":1897,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["class=\"input",{"_index":2472,"title":{},"body":{"components/UsageModal.html":{}}}],["class=\"panel",{"_index":1903,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["class=\"table",{"_index":2473,"title":{},"body":{"components/UsageModal.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AuthenticationResponse.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"classes/ModelElement.html":{},"classes/SnackBarMessage.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"classes/Variable.html":{},"overview.html":{}}}],["classname",{"_index":730,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["clear",{"_index":245,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{}}}],["clearmodal",{"_index":1039,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["clearmodal(s",{"_index":1052,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["cli",{"_index":2958,"title":{},"body":{"index.html":{}}}],["click",{"_index":737,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["clicking",{"_index":2387,"title":{},"body":{"components/TermModal.html":{}}}],["client",{"_index":59,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{},"dependencies.html":{}}}],["clientid",{"_index":119,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["clone",{"_index":654,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["close",{"_index":2401,"title":{},"body":{"components/TermModal.html":{},"components/UsageModal.html":{}}}],["closed",{"_index":1040,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["closemodal",{"_index":2432,"title":{},"body":{"components/UsageModal.html":{}}}],["closeresult",{"_index":1031,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["cloud",{"_index":748,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["cluster_appmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":3037,"title":{},"body":{"index.html":{}}}],["cog",{"_index":754,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["collaboration.bpmn",{"_index":725,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ViewerComponent.html":{}}}],["collaborator",{"_index":1535,"title":{},"body":{"classes/Model.html":{},"components/ModellerPageComponent.html":{}}}],["collaborator(value",{"_index":1593,"title":{},"body":{"classes/Model.html":{}}}],["collaborators",{"_index":1905,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["color",{"_index":1295,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"components/UserComponent.html":{}}}],["color:red",{"_index":2546,"title":{},"body":{"components/UserComponent.html":{}}}],["column",{"_index":739,"title":{},"body":{"injectables/BPMNStore.html":{},"components/FrontPageComponent.html":{},"classes/Link.html":{},"classes/UserEntity.html":{}}}],["coming",{"_index":713,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commandinterceptor",{"_index":834,"title":{},"body":{"classes/CommandStack.html":{},"coverage.html":{}}}],["commandinterceptor.call(commandinterceptor",{"_index":947,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.execute",{"_index":961,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.executed",{"_index":959,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.on",{"_index":963,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.postexecuted",{"_index":957,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.prototype.execute",{"_index":962,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.prototype.executed",{"_index":960,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.prototype.executed.call(commandinterceptor",{"_index":969,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.prototype.on",{"_index":964,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandinterceptor.prototype.postexecuted",{"_index":958,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandlogger",{"_index":795,"title":{},"body":{"classes/CommandStack.html":{}}}],["commandqueue",{"_index":2950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["commands",{"_index":693,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["commands.highlight",{"_index":780,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.open_subprocess_model",{"_index":776,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.open_usage_model",{"_index":787,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.reset",{"_index":784,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.save",{"_index":740,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.savetodb",{"_index":747,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.set_ipim_evaluator",{"_index":767,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.set_ipim_subprocess",{"_index":773,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.set_ipim_values",{"_index":752,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.set_ipim_values_evaluate",{"_index":762,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.set_term",{"_index":759,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commands.two_column",{"_index":727,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commandstack",{"_index":793,"title":{"classes/CommandStack.html":{}},"body":{"classes/CommandStack.html":{},"coverage.html":{}}}],["commandstore.service",{"_index":694,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["commandtest",{"_index":796,"title":{},"body":{"classes/CommandStack.html":{}}}],["comments",{"_index":2985,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/FrontPageModule.html":{}}}],["comp",{"_index":1474,"title":{},"body":{"components/InputVarComponent.html":{},"components/VariableComponent.html":{}}}],["comp'},{'name",{"_index":183,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["companyemail",{"_index":2559,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["companyname",{"_index":2560,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["complected",{"_index":1892,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["completed",{"_index":2220,"title":{},"body":{"injectables/StoreService.html":{}}}],["completedtodos",{"_index":2190,"title":{},"body":{"injectables/StoreService.html":{}}}],["component",{"_index":134,"title":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["components",{"_index":136,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"index.html":{},"overview.html":{}}}],["components/alert/alert.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["components/appfootercomponent/footer.component",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["components/appheadercomponent/header.component",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modelcomponent/model.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"classes/CommandStack.html":{}}}],["components/modelloadercomponent/modelloader.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["components/permissioncomponent/permission.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["components/profilecomponent/profile.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rolecomponent/role.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["components/usercomponent/user.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":60,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["connect",{"_index":65,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["connect(id",{"_index":76,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["connection",{"_index":847,"title":{},"body":{"classes/CommandStack.html":{}}}],["connectoncreate",{"_index":91,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["console.error('error",{"_index":1732,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["console.error(error",{"_index":1734,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["console.info(model",{"_index":1782,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{}}}],["console.log",{"_index":1851,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(\"error",{"_index":1873,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(\"inputmodal",{"_index":1406,"title":{},"body":{"components/InputModal.html":{}}}],["console.log(\"loadedmodel",{"_index":1889,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(\"loading",{"_index":1891,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(\"opened",{"_index":2706,"title":{},"body":{"components/VariableModal.html":{}}}],["console.log(\"termmodal",{"_index":2392,"title":{},"body":{"components/TermModal.html":{}}}],["console.log(\"variable",{"_index":2707,"title":{},"body":{"components/VariableModal.html":{}}}],["console.log(\"variablemodal",{"_index":2711,"title":{},"body":{"components/VariableModal.html":{}}}],["console.log('clear",{"_index":1094,"title":{},"body":{"components/EvalModal.html":{}}}],["console.log('debug",{"_index":2529,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log('error",{"_index":1784,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ViewerComponent.html":{}}}],["console.log('evaluatormodal",{"_index":1093,"title":{},"body":{"components/EvalModal.html":{}}}],["console.log('filled",{"_index":1099,"title":{},"body":{"components/EvalModal.html":{}}}],["console.log('listdiagrams",{"_index":711,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('mqtt",{"_index":124,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["console.log('openinputmodal",{"_index":766,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('opentermmodal",{"_index":761,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('openvariablemodal",{"_index":758,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('permissonmqtt",{"_index":1998,"title":{},"body":{"components/PermissionComponent.html":{}}}],["console.log('received",{"_index":2465,"title":{},"body":{"components/UsageModal.html":{}}}],["console.log('rendered",{"_index":2760,"title":{},"body":{"components/ViewerComponent.html":{}}}],["console.log('save",{"_index":746,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('savemodal",{"_index":2151,"title":{},"body":{"components/SaveModal.html":{}}}],["console.log('subprocessmodal",{"_index":2308,"title":{},"body":{"components/SubProcessModal.html":{}}}],["console.log('test",{"_index":908,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["console.log('the",{"_index":638,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["console.log('two",{"_index":738,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log('usagemodal",{"_index":2468,"title":{},"body":{"components/UsageModal.html":{}}}],["console.log('variablemodal",{"_index":2152,"title":{},"body":{"components/SaveModal.html":{},"components/VariableModal.html":{}}}],["console.log(commands.open_subprocess_model",{"_index":779,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log(commands.set_ipim_evaluator",{"_index":772,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log(commands.set_ipim_subprocess",{"_index":775,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["console.log(err",{"_index":913,"title":{},"body":{"classes/CommandStack.html":{}}}],["console.log(error",{"_index":133,"title":{},"body":{"injectables/AdamoMqttService.html":{},"guards/AuthGuard.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["console.log(firstsubprocessstring",{"_index":2319,"title":{},"body":{"components/SubProcessModal.html":{}}}],["console.log(response",{"_index":1740,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/UserComponent.html":{}}}],["console.log(response._body",{"_index":2306,"title":{},"body":{"components/SubProcessModal.html":{}}}],["console.log(this.constructor.name",{"_index":2310,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{}}}],["console.log(this.models",{"_index":1849,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(this.models[index",{"_index":1867,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(this.page",{"_index":1847,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["console.log(topic",{"_index":897,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["const",{"_index":109,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/CommandStack.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/InputModal.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/AbstractDto.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["constructor(alertservice",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{}}}],["constructor(apiservice",{"_index":70,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/ModelComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["constructor(authenticationservice",{"_index":1008,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(authservice",{"_index":1481,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/ModelLoaderComponent.html":{}}}],["constructor(backend",{"_index":620,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["constructor(data",{"_index":2420,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["constructor(entity",{"_index":13,"title":{},"body":{"classes/AbstractDto.html":{}}}],["constructor(formbuilder",{"_index":1202,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["constructor(href",{"_index":1491,"title":{},"body":{"classes/Link.html":{}}}],["constructor(http",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BPMNStore.html":{},"injectables/UserService.html":{},"components/ViewerComponent.html":{}}}],["constructor(logger",{"_index":147,"title":{},"body":{"components/AdministrationComponent.html":{}}}],["constructor(modalservice",{"_index":1046,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["constructor(modeler",{"_index":811,"title":{},"body":{"classes/CommandStack.html":{}}}],["constructor(name",{"_index":1659,"title":{},"body":{"classes/ModelElement.html":{},"classes/Variable.html":{}}}],["constructor(private",{"_index":154,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BPMNStore.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["constructor(public",{"_index":702,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"classes/ModelElement.html":{},"classes/SnackBarMessage.html":{},"components/TermModal.html":{},"injectables/UserService.html":{},"classes/Variable.html":{}}}],["constructor(route",{"_index":328,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["constructor(router",{"_index":234,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["constructor(text",{"_index":2157,"title":{},"body":{"classes/SnackBarMessage.html":{}}}],["constructor(title",{"_index":991,"title":{},"body":{"classes/Entry.html":{}}}],["constructor(user",{"_index":1495,"title":{},"body":{"classes/LoginPayloadDto.html":{},"classes/UserDto.html":{}}}],["container",{"_index":1283,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["content",{"_index":1060,"title":{},"body":{"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["content:url(/logo_ipim.svg",{"_index":1298,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["contentchild",{"_index":2368,"title":{},"body":{"components/TermModal.html":{}}}],["control",{"_index":2537,"title":{},"body":{"components/UserComponent.html":{}}}],["control:focus",{"_index":1361,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["convenience",{"_index":1226,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["converts",{"_index":2404,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["coordination/integration",{"_index":3014,"title":{},"body":{"index.html":{}}}],["core",{"_index":2775,"title":{},"body":{"interfaces/Window.html":{},"dependencies.html":{}}}],["correct",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["country",{"_index":2564,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["coverage",{"_index":2795,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["createcustomtabgroups",{"_index":2826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcustomtabgroups(element",{"_index":2938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created",{"_index":1988,"title":{},"body":{"components/PermissionComponent.html":{}}}],["createdat",{"_index":9,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/UserDto.html":{}}}],["createempty",{"_index":1671,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["creategeneraltabgroups",{"_index":2827,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creategeneraltabgroups(element",{"_index":2939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createloaded",{"_index":1672,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["createnew",{"_index":1673,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["createpropertyelement",{"_index":2335,"title":{},"body":{"components/TermModal.html":{}}}],["createpropertyelement(element",{"_index":2348,"title":{},"body":{"components/TermModal.html":{}}}],["creates",{"_index":978,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{},"pipes/Version.html":{}}}],["creating",{"_index":2654,"title":{},"body":{"injectables/UserService.html":{}}}],["css",{"_index":1032,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"index.html":{}}}],["cssclass",{"_index":1033,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["current",{"_index":923,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["currently",{"_index":852,"title":{},"body":{"classes/CommandStack.html":{},"components/SubProcessModal.html":{}}}],["currentstatus",{"_index":327,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["currentuser",{"_index":494,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/ModellerPageComponent.html":{}}}],["currentuser.role",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{}}}],["currentuser.token",{"_index":1487,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentuser.username",{"_index":1906,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["currentusersubject",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuservalue",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":1312,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["custom",{"_index":2805,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["custompalettemodule",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["custompropertiesprovider",{"_index":2828,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["custompropertiesprovider(eventbus",{"_index":2941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custompropertiesprovidermodule",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["customprops",{"_index":2838,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["customprops(group",{"_index":2942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damit",{"_index":1713,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["darkgrey",{"_index":2533,"title":{},"body":{"components/UserComponent.html":{}}}],["darkred",{"_index":1323,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["das",{"_index":1452,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["dash",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["dasharray",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["dashoffset",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["data.accesstoken",{"_index":2427,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["data.expiresin",{"_index":2425,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["database",{"_index":751,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["date",{"_index":23,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/Timestamp2Date.html":{},"classes/UserDto.html":{}}}],["date(value",{"_index":2408,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["date.getdate()).slice",{"_index":2410,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["date.getfullyear",{"_index":2413,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["date.gethours()).slice",{"_index":2415,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["date.getminutes()).slice",{"_index":2416,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["date.getmonth",{"_index":2411,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["datestring",{"_index":2409,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["db",{"_index":1626,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["ddd",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["dddddd",{"_index":1280,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["debug",{"_index":2781,"title":{},"body":{"interfaces/Window.html":{},"index.html":{}}}],["declarations",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/FrontPageModule.html":{},"overview.html":{}}}],["declare",{"_index":2790,"title":{},"body":{"interfaces/Window.html":{}}}],["decode",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decode(localstorage.getitem(\"token",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":2691,"title":{},"body":{"components/VariableModal.html":{}}}],["default",{"_index":89,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["defaultoptions",{"_index":622,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["defaulttopic",{"_index":797,"title":{},"body":{"classes/CommandStack.html":{}}}],["define",{"_index":1105,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["defines",{"_index":1616,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["delay",{"_index":1111,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delay(1",{"_index":792,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["delay(2",{"_index":726,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["delayed",{"_index":1124,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delete",{"_index":1656,"title":{},"body":{"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/SnackBarService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":1992,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{}}}],["deletes",{"_index":1649,"title":{},"body":{"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["dem",{"_index":1711,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["dematerialize",{"_index":1114,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["den",{"_index":1717,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["dependencies",{"_index":349,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":1441,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["details",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev",{"_index":2959,"title":{},"body":{"index.html":{}}}],["development",{"_index":1166,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interfaces/Window.html":{},"index.html":{}}}],["devkit/build",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["diagram",{"_index":786,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["diagramcomponent",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["diagrams/pizza",{"_index":2761,"title":{},"body":{"components/ViewerComponent.html":{}}}],["dialog",{"_index":1755,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["die",{"_index":1458,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["dieses",{"_index":1422,"title":{},"body":{"components/InputModal.html":{}}}],["different",{"_index":2316,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["difficult",{"_index":3017,"title":{},"body":{"index.html":{}}}],["direct",{"_index":956,"title":{},"body":{"classes/CommandStack.html":{}}}],["direction",{"_index":1293,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["directive",{"_index":161,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":209,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":1777,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["directory",{"_index":2982,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1910,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["disconnect",{"_index":66,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["disk",{"_index":1759,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["diskmodelname",{"_index":1666,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["diskmodelxml",{"_index":1667,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["dismissed",{"_index":1041,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["display",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/SubProcessModal.html":{},"components/ViewerComponent.html":{}}}],["dist",{"_index":2961,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":2981,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('snackbarpage",{"_index":2175,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["document.getelementbyid(s",{"_index":1414,"title":{},"body":{"components/InputModal.html":{}}}],["documentation",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["documentationprops",{"_index":2829,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":3023,"title":{},"body":{"index.html":{}}}],["dom",{"_index":138,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["done",{"_index":3029,"title":{},"body":{"index.html":{}}}],["dort",{"_index":1716,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["dotenv",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":743,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["download",{"_index":777,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["dragging",{"_index":798,"title":{},"body":{"classes/CommandStack.html":{}}}],["dto/abstractdto",{"_index":48,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["dto/userdto",{"_index":2602,"title":{},"body":{"classes/UserEntity.html":{}}}],["dtoclass",{"_index":43,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/UserEntity.html":{}}}],["durchlaufen",{"_index":1443,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["dynamic",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1765,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/UserComponent.html":{}}}],["e.g",{"_index":3018,"title":{},"body":{"index.html":{}}}],["each",{"_index":980,"title":{},"body":{"classes/CommandStack.html":{}}}],["ease",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["easy",{"_index":1228,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["echos",{"_index":851,"title":{},"body":{"classes/CommandStack.html":{}}}],["eigenschaften",{"_index":1450,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["ein",{"_index":1418,"title":{},"body":{"components/InputModal.html":{}}}],["element",{"_index":160,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["element.businessobject.extensionelements",{"_index":1455,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["element.businessobject.extensionelements.get(\"values",{"_index":1461,"title":{},"body":{"components/InputModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["element.businessobject.extensionelements.get('values",{"_index":2323,"title":{},"body":{"components/SubProcessModal.html":{}}}],["element.changed",{"_index":926,"title":{},"body":{"classes/CommandStack.html":{}}}],["element.id",{"_index":1884,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["element.mid.tostring",{"_index":2301,"title":{},"body":{"components/SubProcessModal.html":{}}}],["element.modelname",{"_index":2303,"title":{},"body":{"components/SubProcessModal.html":{}}}],["element.version",{"_index":1885,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["elemente",{"_index":1440,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["elementfactory",{"_index":2944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elementregistry",{"_index":799,"title":{},"body":{"classes/CommandStack.html":{},"components/InputModal.html":{},"components/VariableModal.html":{},"miscellaneous/functions.html":{}}}],["elementregistry.getall",{"_index":1442,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["elements",{"_index":783,"title":{},"body":{"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["elements.foreach((element",{"_index":1446,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["elements[0",{"_index":2712,"title":{},"body":{"components/VariableModal.html":{}}}],["elereg",{"_index":800,"title":{},"body":{"classes/CommandStack.html":{}}}],["eliminate",{"_index":981,"title":{},"body":{"classes/CommandStack.html":{}}}],["ellipsis",{"_index":1347,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["email",{"_index":83,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"classes/LoginResponse.html":{},"components/PermissionComponent.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":1778,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{}}}],["empty",{"_index":1618,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["ensure",{"_index":1151,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["entered",{"_index":2505,"title":{},"body":{"components/UserComponent.html":{}}}],["entfernt",{"_index":1423,"title":{},"body":{"components/InputModal.html":{}}}],["entity",{"_index":22,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{}}}],["entity.createdat",{"_index":35,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entity.id",{"_index":33,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entity.updatedat",{"_index":37,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entry",{"_index":986,"title":{"classes/Entry.html":{}},"body":{"classes/Entry.html":{},"injectables/StoreService.html":{},"coverage.html":{}}}],["entry(title",{"_index":2249,"title":{},"body":{"injectables/StoreService.html":{}}}],["entry(todo.title",{"_index":2232,"title":{},"body":{"injectables/StoreService.html":{}}}],["entrycomponents",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["entryfactory",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["entrys",{"_index":2191,"title":{},"body":{"injectables/StoreService.html":{}}}],["enumerations",{"_index":2931,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2780,"title":{},"body":{"interfaces/Window.html":{}}}],["environment",{"_index":113,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["environment.mqtt_host",{"_index":94,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["environment.mqtt_port",{"_index":96,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{}}}],["environment.projectname",{"_index":1210,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["environment.server_host",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"classes/CommandStack.html":{},"injectables/UserService.html":{}}}],["environment.server_port",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":114,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"injectables/UserService.html":{}}}],["equals",{"_index":2726,"title":{},"body":{"pipes/Version.html":{}}}],["err",{"_index":912,"title":{},"body":{"classes/CommandStack.html":{},"components/ViewerComponent.html":{}}}],["err.error.message",{"_index":1025,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":1020,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":1026,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":121,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["error('method",{"_index":684,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["error('username",{"_index":1136,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["error(message",{"_index":236,"title":{},"body":{"injectables/AlertService.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["error(text",{"_index":2163,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["error.status",{"_index":633,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["error['stacktracelimit",{"_index":2784,"title":{},"body":{"interfaces/Window.html":{}}}],["errorinterceptor",{"_index":430,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["erweiterte",{"_index":1449,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["es",{"_index":1416,"title":{},"body":{"components/InputModal.html":{}}}],["es6",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["esc",{"_index":2385,"title":{},"body":{"components/TermModal.html":{}}}],["etc",{"_index":2965,"title":{},"body":{"index.html":{}}}],["eval",{"_index":174,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["evalmodal",{"_index":173,"title":{"components/EvalModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["evaluate",{"_index":764,"title":{},"body":{"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/Link.html":{}}}],["evaluating",{"_index":938,"title":{},"body":{"classes/CommandStack.html":{}}}],["evaluation",{"_index":771,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/Link.html":{}}}],["evaluator",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["evaluatormodal.html",{"_index":1029,"title":{},"body":{"components/EvalModal.html":{}}}],["even",{"_index":1152,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["event",{"_index":249,"title":{},"body":{"injectables/AlertService.html":{},"classes/CommandStack.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{}}}],["event.command",{"_index":973,"title":{},"body":{"classes/CommandStack.html":{}}}],["event.context.ipimremote",{"_index":971,"title":{},"body":{"classes/CommandStack.html":{}}}],["event.ipimid",{"_index":904,"title":{},"body":{"classes/CommandStack.html":{}}}],["event.mid",{"_index":917,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["event.mid.tostring",{"_index":1844,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["event.newversion",{"_index":920,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["event.version",{"_index":919,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["eventbus",{"_index":801,"title":{},"body":{"classes/CommandStack.html":{},"miscellaneous/functions.html":{}}}],["eventemitter",{"_index":1682,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/TermModal.html":{}}}],["eventprops",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["events",{"_index":1917,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["eventtarget",{"_index":1174,"title":{},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{}}}],["example",{"_index":2718,"title":{},"body":{"pipes/Version.html":{}}}],["executed",{"_index":1095,"title":{},"body":{"components/EvalModal.html":{}}}],["exist",{"_index":2153,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{}}}],["existieren",{"_index":1454,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["existing",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"pipes/Version.html":{}}}],["exists",{"_index":1882,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/SaveModal.html":{}}}],["experience",{"_index":2991,"title":{},"body":{"index.html":{}}}],["experienced",{"_index":2989,"title":{},"body":{"index.html":{}}}],["experts",{"_index":2996,"title":{},"body":{"index.html":{}}}],["expiration",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["expires",{"_index":640,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["expiresin",{"_index":2419,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["exports",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":2665,"title":{},"body":{"components/VariableComponent.html":{}}}],["expressjs",{"_index":1718,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["extends",{"_index":618,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"classes/UserDto.html":{}}}],["extensions/rxjs/issues/648",{"_index":1155,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["extrapaletteentries",{"_index":2949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extras",{"_index":1460,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["extras[0].values",{"_index":1462,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["extras[0].values[index].name",{"_index":1465,"title":{},"body":{"components/InputModal.html":{}}}],["extras[0].values[index].value.tolowercase",{"_index":1470,"title":{},"body":{"components/InputModal.html":{}}}],["eyj0exaioijkv1qilcjhbgcioijiuzi1nij9.eyjpc3mioijpbmxpbmugslduiej1awxkzxiilcjpyxqioje1mzmynzm5njksimv4cci6mtu2ndgxmdawnswiyxvkijoid3d3lmv4yw1wbguuy29tiiwic3viijoivgvzdcbhdwfyzcisikdpdmvutmftzsi6ikpvag5uesisiln1cm5hbwuioijsb2nrzxqilcjfbwfpbci6impyb2nrzxrazxhhbxbszs5jb20ifq.ga0y9gyijmx1jlwurhubgz8m6o",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["eyj0exaioijkv1qilcjhbgcioijiuzi1nij9.eyjpc3mioijpbmxpbmugslduiej1awxkzxiilcjpyxqioje1mzmynzm5njksimv4cci6mtu2ndgxmdawnswiyxvkijoid3d3lmv4yw1wbguuy29tiiwic3viijoivgvzdcbhdwfyzcisikdpdmvutmftzsi6ikpvag5uesisiln1cm5hbwuioijsb2nrzxqilcjfbwfpbci6impyb2nrzxrazxhhbxbszs5jb20ilcjyb2xlijoiqwrtaw4ifq.rekg53_ieclzghlmahteo8kf5bnfl6nej8w",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["f",{"_index":1201,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["f7f7f7",{"_index":1324,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["fa",{"_index":731,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["fachevronleft",{"_index":695,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["fachevronright",{"_index":696,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["fadein",{"_index":1935,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["fadeout",{"_index":1937,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["fake",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["fakebackendinterceptor",{"_index":1106,"title":{"interceptors/FakeBackendInterceptor.html":{}},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["fakebackendprovider",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["false",{"_index":238,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"pipes/Version.html":{}}}],["family",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["fas",{"_index":755,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["features",{"_index":1908,"title":{},"body":{"components/ModellerPageComponent.html":{},"index.html":{}}}],["feedback",{"_index":2984,"title":{},"body":{"index.html":{}}}],["fff",{"_index":1928,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["fields",{"_index":1231,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{}}}],["file.name.split('.')[0",{"_index":1767,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["filelist",{"_index":2774,"title":{},"body":{"interfaces/Window.html":{}}}],["filereader",{"_index":1762,"title":{},"body":{"components/ModelLoaderComponent.html":{},"interfaces/Window.html":{}}}],["filereaderevent",{"_index":1168,"title":{"interfaces/FileReaderEvent.html":{}},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"coverage.html":{}}}],["filereadereventtarget",{"_index":1173,"title":{"interfaces/FileReaderEventTarget.html":{}},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"coverage.html":{}}}],["files",{"_index":3026,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2469,"title":{},"body":{"components/UsageModal.html":{}}}],["fillmodal",{"_index":1042,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["fillsubprocessmodal",{"_index":2260,"title":{},"body":{"components/SubProcessModal.html":{}}}],["filltermmodal",{"_index":2336,"title":{},"body":{"components/TermModal.html":{}}}],["fillusagemodal",{"_index":2433,"title":{},"body":{"components/UsageModal.html":{}}}],["filter",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["filterunique",{"_index":359,"title":{"pipes/FilterUnique.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterUnique.html":{},"coverage.html":{},"overview.html":{}}}],["finally",{"_index":965,"title":{},"body":{"classes/CommandStack.html":{}}}],["find",{"_index":2994,"title":{},"body":{"index.html":{}}}],["finden",{"_index":1445,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["finishes",{"_index":1756,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["first",{"_index":491,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"guards/RoleGuard.html":{},"injectables/SnackBarService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["firstchild",{"_index":1419,"title":{},"body":{"components/InputModal.html":{}}}],["firstname",{"_index":1117,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["firstsubprocess",{"_index":2256,"title":{},"body":{"components/SubProcessModal.html":{}}}],["firstsubprocessstring",{"_index":2317,"title":{},"body":{"components/SubProcessModal.html":{}}}],["firstterm",{"_index":2371,"title":{},"body":{"components/TermModal.html":{}}}],["fixed",{"_index":1929,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["flex",{"_index":1269,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["folder",{"_index":717,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["following",{"_index":2470,"title":{},"body":{"components/UsageModal.html":{}}}],["font",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["fontawesome",{"_index":700,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["fontawesome.library.add(fachevronleft",{"_index":709,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["fonts",{"_index":2964,"title":{},"body":{"index.html":{}}}],["footer",{"_index":325,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["footer'},{'name",{"_index":170,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["footer.template.html",{"_index":326,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["force",{"_index":641,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["forgot",{"_index":1367,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["form",{"_index":1230,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["formbuilder",{"_index":1203,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["formdata",{"_index":655,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["formgroup",{"_index":1208,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["formsmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":697,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["forum",{"_index":3008,"title":{},"body":{"index.html":{}}}],["found",{"_index":2083,"title":{},"body":{"guards/RoleGuard.html":{},"components/SubProcessModal.html":{}}}],["four",{"_index":2725,"title":{},"body":{"pipes/Version.html":{}}}],["free",{"_index":698,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["from(subject).pipe(first",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{}}}],["front",{"_index":177,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["frontpagecomponent",{"_index":176,"title":{"components/FrontPageComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frontpagemodule",{"_index":1369,"title":{"modules/FrontPageModule.html":{}},"body":{"modules/FrontPageModule.html":{},"modules.html":{}}}],["fs",{"_index":719,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["full",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":857,"title":{},"body":{"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["functionality",{"_index":3019,"title":{},"body":{"index.html":{}}}],["functions",{"_index":954,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":3035,"title":{},"body":{"index.html":{}}}],["für",{"_index":1451,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["general",{"_index":1268,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["generally",{"_index":2988,"title":{},"body":{"index.html":{}}}],["generate",{"_index":865,"title":{},"body":{"classes/CommandStack.html":{}}}],["generated",{"_index":848,"title":{},"body":{"classes/CommandStack.html":{}}}],["get(state",{"_index":2210,"title":{},"body":{"injectables/StoreService.html":{}}}],["getall",{"_index":2607,"title":{},"body":{"injectables/UserService.html":{}}}],["getallmodels",{"_index":1604,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["getallprofiles",{"_index":2017,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["getallroles",{"_index":1945,"title":{},"body":{"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["getallusers",{"_index":1946,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["getbyid",{"_index":2608,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid(id",{"_index":2616,"title":{},"body":{"injectables/UserService.html":{}}}],["getclient",{"_index":67,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/ProfileComponent.html":{}}}],["getclient(email",{"_index":81,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["getcollaborator",{"_index":1566,"title":{},"body":{"classes/Model.html":{}}}],["getcompleted",{"_index":2197,"title":{},"body":{"injectables/StoreService.html":{}}}],["getcurrentuservalue",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdismissreason(reason",{"_index":2382,"title":{},"body":{"components/TermModal.html":{}}}],["getelement",{"_index":1411,"title":{},"body":{"components/InputModal.html":{}}}],["getf",{"_index":1214,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["getfirstterm",{"_index":2337,"title":{},"body":{"components/TermModal.html":{}}}],["getid",{"_index":68,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/Model.html":{}}}],["getisadmin",{"_index":1831,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["getlatestchanges",{"_index":1674,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["getmessage",{"_index":232,"title":{},"body":{"injectables/AlertService.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{}}}],["getmodel(this.selected.id",{"_index":1779,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["getmodelercomponent",{"_index":1551,"title":{},"body":{"classes/Model.html":{}}}],["getname",{"_index":1558,"title":{},"body":{"classes/Model.html":{}}}],["getpermission",{"_index":1947,"title":{},"body":{"components/PermissionComponent.html":{}}}],["getpermission(user",{"_index":1957,"title":{},"body":{"components/PermissionComponent.html":{}}}],["getread",{"_index":1574,"title":{},"body":{"classes/Model.html":{}}}],["getremaining",{"_index":2198,"title":{},"body":{"injectables/StoreService.html":{}}}],["gets",{"_index":943,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["getshowinfo",{"_index":1570,"title":{},"body":{"classes/Model.html":{}}}],["getstate",{"_index":69,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["getsubpartmodelsfromdb",{"_index":2434,"title":{},"body":{"components/UsageModal.html":{}}}],["getter",{"_index":1227,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["getting",{"_index":2952,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":2609,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserby",{"_index":2610,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserby(id",{"_index":2619,"title":{},"body":{"injectables/UserService.html":{}}}],["getversion",{"_index":1547,"title":{},"body":{"classes/Model.html":{}}}],["getwrite",{"_index":1578,"title":{},"body":{"classes/Model.html":{}}}],["getxml",{"_index":1562,"title":{},"body":{"classes/Model.html":{}}}],["gibt",{"_index":1420,"title":{},"body":{"components/InputModal.html":{}}}],["github",{"_index":3006,"title":{},"body":{"index.html":{}}}],["given",{"_index":2155,"title":{},"body":{"components/SaveModal.html":{}}}],["global",{"_index":2791,"title":{},"body":{"interfaces/Window.html":{}}}],["global.buffer",{"_index":2793,"title":{},"body":{"interfaces/Window.html":{}}}],["globalconnect",{"_index":2948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["glyphicfaon",{"_index":744,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["gradient(#f5f5f5",{"_index":1279,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["gradient(rgb(104",{"_index":1273,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["granit's",{"_index":1255,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["graph",{"_index":3049,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1313,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["group",{"_index":728,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/UsageModal.html":{},"miscellaneous/functions.html":{}}}],["group>.form",{"_index":2536,"title":{},"body":{"components/UserComponent.html":{}}}],["group>.labelcontainer>.col",{"_index":2539,"title":{},"body":{"components/UserComponent.html":{}}}],["guard",{"_index":482,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["guards/role.guard",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["gui",{"_index":979,"title":{},"body":{"classes/CommandStack.html":{}}}],["guidgenerator",{"_index":810,"title":{},"body":{"classes/CommandStack.html":{}}}],["handle",{"_index":881,"title":{},"body":{"classes/CommandStack.html":{}}}],["handled",{"_index":1148,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["handleerror",{"_index":2747,"title":{},"body":{"components/ViewerComponent.html":{}}}],["handleerror(err",{"_index":2750,"title":{},"body":{"components/ViewerComponent.html":{}}}],["handling",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["handtool",{"_index":2947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["happy",{"_index":968,"title":{},"body":{"classes/CommandStack.html":{}}}],["harddisk",{"_index":1741,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["header",{"_index":343,"title":{},"body":{"components/AppHeaderComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["header'},{'name",{"_index":172,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["header.template.html",{"_index":344,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["headers",{"_index":646,"title":{},"body":{"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/Link.html":{},"classes/LoginResponse.html":{}}}],["height",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["help",{"_index":2983,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1159,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["helper.ts",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["helpers",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["helvetica",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["here",{"_index":886,"title":{},"body":{"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"index.html":{}}}],["hidden",{"_index":1346,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["hide",{"_index":2186,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["highlight",{"_index":782,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["holen",{"_index":1428,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["home",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["hook",{"_index":967,"title":{},"body":{"classes/CommandStack.html":{}}}],["hopefully",{"_index":2992,"title":{},"body":{"index.html":{}}}],["hostname",{"_index":93,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{}}}],["hover",{"_index":1912,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/UsageModal.html":{}}}],["href",{"_index":704,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["html",{"_index":159,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["http",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/Link.html":{},"components/SaveModal.html":{},"injectables/UserService.html":{},"components/ViewerComponent.html":{}}}],["http_interceptors",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["httpclient",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1016,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":1014,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":1017,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpmodule",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":2640,"title":{},"body":{"injectables/UserService.html":{}}}],["httprequest",{"_index":1012,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpresponse",{"_index":1110,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["https://forum.bpmn.io/t/bpmn",{"_index":3009,"title":{},"body":{"index.html":{}}}],["https://github.com/reactive",{"_index":1154,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["https://github.com/theo4u/angular4",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["i.getallmodels",{"_index":1625,"title":{},"body":{"components/ModelComponent.html":{}}}],["i.getallprofiles",{"_index":2034,"title":{},"body":{"components/ProfileComponent.html":{}}}],["i.getallroles",{"_index":2065,"title":{},"body":{"components/RoleComponent.html":{}}}],["i.getallusers",{"_index":2503,"title":{},"body":{"components/UserComponent.html":{}}}],["icons",{"_index":2974,"title":{},"body":{"index.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/Model.html":{},"classes/ModelElement.html":{},"components/SubProcessModal.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["id(value",{"_index":1587,"title":{},"body":{"classes/Model.html":{}}}],["idandversion",{"_index":1841,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["idandversion[0",{"_index":1843,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["idandversion[1",{"_index":1845,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["ideas",{"_index":2998,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["ides",{"_index":3041,"title":{},"body":{"index.html":{}}}],["idprops",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1272,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["img",{"_index":1297,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["immer",{"_index":1431,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["immutable",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["implement",{"_index":966,"title":{},"body":{"classes/CommandStack.html":{},"index.html":{}}}],["implemented",{"_index":685,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["implements",{"_index":493,"title":{},"body":{"guards/AuthGuard.html":{},"classes/AuthenticationResponse.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/LoginResponse.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{}}}],["important",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["imports",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FrontPageModule.html":{}}}],["improve",{"_index":3020,"title":{},"body":{"index.html":{}}}],["improvements",{"_index":2999,"title":{},"body":{"index.html":{}}}],["imqttmessage",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["imqttserviceoptions",{"_index":88,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{}}}],["include",{"_index":1218,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["inclusion",{"_index":2962,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":1137,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["increments",{"_index":2717,"title":{},"body":{"pipes/Version.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["industry",{"_index":2562,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["infinite",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["infinity",{"_index":2785,"title":{},"body":{"interfaces/Window.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{}}}],["inherit",{"_index":1281,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["inherited",{"_index":2552,"title":{},"body":{"classes/UserDto.html":{}}}],["inherits",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["initialization",{"_index":1854,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["initmqtt",{"_index":1675,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1337,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["inpnode",{"_index":1413,"title":{},"body":{"components/InputModal.html":{}}}],["inpnode.firstchild",{"_index":1424,"title":{},"body":{"components/InputModal.html":{}}}],["inpnode.removechild(inpnode.firstchild",{"_index":1425,"title":{},"body":{"components/InputModal.html":{}}}],["input",{"_index":180,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["input.component.html",{"_index":1475,"title":{},"body":{"components/InputVarComponent.html":{}}}],["input[type=email",{"_index":1355,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["input[type=password",{"_index":1356,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["input[type=text",{"_index":1357,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["inputcomponent/input.component",{"_index":1080,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["inputmodal",{"_index":179,"title":{"components/InputModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputmodal.html",{"_index":1373,"title":{},"body":{"components/InputModal.html":{}}}],["inputpassword",{"_index":1352,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["inputs",{"_index":1476,"title":{},"body":{"components/InputVarComponent.html":{},"components/TermModal.html":{},"components/VariableComponent.html":{}}}],["inputvalue",{"_index":1695,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["inputvalue.files[0",{"_index":1760,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["inputvar",{"_index":182,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["inputvarcomponent",{"_index":181,"title":{"components/InputVarComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inset",{"_index":1363,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["install",{"_index":2978,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2977,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":250,"title":{},"body":{"injectables/AlertService.html":{}}}],["integer",{"_index":2119,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{},"dependencies.html":{}}}],["intellij",{"_index":3027,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1007,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":1011,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":1004,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1005,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interface",{"_index":1167,"title":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"interfaces/Window.html":{}},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"interfaces/Window.html":{},"coverage.html":{}}}],["interfaces",{"_index":1169,"title":{},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["interpreter",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["invalid",{"_index":1236,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["io",{"_index":3007,"title":{},"body":{"index.html":{}}}],["ipim",{"_index":753,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Link.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["ipim_meta",{"_index":1034,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/VariableModal.html":{}}}],["ipim_options",{"_index":105,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"injectables/SnackBarService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ipim_options.newmodel",{"_index":1704,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["ipim_val",{"_index":1035,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/VariableModal.html":{}}}],["ipimid",{"_index":933,"title":{},"body":{"classes/CommandStack.html":{}}}],["isadmin",{"_index":1803,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["isauthenticated",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":1121,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["isnew",{"_index":1190,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["issued",{"_index":901,"title":{},"body":{"classes/CommandStack.html":{}}}],["issues",{"_index":3004,"title":{},"body":{"index.html":{}}}],["istokenexpired",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":2311,"title":{},"body":{"components/SubProcessModal.html":{}}}],["items",{"_index":1292,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["itself",{"_index":945,"title":{},"body":{"classes/CommandStack.html":{}}}],["javascript",{"_index":2963,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":950,"title":{},"body":{"classes/CommandStack.html":{},"dependencies.html":{}}}],["js",{"_index":1827,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["js/es6",{"_index":2776,"title":{},"body":{"interfaces/Window.html":{}}}],["js/es7/reflect",{"_index":2777,"title":{},"body":{"interfaces/Window.html":{}}}],["js/lib/command/commandinterceptor",{"_index":836,"title":{},"body":{"classes/CommandStack.html":{}}}],["json",{"_index":656,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["json.parse(error._body).status",{"_index":1875,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{}}}],["json.parse(localstorage.getitem(\"adamo.currentuser",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem('angular2",{"_index":2228,"title":{},"body":{"injectables/StoreService.html":{}}}],["json.parse(message",{"_index":898,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["json.stringify",{"_index":1645,"title":{},"body":{"components/ModelComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["json.stringify(event",{"_index":977,"title":{},"body":{"classes/CommandStack.html":{}}}],["json.stringify(response.user",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(this.todos",{"_index":2252,"title":{},"body":{"injectables/StoreService.html":{}}}],["json.stringify(transfer",{"_index":936,"title":{},"body":{"classes/CommandStack.html":{}}}],["jszip",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1291,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["jwt",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"dependencies.html":{}}}],["jwtinterceptor",{"_index":429,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["keep",{"_index":252,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{}}}],["keepafternavigationchange",{"_index":61,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{}}}],["keyboard",{"_index":1036,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["keyframes",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/ModellerPageComponent.html":{}}}],["kip",{"_index":1301,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["kollaborativen",{"_index":1714,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["labelcontainer",{"_index":2543,"title":{},"body":{"components/UserComponent.html":{}}}],["lane.updaterefs",{"_index":975,"title":{},"body":{"classes/CommandStack.html":{}}}],["large",{"_index":733,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["lassotool",{"_index":2946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":1790,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["lastchange",{"_index":1621,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["lastlogin",{"_index":2500,"title":{},"body":{"components/UserComponent.html":{}}}],["lastname",{"_index":1118,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["latest",{"_index":1785,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["left",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/ModellerPageComponent.html":{}}}],["legend",{"_index":158,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["less",{"_index":1165,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["level",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"pipes/Version.html":{}}}],["lg",{"_index":734,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/TermModal.html":{}}}],["libs",{"_index":3039,"title":{},"body":{"index.html":{}}}],["light",{"_index":1899,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/TermModal.html":{}}}],["limegreen",{"_index":2329,"title":{},"body":{"components/SubProcessModal.html":{}}}],["line",{"_index":1343,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["linear",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{}}}],["linecap",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":701,"title":{"classes/Link.html":{}},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link('/diagrams/initial.bpmn",{"_index":722,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["link('/diagrams/initial2.bpmn",{"_index":723,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["link('/diagrams/pizza",{"_index":724,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["link('/diagrams/scrum.bpmn",{"_index":721,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["linkprops",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["list",{"_index":774,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["listdiagrams",{"_index":710,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["literal",{"_index":2421,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["load",{"_index":1789,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ViewerComponent.html":{}}}],["loaded",{"_index":1763,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{}}}],["loader",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["loaderror",{"_index":1679,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["loaderror(error",{"_index":1806,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["loadfromdisk",{"_index":1676,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["loadfromdisk(inputvalue",{"_index":1693,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["loading",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["loadmodel",{"_index":1680,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["loadsamplebpmn",{"_index":2748,"title":{},"body":{"components/ViewerComponent.html":{}}}],["loadselected",{"_index":1677,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["local",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"pipes/Timestamp2Date.html":{}}}],["localhost",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost:8081",{"_index":2979,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(\"token",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(\"adamo.currentuser",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"adamo.currentuser",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('angular2",{"_index":2251,"title":{},"body":{"injectables/StoreService.html":{}}}],["localstorage.setitem('token",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["location",{"_index":254,"title":{},"body":{"injectables/AlertService.html":{}}}],["location.reload(true",{"_index":1024,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["log",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["logged",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrontPageComponent.html":{}}}],["loggedin",{"_index":647,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["logger",{"_index":150,"title":{},"body":{"components/AdministrationComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/TermModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["loggermodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["login(email",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(this.f.email.value",{"_index":1242,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["login_status",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginadmin",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginform",{"_index":1197,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["loginpayloaddto",{"_index":555,"title":{"classes/LoginPayloadDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["loginresponse",{"_index":1501,"title":{"classes/LoginResponse.html":{}},"body":{"classes/LoginResponse.html":{},"coverage.html":{}}}],["logo",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ModellerPageComponent.html":{}}}],["longer",{"_index":892,"title":{},"body":{"classes/CommandStack.html":{}}}],["lots",{"_index":3031,"title":{},"body":{"index.html":{}}}],["ltr",{"_index":1353,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["löschen",{"_index":1409,"title":{},"body":{"components/InputModal.html":{}}}],["mail",{"_index":2515,"title":{},"body":{"components/UserComponent.html":{}}}],["main",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["maintained",{"_index":1978,"title":{},"body":{"components/PermissionComponent.html":{}}}],["management",{"_index":1601,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["management'},{'name",{"_index":185,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["map",{"_index":333,"title":{},"body":{"components/AppFooterComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["margin",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{},"components/ViewerComponent.html":{}}}],["match",{"_index":3024,"title":{},"body":{"index.html":{}}}],["matching",{"_index":39,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["materialize",{"_index":1113,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["math.random",{"_index":983,"title":{},"body":{"classes/CommandStack.html":{}}}],["max",{"_index":1284,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["maximum",{"_index":2724,"title":{},"body":{"pipes/Version.html":{}}}],["md",{"_index":2540,"title":{},"body":{"components/UserComponent.html":{}}}],["menu",{"_index":1907,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["mergemap",{"_index":1112,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["message",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["message.text",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{},"components/ModellerPageComponent.html":{}}}],["message.tostring",{"_index":909,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["meta",{"_index":1378,"title":{},"body":{"components/InputModal.html":{},"classes/Variable.html":{},"components/VariableModal.html":{}}}],["metadata",{"_index":141,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["methods",{"_index":63,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["mid",{"_index":1652,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/UsageModal.html":{}}}],["min",{"_index":1340,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["misc",{"_index":3011,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":2930,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["modal",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["modal'},{'name",{"_index":175,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["modaldismissreasons",{"_index":1402,"title":{},"body":{"components/InputModal.html":{},"components/SaveModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["modaldismissreasons.backdrop_click",{"_index":2386,"title":{},"body":{"components/TermModal.html":{}}}],["modaldismissreasons.esc",{"_index":2383,"title":{},"body":{"components/TermModal.html":{}}}],["modalmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["modalmodule.forroot",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["modalservice",{"_index":1049,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["modaltemplatereference",{"_index":2668,"title":{},"body":{"components/VariableModal.html":{}}}],["moddle",{"_index":2320,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{},"dependencies.html":{}}}],["moddle.ts",{"_index":2800,"title":{},"body":{"coverage.html":{}}}],["mode",{"_index":890,"title":{},"body":{"classes/CommandStack.html":{}}}],["model",{"_index":155,"title":{"classes/Model.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["model.collaborator",{"_index":1752,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["model.collaborator.length",{"_index":1900,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["model.id",{"_index":916,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["model.mid",{"_index":1984,"title":{},"body":{"components/PermissionComponent.html":{}}}],["model.modelname",{"_index":1653,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["model.modelversion",{"_index":1788,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["model.name",{"_index":1749,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["model.read",{"_index":1773,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["model.showinfo",{"_index":1901,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["model.template.html",{"_index":1602,"title":{},"body":{"components/ModelComponent.html":{}}}],["model.version",{"_index":918,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["model.write",{"_index":1775,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["model.xml",{"_index":1747,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{}}}],["model/entry",{"_index":2226,"title":{},"body":{"injectables/StoreService.html":{}}}],["model/model_",{"_index":1869,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["model/version",{"_index":2144,"title":{},"body":{"components/SaveModal.html":{}}}],["model_",{"_index":869,"title":{},"body":{"classes/CommandStack.html":{}}}],["modelcomponent",{"_index":184,"title":{"components/ModelComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelcreate",{"_index":1605,"title":{},"body":{"components/ModelComponent.html":{}}}],["modelcreate(this.diskmodelname",{"_index":1743,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["modeldelete",{"_index":1606,"title":{},"body":{"components/ModelComponent.html":{}}}],["modeled",{"_index":927,"title":{},"body":{"classes/CommandStack.html":{}}}],["modelelement",{"_index":1657,"title":{"classes/ModelElement.html":{}},"body":{"classes/ModelElement.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["modeler",{"_index":345,"title":{},"body":{"components/AppHeaderComponent.html":{},"modules/AppRoutingModule.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["modeler'},{'name",{"_index":187,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["modeler.component",{"_index":833,"title":{},"body":{"classes/CommandStack.html":{}}}],["modelercomponenetroot",{"_index":802,"title":{},"body":{"classes/CommandStack.html":{}}}],["modelercomponent",{"_index":186,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelercomponent(value",{"_index":1585,"title":{},"body":{"classes/Model.html":{}}}],["modelercomponent/evaluator/modelelement",{"_index":2641,"title":{},"body":{"injectables/UserService.html":{}}}],["modelercomponent/modals//variablescomponent/variables.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/evaluatormodal/evaluatormodal",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/inputcomponent/input.component",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/inputmodal/inputmodal",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/savemodal/savemodal",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/subprocessmodal/subprocessmodal",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/termmodal/termmodal",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/usagemodal/usagemodal",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modals/variablemodal/variablemodal",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["modelercomponent/modeler.component",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"classes/Model.html":{},"components/ModellerPageComponent.html":{}}}],["modelercomponent/modeling.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["modelerconfig.service",{"_index":106,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"injectables/SnackBarService.html":{},"injectables/UserService.html":{}}}],["modelid",{"_index":1868,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["modeling",{"_index":1437,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["modelle",{"_index":1715,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["modellerpage.component.css",{"_index":1795,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["modellerpage.component.html",{"_index":1796,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["modellerpage/administration.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modellerpage/modellerpage.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["modellerpagecomponent",{"_index":188,"title":{"components/ModellerPageComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelloader",{"_index":1663,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["modelloader'},{'name",{"_index":190,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["modelloader.template.html",{"_index":1664,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["modelloadercomponent",{"_index":189,"title":{"components/ModelLoaderComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelname",{"_index":1620,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/UsageModal.html":{}}}],["models",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["models/dto/loginpayloaddto",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/dto/userdto",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/ModellerPageComponent.html":{},"injectables/UserService.html":{}}}],["models/model",{"_index":1706,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["models/role",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/ModellerPageComponent.html":{}}}],["models/user",{"_index":2642,"title":{},"body":{"injectables/UserService.html":{}}}],["models/user.entity",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["modelupdate",{"_index":1607,"title":{},"body":{"components/ModelComponent.html":{}}}],["modelupsert",{"_index":914,"title":{},"body":{"classes/CommandStack.html":{},"components/ModellerPageComponent.html":{}}}],["modelversion",{"_index":1753,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["modelxml",{"_index":1736,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["module",{"_index":346,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FrontPageModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["module.id",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{}}}],["moduleid",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{}}}],["modules",{"_index":348,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FrontPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2313,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["move",{"_index":519,"title":{},"body":{"guards/AuthGuard.html":{}}}],["movement",{"_index":845,"title":{},"body":{"classes/CommandStack.html":{}}}],["moz",{"_index":1309,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["mqtt",{"_index":110,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{},"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["mqtt.connect('ws://localhost:9001",{"_index":123,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["mqtt_service_options",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["mqttmodule",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["mqttmodule.forroot(mqtt_service_options",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["mqttservice",{"_index":74,"title":{},"body":{"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["mqttstring",{"_index":803,"title":{},"body":{"classes/CommandStack.html":{}}}],["multi",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["myreader",{"_index":1761,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["myreader.onloadend",{"_index":1764,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["myreader.readastext(file",{"_index":1771,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["myreader.result",{"_index":1768,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["myset",{"_index":1185,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["myset.add(x[propertytobefiltered",{"_index":1192,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["myset.has(x[propertytobefiltered",{"_index":1191,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["müssen",{"_index":1435,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AbstractDto.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["name(value",{"_index":1589,"title":{},"body":{"classes/Model.html":{}}}],["nameprops",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["navigate",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["navigationstart",{"_index":244,"title":{},"body":{"injectables/AlertService.html":{}}}],["neuer",{"_index":1256,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["newest",{"_index":2154,"title":{},"body":{"components/SaveModal.html":{},"components/UsageModal.html":{}}}],["newmodel",{"_index":1603,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["newmodelname",{"_index":1668,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["newmodelxml",{"_index":1669,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["newprofile",{"_index":2015,"title":{},"body":{"components/ProfileComponent.html":{}}}],["newrole",{"_index":2050,"title":{},"body":{"components/RoleComponent.html":{}}}],["newsnackbarmessage",{"_index":2162,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["newsnackbarmessage(text",{"_index":2165,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["newuser",{"_index":2479,"title":{},"body":{"components/UserComponent.html":{}}}],["newvalue",{"_index":2710,"title":{},"body":{"components/VariableModal.html":{}}}],["next",{"_index":1013,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/SaveModal.html":{}}}],["next.handle(request",{"_index":1150,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":1019,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["ng2",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["ng2searchpipemodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodal",{"_index":1047,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["ngbmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["ngkd84no0ym68cwo",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["ngmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/FrontPageModule.html":{}}}],["ngoninit",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{},"components/AppFooterComponent.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/TermModal.html":{},"components/UserComponent.html":{},"components/ViewerComponent.html":{}}}],["ngx",{"_index":112,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/TermModal.html":{},"components/VariableModal.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":148,"title":{},"body":{"components/AdministrationComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["ngxloggerlevel",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.debug",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloggerlevel.error",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":3043,"title":{},"body":{"index.html":{}}}],["nicht",{"_index":1430,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["noch",{"_index":1417,"title":{},"body":{"components/InputModal.html":{}}}],["none",{"_index":708,"title":{},"body":{"injectables/BPMNStore.html":{},"components/FrontPageComponent.html":{},"classes/Link.html":{},"components/ModellerPageComponent.html":{}}}],["noreferences",{"_index":2430,"title":{},"body":{"components/UsageModal.html":{}}}],["normal",{"_index":1251,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["nothing",{"_index":2184,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["nowrap",{"_index":1350,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["npm",{"_index":2967,"title":{},"body":{"index.html":{}}}],["null",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AuthService.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/StoreService.html":{},"components/UserComponent.html":{}}}],["nullable",{"_index":2605,"title":{},"body":{"classes/UserEntity.html":{}}}],["number",{"_index":668,"title":{},"body":{"classes/AuthenticationResponse.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"pipes/Version.html":{}}}],["o",{"_index":1317,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["ob",{"_index":1448,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["object",{"_index":944,"title":{},"body":{"classes/CommandStack.html":{},"pipes/FilterUnique.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["objekt",{"_index":1453,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["objekte",{"_index":1426,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["observable",{"_index":240,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"guards/RoleGuard.html":{},"injectables/SnackBarService.html":{},"dependencies.html":{}}}],["observable.of",{"_index":720,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["observable.throw(error",{"_index":642,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["of(new",{"_index":1161,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["of(null).pipe(mergemap",{"_index":1125,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["ok",{"_index":648,"title":{},"body":{"classes/AuthenticationResponse.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/LoginResponse.html":{}}}],["ok(body",{"_index":1160,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["ok(users",{"_index":1144,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["older",{"_index":2722,"title":{},"body":{"pipes/Version.html":{}}}],["one",{"_index":1881,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"index.html":{}}}],["onexportmodel",{"_index":1799,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onexportmodel(modelercomponent",{"_index":1810,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["oninit",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/TermModal.html":{},"components/ViewerComponent.html":{}}}],["onloadedcompletely",{"_index":1800,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onloadmodel",{"_index":1801,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onloadmodel(model",{"_index":1813,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onloadsubprocess",{"_index":1802,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onloadsubprocess(model",{"_index":1815,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["onsubmit",{"_index":1200,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["opacity",{"_index":1918,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["open",{"_index":778,"title":{},"body":{"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/Link.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["open(content",{"_index":1058,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["open(this.modaltemplatereference",{"_index":2705,"title":{},"body":{"components/VariableModal.html":{}}}],["open(this.termmodaltermplate",{"_index":2375,"title":{},"body":{"components/TermModal.html":{}}}],["opended",{"_index":2309,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{}}}],["opened",{"_index":1043,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["opensubprocessmodel",{"_index":2261,"title":{},"body":{"components/SubProcessModal.html":{}}}],["operation",{"_index":930,"title":{},"body":{"classes/CommandStack.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AbstractDto.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":626,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["options).pipe(catcherror((error",{"_index":632,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["options.params.set('withcredentials",{"_index":2643,"title":{},"body":{"injectables/UserService.html":{}}}],["orange",{"_index":1265,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["origin",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["out",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["outline",{"_index":1263,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["output",{"_index":1037,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["outputs",{"_index":1678,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/TermModal.html":{}}}],["overflow",{"_index":1345,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["overlay",{"_index":2326,"title":{},"body":{"components/SubProcessModal.html":{}}}],["overview",{"_index":3050,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1253,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["package",{"_index":2861,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1217,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["packagr",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["padding",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["page",{"_index":132,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["page'},{'name",{"_index":178,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["page.component.html",{"_index":1196,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page.component.less",{"_index":1195,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page.module.ts",{"_index":1371,"title":{},"body":{"modules/FrontPageModule.html":{}}}],["page/front",{"_index":1370,"title":{},"body":{"modules/FrontPageModule.html":{}}}],["page/frontpagecomponent",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page/frontpagecomponent.ts",{"_index":1194,"title":{},"body":{"components/FrontPageComponent.html":{},"coverage.html":{}}}],["page/frontpagecomponent.ts:20",{"_index":1209,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:22",{"_index":1211,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:23",{"_index":1207,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:24",{"_index":1213,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:25",{"_index":1212,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:26",{"_index":1204,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:41",{"_index":1205,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:52",{"_index":1215,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page/frontpagecomponent.ts:56",{"_index":1206,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["page2",{"_index":146,"title":{},"body":{"components/AdministrationComponent.html":{}}}],["palette",{"_index":2951,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["paletteentries",{"_index":690,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["paletteprovider",{"_index":2823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["paletteprovider(palette",{"_index":2943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["panel",{"_index":1904,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{},"index.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"classes/AbstractDto.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["params.status",{"_index":340,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["parse",{"_index":900,"title":{},"body":{"classes/CommandStack.html":{}}}],["parseint(response.permission",{"_index":1864,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["parseint(topic.split(\"/\")[2",{"_index":1852,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["partmodels",{"_index":2145,"title":{},"body":{"components/SaveModal.html":{}}}],["partmodels.foreach((pmid",{"_index":2147,"title":{},"body":{"components/SaveModal.html":{}}}],["pass",{"_index":1145,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["passback",{"_index":2338,"title":{},"body":{"components/TermModal.html":{}}}],["passentry",{"_index":2341,"title":{},"body":{"components/TermModal.html":{}}}],["password",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{}}}],["password.transformer",{"_index":2604,"title":{},"body":{"classes/UserEntity.html":{}}}],["passwordtransformer",{"_index":2603,"title":{},"body":{"classes/UserEntity.html":{}}}],["path",{"_index":97,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CommandStack.html":{}}}],["pathmatch",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":2993,"title":{},"body":{"index.html":{}}}],["per",{"_index":1410,"title":{},"body":{"components/InputModal.html":{}}}],["performed",{"_index":928,"title":{},"body":{"classes/CommandStack.html":{}}}],["permission",{"_index":157,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"classes/AuthenticationResponse.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["permission.component.html",{"_index":1940,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissioncomponent",{"_index":191,"title":{"components/PermissionComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["permissioncreate",{"_index":1948,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissioncreate(uid",{"_index":1960,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissiondelete",{"_index":1949,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissiondelete(pid",{"_index":1962,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissions",{"_index":2007,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissionupdate",{"_index":1950,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissionupdate(role",{"_index":1965,"title":{},"body":{"components/PermissionComponent.html":{}}}],["permissons",{"_index":2305,"title":{},"body":{"components/SubProcessModal.html":{}}}],["persist",{"_index":2199,"title":{},"body":{"injectables/StoreService.html":{}}}],["persistedtodos",{"_index":2227,"title":{},"body":{"injectables/StoreService.html":{}}}],["persistedtodos.map((todo",{"_index":2230,"title":{},"body":{"injectables/StoreService.html":{}}}],["phone",{"_index":2561,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["pid",{"_index":1964,"title":{},"body":{"components/PermissionComponent.html":{}}}],["pipe",{"_index":550,"title":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}},"body":{"injectables/AuthService.html":{},"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{},"coverage.html":{}}}],["pipe(delay(500",{"_index":1157,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipe(dematerialize",{"_index":1158,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipe(first",{"_index":1244,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["pipe(map((params",{"_index":338,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["pipe(materialize",{"_index":1156,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["pipes",{"_index":1175,"title":{},"body":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{},"overview.html":{}}}],["pipes/filterunique.pipe",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/timestamp.pipe",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/version.pipe",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":1180,"title":{},"body":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}}}],["place",{"_index":1163,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["please",{"_index":1100,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"index.html":{}}}],["pmid",{"_index":2150,"title":{},"body":{"components/SaveModal.html":{}}}],["pointer",{"_index":1916,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["port",{"_index":95,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{}}}],["position",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["possible",{"_index":844,"title":{},"body":{"classes/CommandStack.html":{},"components/SubProcessModal.html":{},"index.html":{}}}],["post",{"_index":1129,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["postgress",{"_index":2405,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["praise",{"_index":3000,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":1234,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["pressing",{"_index":2384,"title":{},"body":{"components/TermModal.html":{}}}],["previous",{"_index":1879,"title":{},"body":{"components/ModellerPageComponent.html":{},"pipes/Version.html":{}}}],["pricing",{"_index":1909,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["private",{"_index":58,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{}}}],["probably",{"_index":1858,"title":{},"body":{"components/ModellerPageComponent.html":{},"index.html":{}}}],["process",{"_index":765,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"index.html":{}}}],["process.env.env",{"_index":2782,"title":{},"body":{"interfaces/Window.html":{}}}],["processes",{"_index":790,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["processprops",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["production",{"_index":2783,"title":{},"body":{"interfaces/Window.html":{}}}],["profile",{"_index":193,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"classes/AuthenticationResponse.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["profile.profile",{"_index":2046,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{}}}],["profile.template.html",{"_index":2014,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.upid",{"_index":2045,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/all",{"_index":2655,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/create",{"_index":2658,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/delete",{"_index":2656,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/update",{"_index":2657,"title":{},"body":{"injectables/UserService.html":{}}}],["profilecomponent",{"_index":192,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecreate",{"_index":2018,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["profilecreate(profile",{"_index":2621,"title":{},"body":{"injectables/UserService.html":{}}}],["profiledelete",{"_index":2019,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["profiledelete(profileid",{"_index":2623,"title":{},"body":{"injectables/UserService.html":{}}}],["profileid",{"_index":2043,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["profilename",{"_index":2044,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profiles",{"_index":2016,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["profileupdate",{"_index":2020,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["profileupdate(profileid",{"_index":2625,"title":{},"body":{"injectables/UserService.html":{}}}],["programmer",{"_index":2990,"title":{},"body":{"index.html":{}}}],["project",{"_index":1198,"title":{},"body":{"components/FrontPageComponent.html":{},"index.html":{}}}],["promise",{"_index":672,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{},"dependencies.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"dependencies.html":{},"index.html":{}}}],["propertiesactivator",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["propertytobefiltered",{"_index":1182,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["props",{"_index":2708,"title":{},"body":{"components/VariableModal.html":{}}}],["protected",{"_index":2259,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{}}}],["prototype",{"_index":953,"title":{},"body":{"classes/CommandStack.html":{}}}],["provide",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["providedin",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["provider",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.ts",{"_index":2825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["prüfen",{"_index":1447,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["public",{"_index":64,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{}}}],["publish",{"_index":883,"title":{},"body":{"classes/CommandStack.html":{}}}],["publish('administrations/profile",{"_index":2041,"title":{},"body":{"components/ProfileComponent.html":{}}}],["publishxml",{"_index":804,"title":{},"body":{"classes/CommandStack.html":{}}}],["pull",{"_index":3005,"title":{},"body":{"index.html":{}}}],["pure",{"_index":1181,"title":{},"body":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}}}],["purposes",{"_index":842,"title":{},"body":{"classes/CommandStack.html":{}}}],["put",{"_index":2971,"title":{},"body":{"index.html":{}}}],["queryparams",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":1288,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["rc.12",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":2506,"title":{},"body":{"components/UserComponent.html":{}}}],["re.test(string(email).tolowercase",{"_index":2513,"title":{},"body":{"components/UserComponent.html":{}}}],["reactiveformsmodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":716,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"classes/Model.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/UserService.html":{}}}],["read(value",{"_index":1597,"title":{},"body":{"classes/Model.html":{}}}],["readablestream",{"_index":657,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["readonly",{"_index":703,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["reads",{"_index":1758,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["reason",{"_index":1086,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["reauth",{"_index":1341,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["received",{"_index":877,"title":{},"body":{"classes/CommandStack.html":{},"components/FrontPageComponent.html":{}}}],["receivemessage",{"_index":805,"title":{},"body":{"classes/CommandStack.html":{}}}],["receiving",{"_index":2006,"title":{},"body":{"components/PermissionComponent.html":{}}}],["red",{"_index":1877,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{}}}],["redirect",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{}}}],["redirected",{"_index":649,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["redirectto",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redux",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["reference",{"_index":2298,"title":{},"body":{"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["references",{"_index":791,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["referencing",{"_index":2466,"title":{},"body":{"components/UsageModal.html":{}}}],["referencingmodels",{"_index":2431,"title":{},"body":{"components/UsageModal.html":{}}}],["refernce",{"_index":2463,"title":{},"body":{"components/UsageModal.html":{}}}],["reflect",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":2960,"title":{},"body":{"index.html":{}}}],["refreshes",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshing",{"_index":846,"title":{},"body":{"classes/CommandStack.html":{}}}],["register",{"_index":876,"title":{},"body":{"classes/CommandStack.html":{}}}],["rel",{"_index":705,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["related",{"_index":2969,"title":{},"body":{"index.html":{}}}],["relation",{"_index":2012,"title":{},"body":{"components/PermissionComponent.html":{}}}],["relative",{"_index":1360,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["remainingentries",{"_index":2192,"title":{},"body":{"injectables/StoreService.html":{}}}],["remote",{"_index":902,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["remove",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AuthService.html":{},"components/ModellerPageComponent.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{}}}],["remove(index",{"_index":1817,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["remove(uid",{"_index":2215,"title":{},"body":{"injectables/StoreService.html":{}}}],["removecompleted",{"_index":2200,"title":{},"body":{"injectables/StoreService.html":{}}}],["rendering",{"_index":2759,"title":{},"body":{"components/ViewerComponent.html":{}}}],["repeat",{"_index":1271,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["replace(this.ipim_val.tolowercase",{"_index":1469,"title":{},"body":{"components/InputModal.html":{}}}],["repos",{"_index":2968,"title":{},"body":{"index.html":{}}}],["request",{"_index":619,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["request(url",{"_index":625,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["request.body.email",{"_index":1133,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.body.password",{"_index":1135,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.clone",{"_index":1488,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["request.headers.get('authorization",{"_index":1120,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.method",{"_index":1128,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/authenticate",{"_index":1130,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users",{"_index":1142,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users/authenticate",{"_index":1127,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["requested",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestoptions",{"_index":623,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["requestoptionsargs",{"_index":627,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["requests",{"_index":1147,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["require(\"bpmn",{"_index":2755,"title":{},"body":{"components/ViewerComponent.html":{}}}],["require('big",{"_index":2118,"title":{},"body":{"components/SaveModal.html":{},"pipes/Version.html":{}}}],["require('buffer').buffer",{"_index":2794,"title":{},"body":{"interfaces/Window.html":{}}}],["require('diagram",{"_index":835,"title":{},"body":{"classes/CommandStack.html":{}}}],["require('mqtt",{"_index":111,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["require('zone.js/dist/long",{"_index":2786,"title":{},"body":{"interfaces/Window.html":{}}}],["require('zone.js/dist/zone",{"_index":2778,"title":{},"body":{"interfaces/Window.html":{}}}],["required",{"_index":946,"title":{},"body":{"classes/CommandStack.html":{},"components/FrontPageComponent.html":{}}}],["reset",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/BPMNStore.html":{},"classes/Link.html":{},"overview.html":{}}}],["response",{"_index":130,"title":{},"body":{"injectables/AdamoMqttService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"interceptors/ErrorInterceptor.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/ProfileComponent.html":{}}}],["response.data",{"_index":1635,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["response.data.modelxml",{"_index":2324,"title":{},"body":{"components/SubProcessModal.html":{}}}],["response.email",{"_index":1862,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["response.loggedin",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{}}}],["response.modelxml",{"_index":1781,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["response.status",{"_index":2136,"title":{},"body":{"components/SaveModal.html":{}}}],["response.success",{"_index":1629,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SubProcessModal.html":{},"components/UserComponent.html":{}}}],["response.text",{"_index":2765,"title":{},"body":{"components/ViewerComponent.html":{}}}],["response.token",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.user",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsetype",{"_index":674,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["response}`,response",{"_index":1860,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["restricted",{"_index":496,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resubscribe",{"_index":895,"title":{},"body":{"classes/CommandStack.html":{}}}],["result",{"_index":38,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.then",{"_index":2378,"title":{},"body":{"components/TermModal.html":{},"components/VariableModal.html":{}}}],["results",{"_index":40,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["ret",{"_index":2231,"title":{},"body":{"injectables/StoreService.html":{}}}],["ret.selected",{"_index":2233,"title":{},"body":{"injectables/StoreService.html":{}}}],["ret.uid",{"_index":2235,"title":{},"body":{"injectables/StoreService.html":{}}}],["retrieving",{"_index":1733,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["return",{"_index":52,"title":{},"body":{"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/Model.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"pipes/Version.html":{}}}],["returned",{"_index":1021,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":78,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"interceptors/JwtInterceptor.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{}}}],["returnurl",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{}}}],["rgb(104",{"_index":1362,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["rgb(12",{"_index":1276,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["rgba(0",{"_index":1334,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["rid",{"_index":2030,"title":{},"body":{"components/ProfileComponent.html":{},"components/RoleComponent.html":{}}}],["right",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ModellerPageComponent.html":{}}}],["role",{"_index":156,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["role.rid",{"_index":2074,"title":{},"body":{"components/RoleComponent.html":{}}}],["role.role",{"_index":2011,"title":{},"body":{"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["role.template.html",{"_index":2049,"title":{},"body":{"components/RoleComponent.html":{}}}],["rolecomponent",{"_index":194,"title":{"components/RoleComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rolecreate",{"_index":2051,"title":{},"body":{"components/RoleComponent.html":{}}}],["roledelete",{"_index":2052,"title":{},"body":{"components/RoleComponent.html":{}}}],["roleguard",{"_index":469,"title":{"guards/RoleGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roleid",{"_index":2072,"title":{},"body":{"components/RoleComponent.html":{}}}],["rolename",{"_index":2073,"title":{},"body":{"components/RoleComponent.html":{}}}],["roles",{"_index":476,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["roleservice",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["roletype",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/ModellerPageComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["roletype.admin",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/ModellerPageComponent.html":{}}}],["roletype.user",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{}}}],["roleupdate",{"_index":2053,"title":{},"body":{"components/RoleComponent.html":{}}}],["root",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{}}}],["rotate",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["rotate(360deg",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["round",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":1330,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["route",{"_index":246,"title":{},"body":{"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"guards/RoleGuard.html":{}}}],["route.data.role",{"_index":2082,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.data.roles",{"_index":501,"title":{},"body":{"guards/AuthGuard.html":{}}}],["route.data.roles.indexof(currentuser.role",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":72,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["router.events.subscribe(event",{"_index":248,"title":{},"body":{"injectables/AlertService.html":{}}}],["routermodule",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["routes",{"_index":468,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":729,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["run",{"_index":2980,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"injectables/BPMNStore.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"guards/RoleGuard.html":{},"injectables/SnackBarService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":334,"title":{},"body":{"components/AppFooterComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{}}}],["s",{"_index":1054,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["s4",{"_index":982,"title":{},"body":{"classes/CommandStack.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":2507,"title":{},"body":{"components/UserComponent.html":{}}}],["safe",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":2770,"title":{},"body":{"components/ViewerComponent.html":{},"index.html":{}}}],["sans",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["sass",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":196,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"guards/AuthGuard.html":{},"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["savemodal",{"_index":195,"title":{"components/SaveModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["savemodal.html",{"_index":2086,"title":{},"body":{"components/SaveModal.html":{}}}],["saver",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["savesubprocesses",{"_index":2092,"title":{},"body":{"components/SaveModal.html":{}}}],["savesuperversion",{"_index":2093,"title":{},"body":{"components/SaveModal.html":{}}}],["savewithversion",{"_index":2094,"title":{},"body":{"components/SaveModal.html":{}}}],["schleife",{"_index":1463,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["search",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["seconds",{"_index":2179,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["see",{"_index":789,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["seems",{"_index":3016,"title":{},"body":{"index.html":{}}}],["select",{"_index":1310,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["selected",{"_index":988,"title":{},"body":{"classes/Entry.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableModal.html":{}}}],["selected.modelname",{"_index":1654,"title":{},"body":{"components/ModelComponent.html":{}}}],["selected.profilename",{"_index":2047,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selected.rolename",{"_index":2075,"title":{},"body":{"components/RoleComponent.html":{}}}],["selected.username",{"_index":2532,"title":{},"body":{"components/UserComponent.html":{}}}],["selected.version",{"_index":1655,"title":{},"body":{"components/ModelComponent.html":{}}}],["selectedmodel",{"_index":1941,"title":{},"body":{"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["selectedmodel.modelname",{"_index":2009,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectedmodel.version",{"_index":2010,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectedmodelname",{"_index":2257,"title":{},"body":{"components/SubProcessModal.html":{}}}],["selectedpermission",{"_index":1942,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectedrole",{"_index":1943,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selecteduser",{"_index":1944,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selecteduser.email",{"_index":2008,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectionchanged",{"_index":2262,"title":{},"body":{"components/SubProcessModal.html":{}}}],["selectionchanged(model",{"_index":2274,"title":{},"body":{"components/SubProcessModal.html":{}}}],["selectmodel",{"_index":1951,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectmodel(model",{"_index":1967,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selector",{"_index":142,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["selects",{"_index":1977,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectuser",{"_index":1952,"title":{},"body":{"components/PermissionComponent.html":{}}}],["selectuser(user",{"_index":1969,"title":{},"body":{"components/PermissionComponent.html":{}}}],["self",{"_index":903,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{}}}],["self.getallmodels",{"_index":1721,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{}}}],["self.getallusers",{"_index":1999,"title":{},"body":{"components/PermissionComponent.html":{}}}],["separate",{"_index":2972,"title":{},"body":{"index.html":{}}}],["serif",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ViewerComponent.html":{}}}],["server",{"_index":714,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/Link.html":{},"index.html":{}}}],["serverloggingurl",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["serverloglevel",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":1164,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["services",{"_index":1018,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/FrontPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{}}}],["services/alert.service",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{},"modules/AppModule.html":{},"components/FrontPageComponent.html":{}}}],["services/api.service",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["services/auth.service",{"_index":492,"title":{},"body":{"guards/AuthGuard.html":{}}}],["services/authenticatedhttp.service",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["services/mqtt.service",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["services/snackbar.service",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["services/snackbarmessage",{"_index":1833,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["session",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["set",{"_index":756,"title":{},"body":{"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"pipes/FilterUnique.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"classes/Model.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{},"index.html":{}}}],["setallto",{"_index":2201,"title":{},"body":{"injectables/StoreService.html":{}}}],["setallto(completed",{"_index":2218,"title":{},"body":{"injectables/StoreService.html":{}}}],["setcollaborator(value",{"_index":1568,"title":{},"body":{"classes/Model.html":{}}}],["setheaders",{"_index":1489,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setid(value",{"_index":1556,"title":{},"body":{"classes/Model.html":{}}}],["setmodel",{"_index":2095,"title":{},"body":{"components/SaveModal.html":{}}}],["setmodel(model",{"_index":2106,"title":{},"body":{"components/SaveModal.html":{}}}],["setmodelercomponent(value",{"_index":1553,"title":{},"body":{"classes/Model.html":{}}}],["setname(value",{"_index":1560,"title":{},"body":{"classes/Model.html":{}}}],["setprops",{"_index":1044,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["setprops(modeler",{"_index":1062,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["setread(value",{"_index":1576,"title":{},"body":{"classes/Model.html":{}}}],["setshowinfo(value",{"_index":1572,"title":{},"body":{"classes/Model.html":{}}}],["settimeout",{"_index":2181,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["settitle",{"_index":990,"title":{},"body":{"classes/Entry.html":{}}}],["settitle(title",{"_index":996,"title":{},"body":{"classes/Entry.html":{}}}],["setup",{"_index":2976,"title":{},"body":{"index.html":{}}}],["setuser",{"_index":2611,"title":{},"body":{"injectables/UserService.html":{}}}],["setuser(user",{"_index":2627,"title":{},"body":{"injectables/UserService.html":{}}}],["setversion(value",{"_index":1549,"title":{},"body":{"classes/Model.html":{}}}],["setwrite(value",{"_index":1580,"title":{},"body":{"classes/Model.html":{}}}],["setxml(value",{"_index":1564,"title":{},"body":{"classes/Model.html":{}}}],["shadow",{"_index":1333,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["shadows",{"_index":1329,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["shape.create",{"_index":974,"title":{},"body":{"classes/CommandStack.html":{}}}],["share",{"_index":788,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["shim",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1878,"title":{},"body":{"components/ModellerPageComponent.html":{},"injectables/SnackBarService.html":{},"components/TermModal.html":{},"injectables/UserService.html":{}}}],["showinfo",{"_index":1536,"title":{},"body":{"classes/Model.html":{}}}],["showinfo(value",{"_index":1595,"title":{},"body":{"classes/Model.html":{}}}],["signin",{"_index":1267,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["signin:active",{"_index":1321,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["signin:focus",{"_index":1322,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["signin:hover",{"_index":1320,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["simple",{"_index":1707,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["simulate",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["single",{"_index":253,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["size",{"_index":1304,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/TermModal.html":{}}}],["sizing",{"_index":1351,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["small",{"_index":948,"title":{},"body":{"classes/CommandStack.html":{}}}],["smart",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["snackbar",{"_index":2173,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["snackbarhtml",{"_index":2174,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["snackbarhtml.classname",{"_index":2180,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["snackbaritem",{"_index":1932,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["snackbarmessage",{"_index":1824,"title":{"classes/SnackBarMessage.html":{}},"body":{"components/ModellerPageComponent.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"coverage.html":{}}}],["snackbarmessage(text",{"_index":2177,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["snackbarmessagearray",{"_index":2161,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["snackbarmessages",{"_index":1797,"title":{},"body":{"components/ModellerPageComponent.html":{},"injectables/SnackBarService.html":{}}}],["snackbarpage",{"_index":1923,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["snackbarpage.show",{"_index":1933,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["snackbarservice",{"_index":363,"title":{"injectables/SnackBarService.html":{}},"body":{"modules/AppModule.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/SnackBarService.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snackbartextpage",{"_index":1798,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["solange",{"_index":1415,"title":{},"body":{"components/InputModal.html":{}}}],["solid",{"_index":699,"title":{},"body":{"injectables/BPMNStore.html":{},"components/FrontPageComponent.html":{},"classes/Link.html":{},"components/ViewerComponent.html":{}}}],["somehow",{"_index":3034,"title":{},"body":{"index.html":{}}}],["something",{"_index":884,"title":{},"body":{"classes/CommandStack.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{}}}],["space",{"_index":1349,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["spacetool",{"_index":2945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["specific",{"_index":1266,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["specify",{"_index":1101,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/VariableModal.html":{}}}],["spinner",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../palette.ts",{"_index":2937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../props",{"_index":2935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../props.ts",{"_index":2936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role",{"_index":2932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["src/app/bpmn",{"_index":687,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/builder/model/entry.ts",{"_index":987,"title":{},"body":{"classes/Entry.html":{},"coverage.html":{}}}],["src/app/builder/model/entry.ts:10",{"_index":992,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/builder/model/entry.ts:4",{"_index":993,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/builder/model/entry.ts:5",{"_index":994,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/builder/model/entry.ts:6",{"_index":995,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/builder/model/entry.ts:8",{"_index":997,"title":{},"body":{"classes/Entry.html":{}}}],["src/app/builder/store.service.ts",{"_index":2189,"title":{},"body":{"injectables/StoreService.html":{},"coverage.html":{}}}],["src/app/builder/store.service.ts:10",{"_index":2203,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:22",{"_index":2211,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:26",{"_index":2209,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:30",{"_index":2219,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:35",{"_index":2217,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:40",{"_index":2213,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:47",{"_index":2212,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:54",{"_index":2222,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:63",{"_index":2216,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:7",{"_index":2223,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:72",{"_index":2208,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:77",{"_index":2214,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:8",{"_index":2225,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:82",{"_index":2206,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:86",{"_index":2204,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/builder/store.service.ts:9",{"_index":2224,"title":{},"body":{"injectables/StoreService.html":{}}}],["src/app/components/alert/alert.component.ts",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/app/components/alert/alert.component.ts:12",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/components/alert/alert.component.ts:17",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/components/alert/alert.component.ts:23",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/components/appfootercomponent/footer.component.ts",{"_index":324,"title":{},"body":{"components/AppFooterComponent.html":{},"coverage.html":{}}}],["src/app/components/appfootercomponent/footer.component.ts:11",{"_index":332,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["src/app/components/appfootercomponent/footer.component.ts:12",{"_index":330,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["src/app/components/appfootercomponent/footer.component.ts:19",{"_index":331,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["src/app/components/appheadercomponent/header.component.ts",{"_index":342,"title":{},"body":{"components/AppHeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/modelcomponent/model.component.ts",{"_index":1600,"title":{},"body":{"components/ModelComponent.html":{},"coverage.html":{}}}],["src/app/components/modelcomponent/model.component.ts:113",{"_index":1611,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:12",{"_index":1615,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:13",{"_index":1614,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:14",{"_index":1608,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:19",{"_index":1613,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:43",{"_index":1609,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:78",{"_index":1612,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelcomponent/model.component.ts:98",{"_index":1610,"title":{},"body":{"components/ModelComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts",{"_index":1662,"title":{},"body":{"components/ModelLoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:109",{"_index":1688,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:125",{"_index":1689,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:142",{"_index":1686,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:147",{"_index":1694,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:16",{"_index":1684,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:163",{"_index":1696,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:17",{"_index":1683,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:18",{"_index":1705,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:19",{"_index":1702,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:195",{"_index":1690,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:20",{"_index":1701,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:21",{"_index":1698,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:215",{"_index":1691,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:22",{"_index":1699,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:23",{"_index":1700,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:24",{"_index":1703,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:26",{"_index":1681,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:38",{"_index":1692,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:53",{"_index":1697,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/modelloadercomponent/modelloader.component.ts:96",{"_index":1687,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts",{"_index":1939,"title":{},"body":{"components/PermissionComponent.html":{},"coverage.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:100",{"_index":1959,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:117",{"_index":1955,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:13",{"_index":1975,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:134",{"_index":1956,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:14",{"_index":1973,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:15",{"_index":1972,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:152",{"_index":1954,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:16",{"_index":1974,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:17",{"_index":1976,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:170",{"_index":1958,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:18",{"_index":1971,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:19",{"_index":1953,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:25",{"_index":1970,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:33",{"_index":1968,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:41",{"_index":1961,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:61",{"_index":1963,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/permissioncomponent/permission.component.ts:81",{"_index":1966,"title":{},"body":{"components/PermissionComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts",{"_index":2013,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:12",{"_index":2028,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:120",{"_index":2025,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:13",{"_index":2027,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:14",{"_index":2021,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:22",{"_index":2023,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:45",{"_index":2022,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:65",{"_index":2026,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/profilecomponent/profile.component.ts:93",{"_index":2024,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts",{"_index":2048,"title":{},"body":{"components/RoleComponent.html":{},"coverage.html":{}}}],["src/app/components/rolecomponent/role.component.ts:13",{"_index":2061,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:14",{"_index":2060,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:15",{"_index":2054,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:20",{"_index":2056,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:43",{"_index":2055,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:62",{"_index":2059,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:79",{"_index":2057,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/rolecomponent/role.component.ts:96",{"_index":2058,"title":{},"body":{"components/RoleComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts",{"_index":2476,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/components/usercomponent/user.component.ts:121",{"_index":2491,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:138",{"_index":2489,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:14",{"_index":2497,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:15",{"_index":2495,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:16",{"_index":2498,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:165",{"_index":2490,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:17",{"_index":2496,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:18",{"_index":2485,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:23",{"_index":2488,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:53",{"_index":2494,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:59",{"_index":2486,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:76",{"_index":2487,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/components/usercomponent/user.component.ts:94",{"_index":2492,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/front",{"_index":1193,"title":{},"body":{"components/FrontPageComponent.html":{},"modules/FrontPageModule.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:19",{"_index":490,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/role.guard.ts",{"_index":2076,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/guards/role.guard.ts:13",{"_index":2078,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/guards/role.guard.ts:20",{"_index":2079,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/helpers/error.interceptor.ts",{"_index":1006,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/error.interceptor.ts:12",{"_index":1015,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/error.interceptor.ts:9",{"_index":1009,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/helpers/fake",{"_index":1107,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/jwt.interceptor.ts",{"_index":1480,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/helpers/jwt.interceptor.ts:11",{"_index":1483,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/helpers/jwt.interceptor.ts:8",{"_index":1482,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/modelercomponent/camunda",{"_index":2799,"title":{},"body":{"coverage.html":{}}}],["src/app/modelercomponent/command/commandstack.ts",{"_index":794,"title":{},"body":{"classes/CommandStack.html":{},"coverage.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:103",{"_index":827,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:11",{"_index":824,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:12",{"_index":815,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:126",{"_index":816,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:13",{"_index":822,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:131",{"_index":813,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:14",{"_index":820,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:15",{"_index":819,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:153",{"_index":832,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:16",{"_index":826,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:17",{"_index":817,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:18",{"_index":814,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:19",{"_index":821,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:20",{"_index":823,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:21",{"_index":818,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:22",{"_index":831,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:23",{"_index":825,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:24",{"_index":812,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:58",{"_index":829,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:64",{"_index":830,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/command/commandstack.ts:70",{"_index":828,"title":{},"body":{"classes/CommandStack.html":{}}}],["src/app/modelercomponent/custom.ts",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["src/app/modelercomponent/evaluator/evaluator.component.ts",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["src/app/modelercomponent/evaluator/modelelement.ts",{"_index":1658,"title":{},"body":{"classes/ModelElement.html":{},"coverage.html":{}}}],["src/app/modelercomponent/evaluator/modelelement.ts:2",{"_index":1660,"title":{},"body":{"classes/ModelElement.html":{}}}],["src/app/modelercomponent/evaluator/modelelement.ts:3",{"_index":1661,"title":{},"body":{"classes/ModelElement.html":{}}}],["src/app/modelercomponent/interfaces.ts",{"_index":1170,"title":{},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"coverage.html":{}}}],["src/app/modelercomponent/interfaces.ts:7",{"_index":1172,"title":{},"body":{"interfaces/FileReaderEvent.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts",{"_index":1028,"title":{},"body":{"components/EvalModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:16",{"_index":1048,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:19",{"_index":1059,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:26",{"_index":1071,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:27",{"_index":1070,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:29",{"_index":1073,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:30",{"_index":1075,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:32",{"_index":1077,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:36",{"_index":1076,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:37",{"_index":1074,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:38",{"_index":1069,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:39",{"_index":1068,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:41",{"_index":1065,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:42",{"_index":1072,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:43",{"_index":1066,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:44",{"_index":1067,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:46",{"_index":1063,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:52",{"_index":1051,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:57",{"_index":1050,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:61",{"_index":1061,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:65",{"_index":1056,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:69",{"_index":1055,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:73",{"_index":1053,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:77",{"_index":1064,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/evaluatormodal/evaluatormodal.ts:83",{"_index":1057,"title":{},"body":{"components/EvalModal.html":{}}}],["src/app/modelercomponent/modals/inputcomponent/input.component.ts",{"_index":1473,"title":{},"body":{"components/InputVarComponent.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/inputcomponent/input.component.ts:8",{"_index":1478,"title":{},"body":{"components/InputVarComponent.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts",{"_index":1372,"title":{},"body":{"components/InputModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:14",{"_index":1395,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:147",{"_index":1384,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:15",{"_index":1394,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:17",{"_index":1397,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:18",{"_index":1399,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:186",{"_index":1379,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:20",{"_index":1401,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:22",{"_index":1375,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:25",{"_index":1385,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:34",{"_index":1400,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:35",{"_index":1398,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:36",{"_index":1393,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:37",{"_index":1392,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:39",{"_index":1389,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:40",{"_index":1396,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:41",{"_index":1390,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:42",{"_index":1391,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:44",{"_index":1387,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:50",{"_index":1380,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:55",{"_index":1376,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:59",{"_index":1386,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:63",{"_index":1383,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:67",{"_index":1382,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:71",{"_index":1381,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/inputmodal/inputmodal.ts:80",{"_index":1388,"title":{},"body":{"components/InputModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts",{"_index":2085,"title":{},"body":{"components/SaveModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:100",{"_index":2102,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:104",{"_index":2100,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:108",{"_index":2099,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:112",{"_index":2098,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:116",{"_index":2097,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:18",{"_index":2096,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:21",{"_index":2101,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:29",{"_index":2109,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:30",{"_index":2111,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:31",{"_index":2116,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:32",{"_index":2110,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:33",{"_index":2112,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:34",{"_index":2113,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:35",{"_index":2114,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:36",{"_index":2115,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:37",{"_index":2108,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:42",{"_index":2107,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:52",{"_index":2104,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:68",{"_index":2105,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/savemodal/savemodal.ts:90",{"_index":2103,"title":{},"body":{"components/SaveModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts",{"_index":2254,"title":{},"body":{"components/SubProcessModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:101",{"_index":2269,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:109",{"_index":2277,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:14",{"_index":2264,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:164",{"_index":2275,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:17",{"_index":2271,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:171",{"_index":2273,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:24",{"_index":2286,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:25",{"_index":2287,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:26",{"_index":2292,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:28",{"_index":2293,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:29",{"_index":2282,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:30",{"_index":2291,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:34",{"_index":2290,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:35",{"_index":2288,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:36",{"_index":2283,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:37",{"_index":2281,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:39",{"_index":2278,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:40",{"_index":2284,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:41",{"_index":2279,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:42",{"_index":2280,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:43",{"_index":2289,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:44",{"_index":2285,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:46",{"_index":2276,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:56",{"_index":2270,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:81",{"_index":2272,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:85",{"_index":2268,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:89",{"_index":2267,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:93",{"_index":2266,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/subprocessmodal/subprocessmodal.ts:97",{"_index":2265,"title":{},"body":{"components/SubProcessModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts",{"_index":2333,"title":{},"body":{"components/TermModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:101",{"_index":2351,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:105",{"_index":2350,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:109",{"_index":2347,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:113",{"_index":2346,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:118",{"_index":2352,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:127",{"_index":2353,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:131",{"_index":2357,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:169",{"_index":2349,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:23",{"_index":2343,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:24",{"_index":2344,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:25",{"_index":2345,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:27",{"_index":2356,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:29",{"_index":2342,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:38",{"_index":2366,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:40",{"_index":2354,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:74",{"_index":2365,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:75",{"_index":2364,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:76",{"_index":2362,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:77",{"_index":2361,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:79",{"_index":2358,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:80",{"_index":2363,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:81",{"_index":2359,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:82",{"_index":2360,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/termmodal/termmodal.ts:96",{"_index":2355,"title":{},"body":{"components/TermModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts",{"_index":2428,"title":{},"body":{"components/UsageModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:16",{"_index":2435,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:19",{"_index":2443,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:26",{"_index":2454,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:30",{"_index":2459,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:31",{"_index":2456,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:32",{"_index":2451,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:33",{"_index":2450,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:35",{"_index":2446,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:36",{"_index":2452,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:37",{"_index":2448,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:38",{"_index":2449,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:39",{"_index":2458,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:40",{"_index":2457,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:41",{"_index":2455,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:42",{"_index":2447,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:43",{"_index":2453,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:45",{"_index":2445,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:56",{"_index":2442,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:69",{"_index":2444,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:73",{"_index":2440,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:77",{"_index":2439,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:81",{"_index":2437,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:85",{"_index":2436,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:89",{"_index":2441,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/usagemodal/usagemodal.ts:93",{"_index":2438,"title":{},"body":{"components/UsageModal.html":{}}}],["src/app/modelercomponent/modals/variable.ts",{"_index":2659,"title":{},"body":{"classes/Variable.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/variable.ts:1",{"_index":2660,"title":{},"body":{"classes/Variable.html":{}}}],["src/app/modelercomponent/modals/variable.ts:2",{"_index":2661,"title":{},"body":{"classes/Variable.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts",{"_index":2666,"title":{},"body":{"components/VariableModal.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:134",{"_index":2675,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:139",{"_index":2672,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:14",{"_index":2689,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:144",{"_index":2677,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:148",{"_index":2676,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:15",{"_index":2688,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:152",{"_index":2682,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:18",{"_index":2693,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:20",{"_index":2671,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:24",{"_index":2679,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:38",{"_index":2702,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:44",{"_index":2694,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:45",{"_index":2698,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:46",{"_index":2696,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:56",{"_index":2697,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:57",{"_index":2695,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:58",{"_index":2687,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:59",{"_index":2686,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:61",{"_index":2683,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:62",{"_index":2690,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:63",{"_index":2684,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:64",{"_index":2685,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:66",{"_index":2680,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:72",{"_index":2681,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:78",{"_index":2673,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:82",{"_index":2674,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablemodal/variablemodal.ts:86",{"_index":2678,"title":{},"body":{"components/VariableModal.html":{}}}],["src/app/modelercomponent/modals/variablescomponent/variables.component.ts",{"_index":2662,"title":{},"body":{"components/VariableComponent.html":{},"coverage.html":{}}}],["src/app/modelercomponent/modals/variablescomponent/variables.component.ts:8",{"_index":2664,"title":{},"body":{"components/VariableComponent.html":{}}}],["src/app/modelercomponent/modeler.component.ts",{"_index":2820,"title":{},"body":{"coverage.html":{}}}],["src/app/modelercomponent/palette/palette.ts",{"_index":2822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/modelercomponent/properties/props",{"_index":2824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/modelercomponent/properties/props.ts",{"_index":2837,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/modelerconfig.service.ts",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["src/app/modellerpage/administration.component.ts",{"_index":140,"title":{},"body":{"components/AdministrationComponent.html":{},"coverage.html":{}}}],["src/app/modellerpage/administration.component.ts:11",{"_index":149,"title":{},"body":{"components/AdministrationComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts",{"_index":1794,"title":{},"body":{"components/ModellerPageComponent.html":{},"coverage.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:129",{"_index":1818,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:142",{"_index":1807,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:152",{"_index":1814,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:165",{"_index":1811,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:169",{"_index":1816,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:174",{"_index":1812,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:21",{"_index":1828,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:22",{"_index":1820,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:23",{"_index":1819,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:24",{"_index":1822,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:25",{"_index":1823,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:26",{"_index":1830,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:27",{"_index":1821,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:28",{"_index":1825,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:29",{"_index":1826,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:30",{"_index":1829,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:31",{"_index":1804,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:43",{"_index":1832,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:47",{"_index":1808,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:52",{"_index":1805,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/modellerpage/modellerpage.component.ts:93",{"_index":1809,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["src/app/models/abstract.entity.ts",{"_index":41,"title":{},"body":{"classes/AbstractEntity.html":{},"coverage.html":{}}}],["src/app/models/abstract.entity.ts:10",{"_index":45,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/app/models/abstract.entity.ts:6",{"_index":46,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/app/models/abstract.entity.ts:7",{"_index":44,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/app/models/abstract.entity.ts:8",{"_index":47,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/app/models/authenticationresponse.ts",{"_index":644,"title":{},"body":{"classes/AuthenticationResponse.html":{},"coverage.html":{}}}],["src/app/models/authenticationresponse.ts:10",{"_index":679,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:13",{"_index":658,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:14",{"_index":659,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:15",{"_index":677,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:18",{"_index":678,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:2",{"_index":661,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:21",{"_index":680,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:24",{"_index":681,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:27",{"_index":682,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:3",{"_index":664,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:30",{"_index":660,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:31",{"_index":665,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:33",{"_index":663,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:35",{"_index":666,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:36",{"_index":671,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:37",{"_index":662,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:4",{"_index":667,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:5",{"_index":669,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:6",{"_index":670,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:7",{"_index":673,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:8",{"_index":675,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/authenticationresponse.ts:9",{"_index":676,"title":{},"body":{"classes/AuthenticationResponse.html":{}}}],["src/app/models/dto/abstractdto.ts",{"_index":6,"title":{},"body":{"classes/AbstractDto.html":{},"coverage.html":{}}}],["src/app/models/dto/abstractdto.ts:6",{"_index":26,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/app/models/dto/abstractdto.ts:7",{"_index":24,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/app/models/dto/abstractdto.ts:8",{"_index":16,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/app/models/dto/loginpayloaddto.ts",{"_index":1494,"title":{},"body":{"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["src/app/models/dto/loginpayloaddto.ts:11",{"_index":1497,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["src/app/models/dto/loginpayloaddto.ts:9",{"_index":1498,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["src/app/models/dto/tokenpayloaddto.ts",{"_index":2417,"title":{},"body":{"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["src/app/models/dto/tokenpayloaddto.ts:5",{"_index":2423,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["src/app/models/dto/tokenpayloaddto.ts:8",{"_index":2422,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["src/app/models/dto/userdto.ts",{"_index":2547,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/app/models/dto/userdto.ts:15",{"_index":2550,"title":{},"body":{"classes/UserDto.html":{}}}],["src/app/models/dto/userdto.ts:17",{"_index":2551,"title":{},"body":{"classes/UserDto.html":{}}}],["src/app/models/dto/userdto.ts:18",{"_index":2548,"title":{},"body":{"classes/UserDto.html":{}}}],["src/app/models/dto/userdto.ts:19",{"_index":2549,"title":{},"body":{"classes/UserDto.html":{}}}],["src/app/models/loginresponse.ts",{"_index":1502,"title":{},"body":{"classes/LoginResponse.html":{},"coverage.html":{}}}],["src/app/models/loginresponse.ts:10",{"_index":1521,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:13",{"_index":1503,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:14",{"_index":1504,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:15",{"_index":1519,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:18",{"_index":1520,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:2",{"_index":1506,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:21",{"_index":1522,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:24",{"_index":1523,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:27",{"_index":1524,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:3",{"_index":1509,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:30",{"_index":1505,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:31",{"_index":1510,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:33",{"_index":1508,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:35",{"_index":1511,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:36",{"_index":1515,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:37",{"_index":1507,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:4",{"_index":1512,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:5",{"_index":1513,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:6",{"_index":1514,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:7",{"_index":1516,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:8",{"_index":1517,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/loginresponse.ts:9",{"_index":1518,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/models/model.ts",{"_index":1525,"title":{},"body":{"classes/Model.html":{},"coverage.html":{}}}],["src/app/models/model.ts:12",{"_index":1552,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:16",{"_index":1554,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:20",{"_index":1555,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:24",{"_index":1557,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:28",{"_index":1559,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:32",{"_index":1561,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:36",{"_index":1563,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:4",{"_index":1548,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:40",{"_index":1565,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:44",{"_index":1567,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:48",{"_index":1569,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:52",{"_index":1571,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:56",{"_index":1573,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:60",{"_index":1575,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:64",{"_index":1577,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:68",{"_index":1579,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:72",{"_index":1581,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:76",{"_index":1546,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:77",{"_index":1542,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:78",{"_index":1540,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:79",{"_index":1541,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:8",{"_index":1550,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:80",{"_index":1545,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:81",{"_index":1539,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:82",{"_index":1544,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:83",{"_index":1543,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/model.ts:84",{"_index":1538,"title":{},"body":{"classes/Model.html":{}}}],["src/app/models/role",{"_index":2934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/user.entity.ts",{"_index":2595,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["src/app/models/user.entity.ts:11",{"_index":2598,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/models/user.entity.ts:13",{"_index":2601,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/models/user.entity.ts:15",{"_index":2600,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/models/user.entity.ts:17",{"_index":2596,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/models/user.entity.ts:19",{"_index":2599,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/models/user.entity.ts:9",{"_index":2597,"title":{},"body":{"classes/UserEntity.html":{}}}],["src/app/pipes/filterunique.pipe.ts",{"_index":1176,"title":{},"body":{"pipes/FilterUnique.html":{},"coverage.html":{}}}],["src/app/pipes/filterunique.pipe.ts:8",{"_index":1179,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["src/app/pipes/timestamp.pipe.ts",{"_index":2402,"title":{},"body":{"pipes/Timestamp2Date.html":{},"coverage.html":{}}}],["src/app/pipes/timestamp.pipe.ts:11",{"_index":2403,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["src/app/pipes/version.pipe.ts",{"_index":2713,"title":{},"body":{"pipes/Version.html":{},"coverage.html":{}}}],["src/app/pipes/version.pipe.ts:19",{"_index":2714,"title":{},"body":{"pipes/Version.html":{}}}],["src/app/services/alert.service.ts",{"_index":231,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:26",{"_index":242,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:32",{"_index":237,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:38",{"_index":239,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:8",{"_index":243,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:9",{"_index":235,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/api.service.ts",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:41",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:70",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/authenticatedhttp.service.ts",{"_index":617,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{},"coverage.html":{}}}],["src/app/services/authenticatedhttp.service.ts:14",{"_index":628,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["src/app/services/authenticatedhttp.service.ts:8",{"_index":624,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["src/app/services/mqtt.service.ts",{"_index":57,"title":{},"body":{"injectables/AdamoMqttService.html":{},"coverage.html":{}}}],["src/app/services/mqtt.service.ts:12",{"_index":102,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:13",{"_index":101,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:14",{"_index":87,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:15",{"_index":99,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:16",{"_index":98,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:21",{"_index":75,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:28",{"_index":77,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:45",{"_index":86,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:48",{"_index":80,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:52",{"_index":85,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/mqtt.service.ts:57",{"_index":82,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["src/app/services/permission.service.ts",{"_index":2854,"title":{},"body":{"coverage.html":{}}}],["src/app/services/role.service.ts",{"_index":2856,"title":{},"body":{"coverage.html":{}}}],["src/app/services/snackbar.service.ts",{"_index":2160,"title":{},"body":{"injectables/SnackBarService.html":{},"coverage.html":{}}}],["src/app/services/snackbar.service.ts:10",{"_index":2169,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbar.service.ts:11",{"_index":2172,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbar.service.ts:13",{"_index":2166,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbar.service.ts:34",{"_index":2164,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbar.service.ts:38",{"_index":2168,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbar.service.ts:9",{"_index":2170,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["src/app/services/snackbarmessage.ts",{"_index":2156,"title":{},"body":{"classes/SnackBarMessage.html":{},"coverage.html":{}}}],["src/app/services/snackbarmessage.ts:2",{"_index":2158,"title":{},"body":{"classes/SnackBarMessage.html":{}}}],["src/app/services/snackbarmessage.ts:3",{"_index":2159,"title":{},"body":{"classes/SnackBarMessage.html":{}}}],["src/app/services/user.service.ts",{"_index":2606,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:116",{"_index":2614,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:121",{"_index":2624,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:130",{"_index":2626,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:151",{"_index":2622,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":2639,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":2628,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:24",{"_index":2618,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":2617,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":2612,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:31",{"_index":2638,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":2637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:39",{"_index":2613,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:44",{"_index":2615,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:48",{"_index":2620,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":2632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":2636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:83",{"_index":2634,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:95",{"_index":2630,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/viewer/viewer.component.ts",{"_index":2744,"title":{},"body":{"components/ViewerComponent.html":{},"coverage.html":{}}}],["src/app/viewer/viewer.component.ts:14",{"_index":2754,"title":{},"body":{"components/ViewerComponent.html":{}}}],["src/app/viewer/viewer.component.ts:15",{"_index":2749,"title":{},"body":{"components/ViewerComponent.html":{}}}],["src/app/viewer/viewer.component.ts:20",{"_index":2753,"title":{},"body":{"components/ViewerComponent.html":{}}}],["src/app/viewer/viewer.component.ts:25",{"_index":2751,"title":{},"body":{"components/ViewerComponent.html":{}}}],["src/app/viewer/viewer.component.ts:33",{"_index":2752,"title":{},"body":{"components/ViewerComponent.html":{}}}],["src/bpmn.ts",{"_index":3032,"title":{},"body":{"index.html":{}}}],["src/environments/environment.dev.ts",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["src/polyfills.ts",{"_index":2773,"title":{},"body":{"interfaces/Window.html":{},"coverage.html":{}}}],["stack",{"_index":2787,"title":{},"body":{"interfaces/Window.html":{}}}],["stacktrace",{"_index":3022,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1257,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["standard",{"_index":3044,"title":{},"body":{"index.html":{}}}],["start",{"_index":769,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"components/ModelLoaderComponent.html":{},"index.html":{}}}],["started",{"_index":2953,"title":{"index.html":{}},"body":{}}],["startevaluatemode",{"_index":806,"title":{},"body":{"classes/CommandStack.html":{}}}],["starts",{"_index":889,"title":{},"body":{"classes/CommandStack.html":{}}}],["startswith(this.ipim_val.tolowercase",{"_index":1467,"title":{},"body":{"components/InputModal.html":{}}}],["state",{"_index":126,"title":{},"body":{"injectables/AdamoMqttService.html":{},"guards/AuthGuard.html":{},"classes/CommandStack.html":{},"guards/RoleGuard.html":{},"injectables/StoreService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["state.completed",{"_index":2238,"title":{},"body":{"injectables/StoreService.html":{}}}],["state.url",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":339,"title":{},"body":{"components/AppFooterComponent.html":{},"injectables/AuthService.html":{},"classes/AuthenticationResponse.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/UserComponent.html":{}}}],["statustext",{"_index":650,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["still",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["stop",{"_index":894,"title":{},"body":{"classes/CommandStack.html":{},"components/FrontPageComponent.html":{}}}],["stopevaluatemode",{"_index":807,"title":{},"body":{"classes/CommandStack.html":{}}}],["stopevaluationisrunning",{"_index":808,"title":{},"body":{"classes/CommandStack.html":{}}}],["storage",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["store.service.ts",{"_index":689,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["store.service.ts:10",{"_index":1493,"title":{},"body":{"classes/Link.html":{}}}],["store.service.ts:17",{"_index":691,"title":{},"body":{"injectables/BPMNStore.html":{}}}],["store.service.ts:36",{"_index":692,"title":{},"body":{"injectables/BPMNStore.html":{}}}],["store.service.ts:9",{"_index":1492,"title":{},"body":{"classes/Link.html":{}}}],["store/bpmn",{"_index":688,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{},"coverage.html":{}}}],["store/commandstore.service.ts",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["storeservice",{"_index":2188,"title":{"injectables/StoreService.html":{}},"body":{"injectables/StoreService.html":{},"coverage.html":{}}}],["strict",{"_index":28,"title":{},"body":{"classes/AbstractDto.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Link.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["striped",{"_index":2474,"title":{},"body":{"components/UsageModal.html":{}}}],["stroke",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["structure",{"_index":1617,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["stuff",{"_index":2970,"title":{},"body":{"index.html":{}}}],["style",{"_index":1290,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["style=\"margin",{"_index":1896,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["style=\"position",{"_index":1902,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["styles",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{},"components/ViewerComponent.html":{}}}],["styleurls",{"_index":152,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1219,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["sub",{"_index":2720,"title":{},"body":{"pipes/Version.html":{}}}],["subject",{"_index":62,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"injectables/SnackBarService.html":{}}}],["subject.asobservable().first",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subject.next(false",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{}}}],["subject.next(true",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{}}}],["submitted",{"_index":1199,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["subprocess",{"_index":198,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["subprocesses",{"_index":2143,"title":{},"body":{"components/SaveModal.html":{},"components/SubProcessModal.html":{}}}],["subprocesslist",{"_index":2258,"title":{},"body":{"components/SubProcessModal.html":{}}}],["subprocesslist.length",{"_index":2295,"title":{},"body":{"components/SubProcessModal.html":{}}}],["subprocesslist[0",{"_index":2297,"title":{},"body":{"components/SubProcessModal.html":{}}}],["subprocessmodal",{"_index":197,"title":{"components/SubProcessModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subprocessmodal.html",{"_index":2255,"title":{},"body":{"components/SubProcessModal.html":{}}}],["subscribe",{"_index":523,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CommandStack.html":{},"components/FrontPageComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{}}}],["subscribe((response",{"_index":1634,"title":{},"body":{"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["subscribe((status",{"_index":341,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["subscribed",{"_index":853,"title":{},"body":{"classes/CommandStack.html":{}}}],["success",{"_index":233,"title":{},"body":{"injectables/AlertService.html":{},"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/SnackBarService.html":{},"components/UserComponent.html":{}}}],["success(message",{"_index":241,"title":{},"body":{"injectables/AlertService.html":{}}}],["success(text",{"_index":2167,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["successful",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfull",{"_index":1729,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["successfully",{"_index":1987,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{}}}],["suggestions",{"_index":2986,"title":{},"body":{"index.html":{}}}],["super",{"_index":856,"title":{},"body":{"classes/CommandStack.html":{},"components/VariableModal.html":{},"index.html":{}}}],["super(backend",{"_index":630,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["super(user",{"_index":2567,"title":{},"body":{"classes/UserDto.html":{}}}],["super.request(url",{"_index":631,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["support",{"_index":3046,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":3047,"title":{},"body":{"modules.html":{}}}],["systemjs",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":50,"title":{},"body":{"classes/AbstractEntity.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["tabbed",{"_index":1772,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["table",{"_index":1911,"title":{},"body":{"components/ModellerPageComponent.html":{},"components/UsageModal.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":763,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["tags",{"_index":768,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["take",{"_index":855,"title":{},"body":{"classes/CommandStack.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["taken",{"_index":1708,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["tap",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":1171,"title":{},"body":{"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{}}}],["tasks",{"_index":760,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["tbody",{"_index":1913,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["td",{"_index":1915,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["team",{"_index":2997,"title":{},"body":{"index.html":{}}}],["template",{"_index":137,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["templateref",{"_index":2367,"title":{},"body":{"components/TermModal.html":{},"components/VariableModal.html":{}}}],["templateurl",{"_index":144,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["term",{"_index":200,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/Link.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["termlist",{"_index":2340,"title":{},"body":{"components/TermModal.html":{},"components/VariableModal.html":{}}}],["termlist.length",{"_index":2389,"title":{},"body":{"components/TermModal.html":{}}}],["termlist[0",{"_index":2391,"title":{},"body":{"components/TermModal.html":{}}}],["termmodal",{"_index":199,"title":{"components/TermModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["termmodal.html",{"_index":2334,"title":{},"body":{"components/TermModal.html":{}}}],["terms",{"_index":1103,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["terms.length",{"_index":2314,"title":{},"body":{"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["test",{"_index":1116,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/UsageModal.html":{}}}],["testfunction",{"_index":937,"title":{},"body":{"classes/CommandStack.html":{}}}],["testing",{"_index":841,"title":{},"body":{"classes/CommandStack.html":{}}}],["testname",{"_index":2460,"title":{},"body":{"components/UsageModal.html":{}}}],["tests",{"_index":838,"title":{},"body":{"classes/CommandStack.html":{},"index.html":{}}}],["testterm",{"_index":939,"title":{},"body":{"classes/CommandStack.html":{}}}],["testterm.context",{"_index":942,"title":{},"body":{"classes/CommandStack.html":{}}}],["text",{"_index":256,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"components/FrontPageComponent.html":{},"classes/Link.html":{},"classes/LoginResponse.html":{},"components/ModellerPageComponent.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"components/ViewerComponent.html":{}}}],["textfile",{"_index":1770,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["th",{"_index":732,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["then(data",{"_index":2766,"title":{},"body":{"components/ViewerComponent.html":{}}}],["then(response",{"_index":2764,"title":{},"body":{"components/ViewerComponent.html":{}}}],["there's",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._clearcache",{"_index":2250,"title":{},"body":{"injectables/StoreService.html":{}}}],["this._collaborator",{"_index":1592,"title":{},"body":{"classes/Model.html":{}}}],["this._findbyuid(uid",{"_index":2246,"title":{},"body":{"injectables/StoreService.html":{}}}],["this._id",{"_index":1586,"title":{},"body":{"classes/Model.html":{}}}],["this._modelercomponent",{"_index":1584,"title":{},"body":{"classes/Model.html":{}}}],["this._mqttservice.connect",{"_index":117,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this._mqttservice.state.pipe().subscribe",{"_index":125,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this._name",{"_index":1588,"title":{},"body":{"classes/Model.html":{}}}],["this._read",{"_index":1596,"title":{},"body":{"classes/Model.html":{}}}],["this._router.navigate([\"/dashboard",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._router.navigate(['/dashboard",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._showinfo",{"_index":1594,"title":{},"body":{"classes/Model.html":{}}}],["this._version",{"_index":1582,"title":{},"body":{"classes/Model.html":{}}}],["this._write",{"_index":1598,"title":{},"body":{"classes/Model.html":{}}}],["this._xml",{"_index":1590,"title":{},"body":{"classes/Model.html":{}}}],["this.accesstoken",{"_index":2426,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["this.address",{"_index":2585,"title":{},"body":{"classes/UserDto.html":{}}}],["this.addvar",{"_index":1468,"title":{},"body":{"components/InputModal.html":{}}}],["this.addvar(\"newvariable",{"_index":2709,"title":{},"body":{"components/VariableModal.html":{}}}],["this.alertservice.getmessage().subscribe(message",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alsoexists",{"_index":2137,"title":{},"body":{"components/SaveModal.html":{}}}],["this.apiservice",{"_index":1742,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/SaveModal.html":{},"components/UsageModal.html":{}}}],["this.apiservice.decode",{"_index":2080,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.apiservice.getallmodels",{"_index":1633,"title":{},"body":{"components/ModelComponent.html":{},"components/PermissionComponent.html":{}}}],["this.apiservice.getallmodels().subscribe",{"_index":1628,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.apiservice.getallprofiles",{"_index":2514,"title":{},"body":{"components/UserComponent.html":{}}}],["this.apiservice.getallprofiles().subscribe",{"_index":2036,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.getallroles",{"_index":2001,"title":{},"body":{"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["this.apiservice.getallusers",{"_index":2003,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{}}}],["this.apiservice.getmodelschangedlast7days().subscribe",{"_index":1786,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.apiservice.getpartmodelusage(this.root.modelid.split('_')[1",{"_index":2464,"title":{},"body":{"components/UsageModal.html":{}}}],["this.apiservice.getpermission(user",{"_index":2004,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.apiservice.login_status",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.apiservice.login_status().subscribe",{"_index":1727,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.apiservice.logout().subscribe",{"_index":129,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this.apiservice.modelcreate(this.newmodelname",{"_index":1738,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.apiservice.modelcreate(this.selected.modelname",{"_index":1647,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.apiservice.modeldelete(this.selected.mid",{"_index":1650,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.apiservice.modelupdate",{"_index":1638,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.apiservice.modelupsert(this.model.id",{"_index":2133,"title":{},"body":{"components/SaveModal.html":{}}}],["this.apiservice.partmodelcreate(this.root.modelid.split('_')[1",{"_index":2148,"title":{},"body":{"components/SaveModal.html":{}}}],["this.apiservice.permissioncreate(uid",{"_index":1985,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.apiservice.permissiondelete(pid",{"_index":1991,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.apiservice.permissionupdate(role",{"_index":1993,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.apiservice.profiledelete(this.selected.rid).subscribe",{"_index":2042,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.apiservice.rolecreate(this.selected.role",{"_index":2069,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.apiservice.roledelete(this.selected.rid",{"_index":2070,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.apiservice.roleupdate(this.selected.rid",{"_index":2066,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.apiservice.usercreate",{"_index":2528,"title":{},"body":{"components/UserComponent.html":{}}}],["this.apiservice.userdelete(this.selected.uid",{"_index":2530,"title":{},"body":{"components/UserComponent.html":{}}}],["this.apiservice.userpassword(this.selected.uid",{"_index":2526,"title":{},"body":{"components/UserComponent.html":{}}}],["this.apiservice.userupdate",{"_index":2519,"title":{},"body":{"components/UserComponent.html":{}}}],["this.authenticationservice.logout",{"_index":1023,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.authservice",{"_index":1241,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.authservice.currentuser.subscribe",{"_index":1726,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["this.authservice.currentuser.subscribe(x",{"_index":1834,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.authservice.currentuservalue",{"_index":495,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{}}}],["this.authservice.isauthenticated",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.logout",{"_index":1836,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.avatar",{"_index":2573,"title":{},"body":{"classes/UserDto.html":{}}}],["this.backend_uri",{"_index":2648,"title":{},"body":{"injectables/UserService.html":{}}}],["this.backend_uri}/auth/login",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeslast7day",{"_index":1787,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.city",{"_index":2591,"title":{},"body":{"classes/UserDto.html":{}}}],["this.clearmodal(\"inputfset",{"_index":1404,"title":{},"body":{"components/InputModal.html":{}}}],["this.clearmodal('evalfset",{"_index":1090,"title":{},"body":{"components/EvalModal.html":{}}}],["this.client",{"_index":116,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this.client.end",{"_index":127,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this.closeresult",{"_index":1085,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["this.commandstack",{"_index":858,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.commandstack._stack[0",{"_index":940,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.commandstack.execute(testterm.command",{"_index":941,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.companyemail",{"_index":2577,"title":{},"body":{"classes/UserDto.html":{}}}],["this.companyname",{"_index":2579,"title":{},"body":{"classes/UserDto.html":{}}}],["this.completedtodos",{"_index":2245,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.config",{"_index":118,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this.connect(email",{"_index":128,"title":{},"body":{"injectables/AdamoMqttService.html":{}}}],["this.country",{"_index":2587,"title":{},"body":{"classes/UserDto.html":{}}}],["this.createdat",{"_index":34,"title":{},"body":{"classes/AbstractDto.html":{}}}],["this.createloaded",{"_index":1769,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.currentstatus",{"_index":336,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["this.currentuser",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"components/ModellerPageComponent.html":{}}}],["this.currentuser.role",{"_index":1835,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.currentusersubject",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.asobservable",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(response.user",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.value",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.diskmodelname",{"_index":1766,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.diskmodelxml",{"_index":1744,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.dismiss",{"_index":1091,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{}}}],["this.dragging",{"_index":862,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.dragging.cancel",{"_index":910,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.elereg",{"_index":860,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.email",{"_index":2572,"title":{},"body":{"classes/UserDto.html":{}}}],["this.error",{"_index":1249,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.expiresin",{"_index":2424,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["this.f.password.value",{"_index":1243,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.fillmodal",{"_index":1405,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["this.filltermmodal",{"_index":2393,"title":{},"body":{"components/TermModal.html":{}}}],["this.firstname",{"_index":2568,"title":{},"body":{"classes/UserDto.html":{}}}],["this.firstsubprocess",{"_index":2296,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.firstterm",{"_index":2390,"title":{},"body":{"components/TermModal.html":{}}}],["this.formbuilder.group",{"_index":1222,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.get",{"_index":2243,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.getallmodels",{"_index":1622,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["this.getallprofiles",{"_index":2031,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{}}}],["this.getallroles",{"_index":1995,"title":{},"body":{"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["this.getallusers",{"_index":1996,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{}}}],["this.getcompleted().length",{"_index":2240,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.getlatestchanges",{"_index":1725,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.getpermission(this.selecteduser.uid",{"_index":1983,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.getpermission(user.uid",{"_index":1981,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.getsubpartmodelsfromdb",{"_index":2462,"title":{},"body":{"components/UsageModal.html":{}}}],["this.guidgenerator",{"_index":864,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.handleerror",{"_index":2768,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.http.get(`${this.backend_uri}/users",{"_index":2645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.backend_uri}/users/${id",{"_index":2644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.backend_uri",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":2762,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.http.post",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.id",{"_index":32,"title":{},"body":{"classes/AbstractDto.html":{},"injectables/AdamoMqttService.html":{},"classes/CommandStack.html":{}}}],["this.industry",{"_index":2583,"title":{},"body":{"classes/UserDto.html":{}}}],["this.initmqtt",{"_index":1724,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["this.istokenexpired",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keepafternavigationchange",{"_index":251,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.lastname",{"_index":2569,"title":{},"body":{"classes/UserDto.html":{}}}],["this.loaderror.emit(error",{"_index":1783,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.loadfromdisk($event.target",{"_index":1757,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.loading",{"_index":1240,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["this.loadmodel.emit(model",{"_index":1754,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.loadsamplebpmn",{"_index":2758,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.logger.debug",{"_index":1857,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.logger.debug(\"error",{"_index":1248,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.logger.debug(\"form",{"_index":1239,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.logger.debug(\"login",{"_index":1238,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.logger.debug(\"submit",{"_index":1233,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.logger.debug(\"termmodal",{"_index":2379,"title":{},"body":{"components/TermModal.html":{}}}],["this.logger.debug(`authguard",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.debug(`data",{"_index":1245,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.logger.debug(`dismissed",{"_index":2380,"title":{},"body":{"components/TermModal.html":{}}}],["this.logger.debug(`login",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(`open",{"_index":2372,"title":{},"body":{"components/TermModal.html":{}}}],["this.logger.debug(`response",{"_index":1859,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.logger.debug(`user",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(`user.token",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(response",{"_index":1728,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.loginform",{"_index":1221,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.loginform.controls",{"_index":1232,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.loginform.invalid",{"_index":1237,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.message",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.modal.close",{"_index":1098,"title":{},"body":{"components/EvalModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["this.modalservice",{"_index":2374,"title":{},"body":{"components/TermModal.html":{},"components/VariableModal.html":{}}}],["this.modalservice.open(content",{"_index":1081,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["this.model",{"_index":2121,"title":{},"body":{"components/SaveModal.html":{}}}],["this.model.name",{"_index":2134,"title":{},"body":{"components/SaveModal.html":{}}}],["this.model.version",{"_index":2135,"title":{},"body":{"components/SaveModal.html":{}}}],["this.modeler",{"_index":854,"title":{},"body":{"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["this.modeler.get(\"elementregistry",{"_index":1436,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["this.modeler.get(\"modeling",{"_index":1438,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["this.modeler.get('moddle",{"_index":2321,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.modeler.get('selection').get",{"_index":2322,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.modeler.get(this.commandstack",{"_index":859,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modeler.get(this.dragging",{"_index":863,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modeler.get(this.elementregistry",{"_index":861,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modeler.getmodeler().get(\"moddle",{"_index":2399,"title":{},"body":{"components/TermModal.html":{}}}],["this.modeler.getmodeler().get(\"selection\").get",{"_index":2400,"title":{},"body":{"components/TermModal.html":{}}}],["this.modeler.gettermlist",{"_index":2395,"title":{},"body":{"components/TermModal.html":{}}}],["this.modeler.gettermlist()[0",{"_index":2398,"title":{},"body":{"components/TermModal.html":{}}}],["this.modeler.importxml(event.xmldoc.tostring",{"_index":911,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modeler.on('elements.changed",{"_index":887,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modeler.savexml({format",{"_index":931,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modelercomponenetroot",{"_index":866,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modelercomponenetroot.model",{"_index":915,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modelercomponenetroot.model.id",{"_index":870,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modelercomponenetroot.model.version",{"_index":872,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.modelercomponenetroot.modelid",{"_index":868,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.models",{"_index":1627,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["this.models.foreach((element",{"_index":2300,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.models.foreach(element",{"_index":1883,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models.foreach(model",{"_index":1850,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models.push(model",{"_index":1886,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models.splice(index",{"_index":1874,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models[index].id",{"_index":1870,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models[index].version",{"_index":1871,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.models[this.models.length",{"_index":1887,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.mqttservice",{"_index":2040,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.mqttservice.getclient().on(\"message",{"_index":1840,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.mqttservice.getclient().on('message",{"_index":879,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["this.mqttservice.getclient().publish('administration/model/create",{"_index":1648,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.mqttservice.getclient().publish('administration/model/delete",{"_index":1651,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.mqttservice.getclient().publish('administration/model/update",{"_index":1644,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.mqttservice.getclient().publish('administrations/role",{"_index":2068,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.mqttservice.getclient().publish('administrations/user",{"_index":2524,"title":{},"body":{"components/UserComponent.html":{}}}],["this.mqttservice.getclient().publish('ipim",{"_index":976,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().publish('model",{"_index":935,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().subscribe(\"collaborator/update",{"_index":1838,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.mqttservice.getclient().subscribe(\"modelupsert",{"_index":1839,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.mqttservice.getclient().subscribe('administration/model",{"_index":1623,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.mqttservice.getclient().subscribe('administrations/profile",{"_index":2032,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.mqttservice.getclient().subscribe('administrations/role",{"_index":2063,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.mqttservice.getclient().subscribe('administrations/user",{"_index":2501,"title":{},"body":{"components/UserComponent.html":{}}}],["this.mqttservice.getclient().subscribe('model",{"_index":874,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().subscribe('model/model_",{"_index":922,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().subscribe('modelupsert",{"_index":875,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().subscribe('permission",{"_index":1997,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.mqttservice.getclient().unsubscribe('model",{"_index":893,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().unsubscribe('model/model_",{"_index":921,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.mqttservice.getclient().unsubscribe(modelid",{"_index":1872,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.mqttservice.getclient(response.email",{"_index":1730,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["this.mqttservice.getclient(user.email",{"_index":1723,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newmodel",{"_index":1619,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.newmodel.mid",{"_index":1751,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newmodel.modelname",{"_index":1750,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newmodel.modelxml",{"_index":1748,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newmodelxml",{"_index":1737,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newmodelxml).subscribe",{"_index":1739,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.newprofile",{"_index":2029,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.newrole",{"_index":2062,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.newuser",{"_index":2499,"title":{},"body":{"components/UserComponent.html":{}}}],["this.onloadmodel(model",{"_index":1890,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.page",{"_index":1846,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.page.split(\"_",{"_index":1842,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.passentry.emit(this.user",{"_index":2370,"title":{},"body":{"components/TermModal.html":{}}}],["this.permission",{"_index":1863,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.persist",{"_index":2242,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.phone",{"_index":2581,"title":{},"body":{"classes/UserDto.html":{}}}],["this.profiles",{"_index":2035,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{}}}],["this.publishxml",{"_index":888,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.receivemessage(topic",{"_index":882,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.referencingmodels",{"_index":2461,"title":{},"body":{"components/UsageModal.html":{}}}],["this.rel",{"_index":707,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["this.remainingentries",{"_index":2244,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.returnurl",{"_index":1224,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.role",{"_index":2571,"title":{},"body":{"classes/UserDto.html":{}}}],["this.roles",{"_index":2000,"title":{},"body":{"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["this.root",{"_index":1089,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["this.root.apiservice.getallmodels",{"_index":2299,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.getevaluator().evaluateprocesses(this.variables",{"_index":1096,"title":{},"body":{"components/EvalModal.html":{}}}],["this.root.hideoverlay",{"_index":2327,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.loadsubprocess.emit(model",{"_index":2325,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.modelid.split('_')[2",{"_index":2149,"title":{},"body":{"components/SaveModal.html":{}}}],["this.root.returnsubprocesslist(this.root.lookup.elementregistry",{"_index":2146,"title":{},"body":{"components/SaveModal.html":{}}}],["this.root.showoverlay",{"_index":1097,"title":{},"body":{"components/EvalModal.html":{}}}],["this.root.snackbarservice.error('could",{"_index":2304,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.snackbarservice.error(json.parse(error._body).status",{"_index":2307,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.snackbarservice.newsnackbarmessage('error",{"_index":2330,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.snackbarservice.newsnackbarmessage('successfully",{"_index":2328,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.root.snackbarservice.newsnackbarmessage(error",{"_index":2467,"title":{},"body":{"components/UsageModal.html":{}}}],["this.route",{"_index":335,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["this.route.params",{"_index":337,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["this.route.snapshot.queryparams[\"returnurl",{"_index":1225,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.router.navigate",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{},"components/FrontPageComponent.html":{}}}],["this.router.navigate([\"/404",{"_index":2084,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.navigate([\"/front",{"_index":1866,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":1837,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.router.navigate([\"/modeler",{"_index":1246,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.router.navigate(['/front",{"_index":131,"title":{},"body":{"injectables/AdamoMqttService.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticatedHttpService.html":{},"components/ModelLoaderComponent.html":{}}}],["this.router.navigate(['/login",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate([this.returnurl",{"_index":1247,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.savesubprocesses",{"_index":2138,"title":{},"body":{"components/SaveModal.html":{}}}],["this.selected",{"_index":1003,"title":{},"body":{"classes/Entry.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{}}}],["this.selected.admin",{"_index":2039,"title":{},"body":{"components/ProfileComponent.html":{},"components/RoleComponent.html":{}}}],["this.selected.email",{"_index":2521,"title":{},"body":{"components/UserComponent.html":{}}}],["this.selected.firstname",{"_index":2522,"title":{},"body":{"components/UserComponent.html":{}}}],["this.selected.lastchange",{"_index":1641,"title":{},"body":{"components/ModelComponent.html":{}}}],["this.selected.lastname",{"_index":2523,"title":{},"body":{"components/UserComponent.html":{}}}],["this.selected.mid",{"_index":1639,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.selected.modelname",{"_index":1640,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.selected.modelversion",{"_index":1780,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["this.selected.modelxml",{"_index":1642,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.selected.password",{"_index":2527,"title":{},"body":{"components/UserComponent.html":{}}}],["this.selected.profile",{"_index":2038,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserComponent.html":{}}}],["this.selected.read",{"_index":1774,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{}}}],["this.selected.rid",{"_index":2037,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.selected.role",{"_index":2067,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.selected.uid",{"_index":2520,"title":{},"body":{"components/UserComponent.html":{}}}],["this.selected.version",{"_index":1643,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.selected.write",{"_index":1776,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{}}}],["this.selectedmodel",{"_index":1980,"title":{},"body":{"components/PermissionComponent.html":{},"components/SubProcessModal.html":{}}}],["this.selectedmodel.mid",{"_index":1982,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.selectedmodel.mid.tostring",{"_index":2318,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.selectedmodelname",{"_index":2302,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.selectedpermission",{"_index":1989,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.selecteduser",{"_index":1979,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.snackbarmessagearray.length",{"_index":2187,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["this.snackbarmessagearray.push(new",{"_index":2176,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["this.snackbarmessagearray.shift",{"_index":2183,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["this.snackbarmessages",{"_index":1856,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.snackbarmessages.asobservable",{"_index":2171,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["this.snackbarmessages.next(this.snackbarmessagearray",{"_index":2178,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["this.snackbarservice.error",{"_index":1735,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{}}}],["this.snackbarservice.error(\"error",{"_index":1865,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.snackbarservice.error('error",{"_index":2005,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.snackbarservice.error('not",{"_index":2525,"title":{},"body":{"components/UserComponent.html":{}}}],["this.snackbarservice.error(error._body",{"_index":1632,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["this.snackbarservice.error(json.parse(error._body).status",{"_index":1636,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["this.snackbarservice.error(response._body",{"_index":1630,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["this.snackbarservice.error(response.error",{"_index":1990,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.snackbarservice.error(response.status",{"_index":1731,"title":{},"body":{"components/ModelLoaderComponent.html":{},"components/PermissionComponent.html":{},"components/RoleComponent.html":{}}}],["this.snackbarservice.error(response.tostring",{"_index":2071,"title":{},"body":{"components/RoleComponent.html":{}}}],["this.snackbarservice.newsnackbarmessage",{"_index":1876,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.snackbarservice.snackbarmessages$.subscribe",{"_index":1855,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["this.snackbarservice.success('permission",{"_index":1986,"title":{},"body":{"components/PermissionComponent.html":{}}}],["this.snackbarservice.success('user",{"_index":2531,"title":{},"body":{"components/UserComponent.html":{}}}],["this.snackbarservice.success(response.status",{"_index":1646,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["this.state",{"_index":2589,"title":{},"body":{"classes/UserDto.html":{}}}],["this.stopevaluationisrunning",{"_index":873,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.subject.asobservable",{"_index":259,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next",{"_index":255,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.submitted",{"_index":1235,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["this.subprocesslist",{"_index":2294,"title":{},"body":{"components/SubProcessModal.html":{}}}],["this.termlist",{"_index":2388,"title":{},"body":{"components/TermModal.html":{}}}],["this.termmodaltermplate",{"_index":2373,"title":{},"body":{"components/TermModal.html":{}}}],["this.text",{"_index":706,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["this.thumbnail",{"_index":2575,"title":{},"body":{"classes/UserDto.html":{}}}],["this.title",{"_index":999,"title":{},"body":{"classes/Entry.html":{}}}],["this.todos",{"_index":2229,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.filter((todo",{"_index":2237,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.find((todo",{"_index":2253,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.foreach((todo",{"_index":2241,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.length",{"_index":2239,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.push(new",{"_index":2248,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.todos.splice(this.todos.indexof(todo",{"_index":2247,"title":{},"body":{"injectables/StoreService.html":{}}}],["this.token",{"_index":1500,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["this.topic",{"_index":867,"title":{},"body":{"classes/CommandStack.html":{}}}],["this.uid",{"_index":1001,"title":{},"body":{"classes/Entry.html":{}}}],["this.updatedat",{"_index":36,"title":{},"body":{"classes/AbstractDto.html":{}}}],["this.user",{"_index":1499,"title":{},"body":{"classes/LoginPayloadDto.html":{},"injectables/UserService.html":{}}}],["this.username",{"_index":1861,"title":{},"body":{"components/ModellerPageComponent.html":{},"classes/UserDto.html":{}}}],["this.users",{"_index":2002,"title":{},"body":{"components/PermissionComponent.html":{},"components/UserComponent.html":{}}}],["this.validateemail(this.selected.email",{"_index":2518,"title":{},"body":{"components/UserComponent.html":{}}}],["this.variables",{"_index":1088,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/VariableModal.html":{}}}],["this.variables.push(new",{"_index":1471,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["this.version1",{"_index":2122,"title":{},"body":{"components/SaveModal.html":{}}}],["this.version2",{"_index":2124,"title":{},"body":{"components/SaveModal.html":{}}}],["this.version3",{"_index":2127,"title":{},"body":{"components/SaveModal.html":{}}}],["this.version4",{"_index":2130,"title":{},"body":{"components/SaveModal.html":{}}}],["this.viewer",{"_index":2756,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.importxml(data",{"_index":2767,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.writeinputmodalvalues",{"_index":1092,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["this.xml",{"_index":2120,"title":{},"body":{"components/SaveModal.html":{}}}],["this.zipcode",{"_index":2593,"title":{},"body":{"classes/UserDto.html":{}}}],["through",{"_index":1146,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["throw",{"_index":683,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["throwerror",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["throwerror(error",{"_index":1027,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thrown",{"_index":1153,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["thumbnail",{"_index":2558,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["time",{"_index":2407,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["timer",{"_index":2182,"title":{},"body":{"injectables/SnackBarService.html":{}}}],["times",{"_index":1104,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["timestamp",{"_index":2406,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["timestamp2date",{"_index":360,"title":{"pipes/Timestamp2Date.html":{}},"body":{"modules/AppModule.html":{},"components/ModelLoaderComponent.html":{},"pipes/Timestamp2Date.html":{},"coverage.html":{},"overview.html":{}}}],["timestring",{"_index":2414,"title":{},"body":{"pipes/Timestamp2Date.html":{}}}],["tint",{"_index":781,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["tippen",{"_index":1433,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["title",{"_index":735,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Entry.html":{},"classes/Link.html":{},"components/ModellerPageComponent.html":{},"injectables/StoreService.html":{},"components/TermModal.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["title'}).result.then((result",{"_index":1084,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{}}}],["title.trim",{"_index":1000,"title":{},"body":{"classes/Entry.html":{}}}],["todo",{"_index":715,"title":{},"body":{"injectables/BPMNStore.html":{},"components/FrontPageComponent.html":{},"classes/Link.html":{},"injectables/StoreService.html":{}}}],["todo's",{"_index":3012,"title":{},"body":{"index.html":{}}}],["todo.completed",{"_index":2234,"title":{},"body":{"injectables/StoreService.html":{}}}],["todo.uid",{"_index":2236,"title":{},"body":{"injectables/StoreService.html":{}}}],["todos",{"_index":2193,"title":{},"body":{"injectables/StoreService.html":{}}}],["todto",{"_index":51,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["togglecompletion",{"_index":2202,"title":{},"body":{"injectables/StoreService.html":{}}}],["togglecompletion(uid",{"_index":2221,"title":{},"body":{"injectables/StoreService.html":{}}}],["token",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/LoginPayloadDto.html":{},"classes/UserDto.html":{}}}],["tokenpayloaddto",{"_index":1496,"title":{"classes/TokenPayloadDto.html":{}},"body":{"classes/LoginPayloadDto.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["tolowercase",{"_index":1466,"title":{},"body":{"components/InputModal.html":{}}}],["tools",{"_index":3021,"title":{},"body":{"index.html":{}}}],["top",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["top:10px",{"_index":2542,"title":{},"body":{"components/UserComponent.html":{}}}],["topic",{"_index":809,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["topic.split(\"/\")[3",{"_index":1853,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["topic.startswith(\"collaborator/update",{"_index":1848,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["topic.startswith('administration/model",{"_index":1624,"title":{},"body":{"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{}}}],["topic.startswith('administrations/profile",{"_index":2033,"title":{},"body":{"components/ProfileComponent.html":{}}}],["topic.startswith('administrations/role",{"_index":2064,"title":{},"body":{"components/RoleComponent.html":{}}}],["topic.startswith('administrations/user",{"_index":2502,"title":{},"body":{"components/UserComponent.html":{}}}],["topic.startswith('model",{"_index":899,"title":{},"body":{"classes/CommandStack.html":{}}}],["topromise",{"_index":2763,"title":{},"body":{"components/ViewerComponent.html":{}}}],["tr:hover",{"_index":1914,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["trace",{"_index":2788,"title":{},"body":{"interfaces/Window.html":{}}}],["trailer",{"_index":651,"title":{},"body":{"classes/AuthenticationResponse.html":{},"classes/LoginResponse.html":{}}}],["transfer",{"_index":932,"title":{},"body":{"classes/CommandStack.html":{}}}],["transform",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}}}],["transform(value",{"_index":1177,"title":{},"body":{"pipes/FilterUnique.html":{},"pipes/Timestamp2Date.html":{},"pipes/Version.html":{}}}],["transition",{"_index":1318,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["translate",{"_index":1294,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["translatex",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":1927,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["tree",{"_index":139,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["trick",{"_index":949,"title":{},"body":{"classes/CommandStack.html":{}}}],["trigger",{"_index":839,"title":{},"body":{"classes/CommandStack.html":{}}}],["triggers",{"_index":878,"title":{},"body":{"classes/CommandStack.html":{}}}],["true",{"_index":92,"title":{},"body":{"injectables/AdamoMqttService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/ModellerPageComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{}}}],["try",{"_index":115,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{}}}],["turn",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"injectables/BPMNStore.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"interceptors/ErrorInterceptor.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/FileReaderEvent.html":{},"interfaces/FileReaderEventTarget.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"interceptors/JwtInterceptor.html":{},"classes/Link.html":{},"classes/LoginPayloadDto.html":{},"classes/LoginResponse.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"classes/ModelElement.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"classes/SnackBarMessage.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"classes/TokenPayloadDto.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"interfaces/Window.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["type.ts",{"_index":2933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":970,"title":{},"body":{"classes/CommandStack.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["typescript",{"_index":3025,"title":{},"body":{"index.html":{}}}],["typescriptify",{"_index":3036,"title":{},"body":{"index.html":{}}}],["typings",{"_index":3038,"title":{},"body":{"index.html":{}}}],["u",{"_index":1252,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["uid",{"_index":989,"title":{},"body":{"classes/Entry.html":{},"components/PermissionComponent.html":{},"injectables/StoreService.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["um",{"_index":1429,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["unauthorised",{"_index":1143,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["uncomment",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["undefined",{"_index":972,"title":{},"body":{"classes/CommandStack.html":{},"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"interfaces/Window.html":{}}}],["undo",{"_index":785,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["undo/redo",{"_index":929,"title":{},"body":{"classes/CommandStack.html":{}}}],["unique",{"_index":849,"title":{},"body":{"classes/CommandStack.html":{},"dependencies.html":{}}}],["unsaved",{"_index":1895,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["unsubscribe",{"_index":891,"title":{},"body":{"classes/CommandStack.html":{}}}],["untouched>.form",{"_index":2535,"title":{},"body":{"components/UserComponent.html":{}}}],["up",{"_index":2987,"title":{},"body":{"index.html":{}}}],["update",{"_index":2650,"title":{},"body":{"injectables/UserService.html":{}}}],["updated",{"_index":1994,"title":{},"body":{"components/PermissionComponent.html":{}}}],["updatedat",{"_index":11,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/UserDto.html":{}}}],["updates",{"_index":1637,"title":{},"body":{"components/ModelComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/UserComponent.html":{}}}],["updating",{"_index":2715,"title":{},"body":{"pipes/Version.html":{}}}],["upload",{"_index":749,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["url",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/AuthenticationResponse.html":{},"components/FrontPageComponent.html":{},"classes/LoginResponse.html":{},"components/ViewerComponent.html":{}}}],["url(/assets/logo_ipim.svg",{"_index":1299,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["url(/assets/logo_kip.svg",{"_index":1303,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["usage",{"_index":202,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["usagemodal",{"_index":201,"title":{"components/UsageModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usagemodal.html",{"_index":2429,"title":{},"body":{"components/UsageModal.html":{}}}],["use",{"_index":27,"title":{},"body":{"classes/AbstractDto.html":{},"classes/CommandStack.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["useclass",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{}}}],["used",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"components/VariableModal.html":{}}}],["useful",{"_index":2995,"title":{},"body":{"index.html":{}}}],["user",{"_index":151,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"classes/LoginPayloadDto.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["user.address",{"_index":2586,"title":{},"body":{"classes/UserDto.html":{}}}],["user.avatar",{"_index":2574,"title":{},"body":{"classes/UserDto.html":{}}}],["user.city",{"_index":2592,"title":{},"body":{"classes/UserDto.html":{}}}],["user.companyemail",{"_index":2578,"title":{},"body":{"classes/UserDto.html":{}}}],["user.companyname",{"_index":2580,"title":{},"body":{"classes/UserDto.html":{}}}],["user.component.css",{"_index":2477,"title":{},"body":{"components/UserComponent.html":{}}}],["user.country",{"_index":2588,"title":{},"body":{"classes/UserDto.html":{}}}],["user.email",{"_index":1139,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/PermissionComponent.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{}}}],["user.firstname",{"_index":1140,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{}}}],["user.id",{"_index":1138,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.industry",{"_index":2584,"title":{},"body":{"classes/UserDto.html":{}}}],["user.lastname",{"_index":1141,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/UserComponent.html":{},"classes/UserDto.html":{}}}],["user.phone",{"_index":2582,"title":{},"body":{"classes/UserDto.html":{}}}],["user.role",{"_index":2081,"title":{},"body":{"guards/RoleGuard.html":{},"classes/UserDto.html":{}}}],["user.state",{"_index":2590,"title":{},"body":{"classes/UserDto.html":{}}}],["user.template.html",{"_index":2478,"title":{},"body":{"components/UserComponent.html":{}}}],["user.thumbnail",{"_index":2576,"title":{},"body":{"classes/UserDto.html":{}}}],["user.username",{"_index":2570,"title":{},"body":{"classes/UserDto.html":{}}}],["user.zipcode",{"_index":2594,"title":{},"body":{"classes/UserDto.html":{}}}],["user/${id",{"_index":2647,"title":{},"body":{"injectables/UserService.html":{}}}],["user/all",{"_index":2646,"title":{},"body":{"injectables/UserService.html":{}}}],["user/create",{"_index":2653,"title":{},"body":{"injectables/UserService.html":{}}}],["user/delete",{"_index":2649,"title":{},"body":{"injectables/UserService.html":{}}}],["user/password",{"_index":2652,"title":{},"body":{"injectables/UserService.html":{}}}],["user/update",{"_index":2651,"title":{},"body":{"injectables/UserService.html":{}}}],["usercomponent",{"_index":203,"title":{"components/UserComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercreate",{"_index":2480,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["usercreate(email",{"_index":2629,"title":{},"body":{"injectables/UserService.html":{}}}],["userdelete",{"_index":2481,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["userdelete(uid",{"_index":2631,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto",{"_index":559,"title":{"classes/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"classes/LoginPayloadDto.html":{},"components/ModellerPageComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":557,"title":{"classes/UserEntity.html":{}},"body":{"injectables/AuthService.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["userimage",{"_index":1920,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["username",{"_index":1250,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["userpassword",{"_index":2482,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["userpassword(uid",{"_index":2633,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":1115,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/PermissionComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["users.find(x",{"_index":1131,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["userservice",{"_index":2077,"title":{"injectables/UserService.html":{}},"body":{"guards/RoleGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userupdate",{"_index":2483,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["userupdate(uid",{"_index":2635,"title":{},"body":{"injectables/UserService.html":{}}}],["using!${this.getdismissreason(reason",{"_index":2381,"title":{},"body":{"components/TermModal.html":{}}}],["utilsservice.todto(this.dtoclass",{"_index":53,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["uuid",{"_index":998,"title":{},"body":{"classes/Entry.html":{},"dependencies.html":{}}}],["uuid.v4",{"_index":1002,"title":{},"body":{"classes/Entry.html":{}}}],["v",{"_index":1894,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["valid",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"components/FrontPageComponent.html":{},"components/UserComponent.html":{}}}],["validateemail",{"_index":2484,"title":{},"body":{"components/UserComponent.html":{}}}],["validateemail(email",{"_index":2493,"title":{},"body":{"components/UserComponent.html":{}}}],["validation",{"_index":2516,"title":{},"body":{"components/UserComponent.html":{}}}],["validators",{"_index":1216,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["validators.required",{"_index":1223,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["value",{"_index":90,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"injectables/AlertService.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"pipes/FilterUnique.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Model.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"pipes/Timestamp2Date.html":{},"components/UsageModal.html":{},"injectables/UserService.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"pipes/Version.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.filter(x",{"_index":1186,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["values",{"_index":1102,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["var",{"_index":122,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"guards/AuthGuard.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"guards/RoleGuard.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":205,"title":{"classes/Variable.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"classes/CommandStack.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"classes/Variable.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["variable('bookonwithdrawal",{"_index":2700,"title":{},"body":{"components/VariableModal.html":{}}}],["variable('nooperation",{"_index":2701,"title":{},"body":{"components/VariableModal.html":{}}}],["variable('prepacked",{"_index":2699,"title":{},"body":{"components/VariableModal.html":{}}}],["variable(name",{"_index":1472,"title":{},"body":{"components/InputModal.html":{},"components/VariableModal.html":{}}}],["variablecomponent",{"_index":204,"title":{"components/VariableComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["variablemodal",{"_index":206,"title":{"components/VariableModal.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["variablemodal.html",{"_index":2667,"title":{},"body":{"components/VariableModal.html":{}}}],["variablen",{"_index":1444,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{}}}],["variables",{"_index":757,"title":{},"body":{"injectables/BPMNStore.html":{},"components/EvalModal.html":{},"components/InputModal.html":{},"classes/Link.html":{},"components/VariableModal.html":{}}}],["variables.component.html",{"_index":2663,"title":{},"body":{"components/VariableComponent.html":{}}}],["variablescomponent/variables.component",{"_index":2703,"title":{},"body":{"components/VariableModal.html":{}}}],["various",{"_index":2966,"title":{},"body":{"index.html":{}}}],["varname",{"_index":1477,"title":{},"body":{"components/InputVarComponent.html":{},"components/VariableComponent.html":{}}}],["varname.name",{"_index":1479,"title":{},"body":{"components/InputVarComponent.html":{}}}],["veq2pke",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["vers1",{"_index":2729,"title":{},"body":{"pipes/Version.html":{}}}],["vers2",{"_index":2732,"title":{},"body":{"pipes/Version.html":{}}}],["vers3",{"_index":2736,"title":{},"body":{"pipes/Version.html":{}}}],["vers4",{"_index":2738,"title":{},"body":{"pipes/Version.html":{}}}],["version",{"_index":361,"title":{"pipes/Version.html":{}},"body":{"modules/AppModule.html":{},"components/FrontPageComponent.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/UsageModal.html":{},"pipes/Version.html":{},"coverage.html":{},"overview.html":{}}}],["version(value",{"_index":1583,"title":{},"body":{"classes/Model.html":{}}}],["version1",{"_index":2088,"title":{},"body":{"components/SaveModal.html":{}}}],["version2",{"_index":2089,"title":{},"body":{"components/SaveModal.html":{}}}],["version3",{"_index":2090,"title":{},"body":{"components/SaveModal.html":{}}}],["version4",{"_index":2091,"title":{},"body":{"components/SaveModal.html":{}}}],["versions",{"_index":1880,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["very",{"_index":3042,"title":{},"body":{"index.html":{}}}],["via",{"_index":718,"title":{},"body":{"injectables/BPMNStore.html":{},"classes/Link.html":{}}}],["viel",{"_index":1432,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["viewchild",{"_index":1078,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["viewchild(\"modal",{"_index":1403,"title":{},"body":{"components/InputModal.html":{}}}],["viewchild(\"variablemodal",{"_index":2704,"title":{},"body":{"components/VariableModal.html":{}}}],["viewchild('modal",{"_index":1087,"title":{},"body":{"components/EvalModal.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/VariableModal.html":{}}}],["viewchild('variablemodal",{"_index":2692,"title":{},"body":{"components/VariableModal.html":{}}}],["viewer",{"_index":208,"title":{},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["viewer.component.css",{"_index":2745,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.html",{"_index":2746,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer.component",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["viewercomponent",{"_index":207,"title":{"components/ViewerComponent.html":{}},"body":{"components/AdministrationComponent.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"components/InputVarComponent.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"components/VariableComponent.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibility",{"_index":1924,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["visible",{"_index":1934,"title":{},"body":{"components/ModellerPageComponent.html":{}}}],["void",{"_index":79,"title":{},"body":{"injectables/AdamoMqttService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppFooterComponent.html":{},"injectables/AuthService.html":{},"classes/CommandStack.html":{},"classes/Entry.html":{},"components/EvalModal.html":{},"components/FrontPageComponent.html":{},"components/InputModal.html":{},"classes/Model.html":{},"components/ModelComponent.html":{},"components/ModelLoaderComponent.html":{},"components/ModellerPageComponent.html":{},"components/PermissionComponent.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"components/SaveModal.html":{},"injectables/SnackBarService.html":{},"injectables/StoreService.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/UsageModal.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"components/VariableModal.html":{},"components/ViewerComponent.html":{}}}],["vom",{"_index":1427,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["vor",{"_index":1712,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["vorhandne",{"_index":1457,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["wait",{"_index":2332,"title":{},"body":{"components/SubProcessModal.html":{}}}],["warn",{"_index":2312,"title":{},"body":{"components/SubProcessModal.html":{}}}],["warning",{"_index":2394,"title":{},"body":{"components/TermModal.html":{}}}],["webkit",{"_index":1311,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{}}}],["webpack",{"_index":2956,"title":{},"body":{"index.html":{}}}],["webpack/1291",{"_index":3010,"title":{},"body":{"index.html":{}}}],["webpack/angular2",{"_index":3045,"title":{},"body":{"index.html":{}}}],["weight",{"_index":1306,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["weitergeleitet",{"_index":1719,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["welcome",{"_index":3013,"title":{},"body":{"index.html":{}}}],["wenn",{"_index":1456,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["werden",{"_index":1720,"title":{},"body":{"components/ModelLoaderComponent.html":{}}}],["whatever",{"_index":3002,"title":{},"body":{"index.html":{}}}],["white",{"_index":1348,"title":{},"body":{"components/FrontPageComponent.html":{}}}],["width",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/ViewerComponent.html":{}}}],["width:250px",{"_index":2538,"title":{},"body":{"components/UserComponent.html":{}}}],["width:80px",{"_index":2544,"title":{},"body":{"components/UserComponent.html":{}}}],["window",{"_index":2772,"title":{"interfaces/Window.html":{}},"body":{"interfaces/Window.html":{},"coverage.html":{}}}],["window.alert",{"_index":2396,"title":{},"body":{"components/TermModal.html":{}}}],["window.alert('attention",{"_index":2315,"title":{},"body":{"components/SubProcessModal.html":{}}}],["window.alert('noting",{"_index":2331,"title":{},"body":{"components/SubProcessModal.html":{}}}],["window.scrollto(0",{"_index":257,"title":{},"body":{"injectables/AlertService.html":{}}}],["winston",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["wird",{"_index":1421,"title":{},"body":{"components/InputModal.html":{}}}],["withcredentials",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["without",{"_index":1745,"title":{},"body":{"components/ModelLoaderComponent.html":{},"index.html":{}}}],["working",{"_index":951,"title":{},"body":{"classes/CommandStack.html":{},"components/ModelLoaderComponent.html":{}}}],["wrap",{"_index":1123,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["write",{"_index":1537,"title":{},"body":{"classes/Model.html":{},"components/ProfileComponent.html":{},"components/RoleComponent.html":{},"injectables/UserService.html":{}}}],["write(value",{"_index":1599,"title":{},"body":{"classes/Model.html":{}}}],["writeinputmodalvalues",{"_index":1045,"title":{},"body":{"components/EvalModal.html":{},"components/InputModal.html":{}}}],["writesubprocessmodalvalues",{"_index":2263,"title":{},"body":{"components/SubProcessModal.html":{}}}],["writetermmodalvalues",{"_index":2339,"title":{},"body":{"components/TermModal.html":{}}}],["writevariablemodalvalues",{"_index":2670,"title":{},"body":{"components/VariableModal.html":{}}}],["x",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{},"components/ModellerPageComponent.html":{}}}],["x.email",{"_index":1132,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["x.password",{"_index":1134,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["x[propertytobefiltered",{"_index":1189,"title":{},"body":{"pipes/FilterUnique.html":{}}}],["xhrbackend",{"_index":621,"title":{},"body":{"injectables/AuthenticatedHttpService.html":{}}}],["xml",{"_index":907,"title":{},"body":{"classes/CommandStack.html":{},"classes/Model.html":{},"classes/ModelElement.html":{},"components/ModellerPageComponent.html":{},"components/SaveModal.html":{}}}],["xml(value",{"_index":1591,"title":{},"body":{"classes/Model.html":{}}}],["xmldoc",{"_index":934,"title":{},"body":{"classes/CommandStack.html":{}}}],["yargs",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":84,"title":{},"body":{"injectables/AdamoMqttService.html":{},"injectables/AuthenticatedHttpService.html":{},"classes/CommandStack.html":{},"pipes/FilterUnique.html":{},"classes/Link.html":{},"pipes/Timestamp2Date.html":{},"components/VariableModal.html":{},"pipes/Version.html":{}}}],["z",{"_index":1359,"title":{},"body":{"components/FrontPageComponent.html":{},"components/ModellerPageComponent.html":{},"components/UserComponent.html":{}}}],["z]{2",{"_index":2512,"title":{},"body":{"components/UserComponent.html":{}}}],["za",{"_index":2510,"title":{},"body":{"components/UserComponent.html":{}}}],["zipcode",{"_index":2566,"title":{},"body":{"classes/UserDto.html":{},"classes/UserEntity.html":{}}}],["zone",{"_index":2789,"title":{},"body":{"interfaces/Window.html":{}}}],["zone.js",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":1434,"title":{},"body":{"components/InputModal.html":{},"components/SubProcessModal.html":{},"components/TermModal.html":{},"components/VariableModal.html":{}}}],["zum",{"_index":1408,"title":{},"body":{"components/InputModal.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDto.html":{"url":"classes/AbstractDto.html","title":"class - AbstractDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DTO/AbstractDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: AbstractEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/DTO/AbstractDto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        AbstractEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/AbstractDto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/AbstractDto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/AbstractDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        'use strict';\n\nimport { AbstractEntity } from '../abstract.entity';\n\nexport class AbstractDto {\n    id: string;\n    createdAt: Date;\n    updatedAt: Date;\n\n    constructor(entity: AbstractEntity) {\n        this.id = entity.id;\n        this.createdAt = entity.createdAt;\n        this.updatedAt = entity.updatedAt;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractEntity.html":{"url":"classes/AbstractEntity.html","title":"class - AbstractEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/abstract.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Abstract\n                                dtoClass\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/abstract.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            dtoClass\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/models/abstract.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/abstract.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/abstract.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDto } from './DTO/AbstractDto';\n\nexport abstract class AbstractEntity {\n\n    id: string;\n    createdAt: Date;\n    updatedAt: Date;\n\n    abstract dtoClass: new (entity: AbstractEntity) => T;\n\n    // toDto() {\n    //     return UtilsService.toDto(this.dtoClass, this);\n    // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdamoMqttService.html":{"url":"injectables/AdamoMqttService.html","title":"injectable - AdamoMqttService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdamoMqttService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mqtt.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                keepAfterNavigationChange\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getClient\n                            \n                            \n                                    Public\n                                getID\n                            \n                            \n                                    Public\n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, _mqttService: MqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mqtt.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _mqttService\n                                                  \n                                                        \n                                                                    MqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mqtt.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mqtt.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClient(email?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mqtt.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mqtt.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mqtt.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mqtt.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IMqttServiceOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    connectOnCreate: true,\n    hostname: environment.MQTT_HOST,\n    port: environment.MQTT_PORT,\n    path: \"\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mqtt.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mqtt.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keepAfterNavigationChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mqtt.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mqtt.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { IPIM_OPTIONS } from \"../modelerConfig.service\";\nimport { ApiService } from \"./api.service\";\nimport { Router } from \"@angular/router\";\n\n// const mqtt = require('mqtt');\nimport { MqttService, IMqttServiceOptions } from \"ngx-mqtt\";\nimport { environment } from \"../../environments/environment\";\n@Injectable()\nexport class AdamoMqttService {\n  private subject: Subject = new Subject();\n  private keepAfterNavigationChange: boolean = true;\n  private client: any;\n  private id: string;\n  private config: IMqttServiceOptions = {\n    connectOnCreate: true,\n    hostname: environment.MQTT_HOST,\n    port: environment.MQTT_PORT,\n    path: \"\"\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private _mqttService: MqttService\n  ) {}\n  public connect(id: string) {\n    try {\n      this.client = this._mqttService.connect(\n        { ...this.config, clientId: id }\n        // ...this.config,\n        // environment.MQTT_HOST + ':' + environment.MQTT_PORT,\n        // { clientId: id }\n      );\n    } catch (error) {}\n\n    // var client = mqtt.connect('ws://localhost:9001');\n    // this.id = id;\n    // console.log('mqtt', environment.MQTT_HOST + ':' + environment.MQTT_PORT, {\n    //   clientId: id\n    // });\n  }\n\n  public getState() {\n    return this._mqttService.state.pipe().subscribe( state => { return state;});\n  }\n  public disconnect() {\n    this.client.end();\n  }\n\n  public getID(): string {\n    return this.id;\n  }\n\n  //returns the client of the mqtt\n  public getClient(email?: string): any {\n    if (this.client) {\n      return this.client;\n    } else if (email) {\n      this.connect(email);\n      return this.client;\n    } else {\n      // this.apiService.logout().subscribe(\n      //   (        response: any) => {\n      //     this.router.navigate(['/front-page']);\n      //   },\n      //   (        error: any) => {\n      //     console.log(error);\n      //     this.router.navigate(['/front-page']);\n      //   }\n      // );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdministrationComponent.html":{"url":"components/AdministrationComponent.html","title":"component - AdministrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdministrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modellerPage/administration.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                administration\n            \n\n\n\n\n            \n                templateUrl\n                ./administration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                page2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modellerPage/administration.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'User'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/administration.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { NGXLogger } from \"ngx-logger\";\n\n@Component({\n  selector: \"administration\",\n  templateUrl: \"./administration.component.html\"\n  // styleUrls: ['./administration.component.css']\n})\nexport class AdministrationComponent {\n\n  public page2: string = 'User';\n  constructor(private logger: NGXLogger) {}\n}\n\n    \n\n    \n         -->\n\n\n    \n        User\n        Model\n        Role\n        Permission\n    \n\n\n    \n\n\n    \n\n\n    \n\n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->            User        Model        Role        Permission                    '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdministrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/Alert/alert.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                alert\n            \n\n\n\n\n            \n                templateUrl\n                alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/Alert/alert.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Alert/alert.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/Alert/alert.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/Alert/alert.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\nimport {AlertService} from '../../services/alert.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'alert',\n  templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent {\n  public message: any;\n\n  constructor(private alertService: AlertService) {\n  }\n\n  public ngOnInit() {\n    this.alertService.getMessage().subscribe(message => {\n      this.message = message;\n    });\n  }\n\n  private remove() {\n    this.message = null;\n  }\n}\n    \n\n    \n        \n    X\n    {{message.text}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    X    {{message.text}}'\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keepAfterNavigationChange\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                getMessage\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string, keepAfterNavigationChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(message: string, keepAfterNavigationChange: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keepAfterNavigationChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Router, NavigationStart } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Subject } from \"rxjs\";\n\n@Injectable()\nexport class AlertService {\n  private subject: Subject = new Subject();\n  private keepAfterNavigationChange: boolean = false;\n\n  constructor(private router: Router) {\n    // clear alert message on route change\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterNavigationChange) {\n          // only keep for a single location change\n          this.keepAfterNavigationChange = false;\n        } else {\n          // clear alert\n          this.subject.next();\n        }\n      }\n    });\n  }\n\n  public success(message: string, keepAfterNavigationChange: boolean = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: \"success\", text: message });\n    window.scrollTo(0, 0);\n  }\n\n  public error(message: string, keepAfterNavigationChange: boolean = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: \"error\", text: message });\n    window.scrollTo(0, 0);\n  }\n\n  public getMessage(): Observable {\n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'my-app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n}\n\n    \n\n    \n        -->\n\n        -->\n    \n\n-->\n    \n\n    \n                \n                    ./app.component.css\n                \n                main {\n    /*padding: 1em;*/\n    padding: 0 !important;\n    font-family: Arial, Helvetica, sans-serif;\n    /* text-align: center; */\n    /*margin-top: 50px;*/\n    display: block;\n    height: 100vh;\n}\n\n\nbody, html {\n    height: 100%;\n  }\n  .app-loading {\n    width: 50%;\n    height: 50%;\n    margin: auto;\n    position: absolute;\n    top: 0; left: 0; bottom: 0; right: 0;\n  }\n\n  .app-loading .spinner {\n    height: 200px;\n    width: 200px;\n    animation: rotate 2s linear infinite;\n    transform-origin: center center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n  }\n  .app-loading .spinner .path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    animation: dash 1.5s ease-in-out infinite;\n    stroke-linecap: round;\n    stroke: #ddd;\n  }\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35px;\n    }\n    100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124px;\n    }\n  }\n  .logo{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    height: 150px;\n    width: 150px;\n    transform: translateX(-50%) translateY(-50%);\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->        -->    -->'\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppFooterComponent.html":{"url":"components/AppFooterComponent.html","title":"component - AppFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/AppFooterComponent/footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentStatus\n                            \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/AppFooterComponent/footer.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/AppFooterComponent/footer.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/AppFooterComponent/footer.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/AppFooterComponent/footer.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.template.html'\n})\n\nexport class AppFooterComponent {\n  private route: ActivatedRoute;\n  private currentStatus: string;\n\n  constructor(route: ActivatedRoute) {\n    this.route = route;\n    this.currentStatus = '';\n  }\n\n  public ngOnInit() {\n    this.route.params\n    .pipe(map((params: { status: any; }) => params.status))\n      .subscribe((status: string) => {\n        this.currentStatus = status || '';\n      });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppHeaderComponent.html":{"url":"components/AppHeaderComponent.html","title":"component - AppHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/AppHeaderComponent/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.template.html'\n})\nexport class AppHeaderComponent {\n}\n\n    \n\n    \n        \n    Modeler\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Modeler'\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdministrationComponent\n\nAdministrationComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdministrationComponent->AppModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppFooterComponent\n\nAppFooterComponent\n\nAppModule -->\n\nAppFooterComponent->AppModule\n\n\n\n\n\nAppHeaderComponent\n\nAppHeaderComponent\n\nAppModule -->\n\nAppHeaderComponent->AppModule\n\n\n\n\n\nEvalModal\n\nEvalModal\n\nAppModule -->\n\nEvalModal->AppModule\n\n\n\n\n\nFilterUnique\n\nFilterUnique\n\nAppModule -->\n\nFilterUnique->AppModule\n\n\n\n\n\nFrontPageComponent\n\nFrontPageComponent\n\nAppModule -->\n\nFrontPageComponent->AppModule\n\n\n\n\n\nInputModal\n\nInputModal\n\nAppModule -->\n\nInputModal->AppModule\n\n\n\n\n\nInputVarComponent\n\nInputVarComponent\n\nAppModule -->\n\nInputVarComponent->AppModule\n\n\n\n\n\nModelComponent\n\nModelComponent\n\nAppModule -->\n\nModelComponent->AppModule\n\n\n\n\n\nModelLoaderComponent\n\nModelLoaderComponent\n\nAppModule -->\n\nModelLoaderComponent->AppModule\n\n\n\n\n\nModelerComponent\n\nModelerComponent\n\nAppModule -->\n\nModelerComponent->AppModule\n\n\n\n\n\nModellerPageComponent\n\nModellerPageComponent\n\nAppModule -->\n\nModellerPageComponent->AppModule\n\n\n\n\n\nPermissionComponent\n\nPermissionComponent\n\nAppModule -->\n\nPermissionComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRoleComponent\n\nRoleComponent\n\nAppModule -->\n\nRoleComponent->AppModule\n\n\n\n\n\nSaveModal\n\nSaveModal\n\nAppModule -->\n\nSaveModal->AppModule\n\n\n\n\n\nSubProcessModal\n\nSubProcessModal\n\nAppModule -->\n\nSubProcessModal->AppModule\n\n\n\n\n\nTermModal\n\nTermModal\n\nAppModule -->\n\nTermModal->AppModule\n\n\n\n\n\nTimestamp2Date\n\nTimestamp2Date\n\nAppModule -->\n\nTimestamp2Date->AppModule\n\n\n\n\n\nUsageModal\n\nUsageModal\n\nAppModule -->\n\nUsageModal->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nVariableComponent\n\nVariableComponent\n\nAppModule -->\n\nVariableComponent->AppModule\n\n\n\n\n\nVariableModal\n\nVariableModal\n\nAppModule -->\n\nVariableModal->AppModule\n\n\n\n\n\nVersion\n\nVersion\n\nAppModule -->\n\nVersion->AppModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nAppModule -->\n\nViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAdamoMqttService\n\nAdamoMqttService\n\nAppModule -->\n\nAdamoMqttService->AppModule\n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nSnackBarService\n\nSnackBarService\n\nAppModule -->\n\nSnackBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdministrationComponent\n                        \n                        \n                            AlertComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AppFooterComponent\n                        \n                        \n                            AppHeaderComponent\n                        \n                        \n                            EvalModal\n                        \n                        \n                            FilterUnique\n                        \n                        \n                            FrontPageComponent\n                        \n                        \n                            InputModal\n                        \n                        \n                            InputVarComponent\n                        \n                        \n                            ModelComponent\n                        \n                        \n                            ModelLoaderComponent\n                        \n                        \n                            ModelerComponent\n                        \n                        \n                            ModellerPageComponent\n                        \n                        \n                            PermissionComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RoleComponent\n                        \n                        \n                            SaveModal\n                        \n                        \n                            SubProcessModal\n                        \n                        \n                            TermModal\n                        \n                        \n                            Timestamp2Date\n                        \n                        \n                            UsageModal\n                        \n                        \n                            UserComponent\n                        \n                        \n                            VariableComponent\n                        \n                        \n                            VariableModal\n                        \n                        \n                            Version\n                        \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EvalModal\n                        \n                        \n                            InputModal\n                        \n                        \n                            SaveModal\n                        \n                        \n                            SubProcessModal\n                        \n                        \n                            TermModal\n                        \n                        \n                            UsageModal\n                        \n                        \n                            VariableModal\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AdamoMqttService\n                        \n                        \n                            AlertService\n                        \n                        \n                            ApiService\n                        \n                        \n                            SnackBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpModule } from \"@angular/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FrontPageComponent } from \"./front-page/FrontPageComponent\";\nimport { ViewerComponent } from \"./viewer/viewer.component\";\nimport { ModelerComponent } from \"./ModelerComponent/modeler.component\";\nimport { BsModalModule } from \"ng2-bs3-modal\";\nimport { TermModal } from \"./ModelerComponent/modals/TermModal/TermModal\";\nimport { VariableModal } from \"./ModelerComponent/modals/VariableModal/VariableModal\";\nimport { InputModal } from \"./ModelerComponent/modals/InputModal/InputModal\";\nimport { SubProcessModal } from \"./ModelerComponent/modals/SubProcessModal/SubProcessModal\";\nimport { AlertComponent } from \"./components/Alert/alert.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { AlertService } from \"./services/alert.service\";\nimport { AppFooterComponent } from \"./components/AppFooterComponent/footer.component\";\nimport { AppHeaderComponent } from \"./components/AppHeaderComponent/header.component\";\nimport { ApiService } from \"./services/api.service\";\nimport { AdamoMqttService } from \"./services/mqtt.service\";\nimport { ModellerPageComponent } from \"./modellerPage/modellerPage.component\";\nimport { AdministrationComponent } from \"./modellerPage/administration.component\";\nimport { UserComponent } from \"./components/UserComponent/user.component\";\nimport { ModelComponent } from \"./components/ModelComponent/model.component\";\nimport { ModelLoaderComponent } from \"./components/ModelLoaderComponent/modelloader.component\";\nimport { RoleComponent } from \"./components/RoleComponent/role.component\";\nimport { ProfileComponent } from \"./components/ProfileComponent/profile.component\";\nimport { PermissionComponent } from \"./components/PermissionComponent/permission.component\";\nimport { VariableComponent } from \"./ModelerComponent/modals//VariablesComponent/variables.component\";\nimport { InputVarComponent } from \"./ModelerComponent/modals/InputComponent/input.component\";\nimport { EvalModal } from \"./ModelerComponent/modals/evaluatorModal/evaluatorModal\";\nimport { SaveModal } from \"./ModelerComponent/modals/SaveModal/SaveModal\";\nimport { UsageModal } from \"./ModelerComponent/modals/UsageModal/UsageModal\";\nimport { FilterUnique } from \"./pipes/filterUnique.pipe\";\nimport { Timestamp2Date } from \"./pipes/timestamp.pipe\";\nimport { Version } from \"./pipes/version.pipe\";\nimport { AuthenticatedHttpService } from \"./services/authenticatedHttp.service\";\nimport { Http } from \"@angular/http\";\nimport { SnackBarService } from \"./services/snackbar.service\";\nimport { LoggerModule, NgxLoggerLevel } from \"ngx-logger\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n\n\n// import { JwtInterceptor, ErrorInterceptor, fakeBackendProvider } from './helpers';\n// import { DiagramComponent } from './ModelerComponent/Modeling.component';\n//check for correct branch!\n\nimport { IMqttMessage, MqttModule, IMqttServiceOptions } from \"ngx-mqtt\";\nimport { ModalModule, AlertModule } from \"ngx-bootstrap\";\nimport { CommonModule } from \"@angular/common\";\n\nexport const MQTT_SERVICE_OPTIONS: IMqttServiceOptions = {\n  hostname: \"localhost\",\n  port: 9001,\n  path: \"/mqtt\"\n};\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpModule,\n    AppRoutingModule,\n    FormsModule,\n    CommonModule,\n    AlertModule.forRoot(),\n    ModalModule.forRoot(),\n    ReactiveFormsModule,\n    BsModalModule,\n    HttpClientModule,\n    Ng2SearchPipeModule,\n    LoggerModule.forRoot({\n      serverLoggingUrl: \"/api/logs\",\n      level: NgxLoggerLevel.DEBUG,\n      serverLogLevel: NgxLoggerLevel.ERROR\n    }),\n    MqttModule.forRoot(MQTT_SERVICE_OPTIONS),\n    NgbModule\n  ],\n  entryComponents: [\n    TermModal, VariableModal, UsageModal, SubProcessModal, SaveModal, InputModal, EvalModal \n  ],\n  declarations: [\n    AppComponent,\n    AppFooterComponent,\n    AppHeaderComponent,\n    // DiagramComponent,\n    FrontPageComponent,\n    UserComponent,\n    ModelComponent,\n    ModelLoaderComponent,\n    RoleComponent,\n    ProfileComponent,\n    PermissionComponent,\n    ModellerPageComponent,\n    AdministrationComponent,\n    ViewerComponent,\n    ModelerComponent,\n    AlertComponent,\n    TermModal,\n    VariableModal,\n    InputModal,\n    SubProcessModal,\n    EvalModal,\n    SaveModal,\n    UsageModal,\n    VariableComponent,\n    InputVarComponent,\n    FilterUnique,\n    Timestamp2Date,\n    Version\n  ],\n  providers: [\n    AuthGuard,\n    AlertService,\n    SnackBarService,\n    ApiService,\n    AdamoMqttService,\n    // { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    // { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    // provider used to create fake backend\n    // fakeBackendProvider,\n    {\n      provide: Http,\n      useClass: AuthenticatedHttpService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ViewerComponent } from \"./viewer/viewer.component\";\nimport { FrontPageComponent } from \"./front-page/FrontPageComponent\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { ModellerPageComponent } from \"./modellerPage/modellerPage.component\";\nimport { AdministrationComponent } from \"./modellerPage/administration.component\";\nimport { RoleGuard } from \"./guards/role.guard\";\nimport { RoleType } from \"./models/role-type\";\n// import { Role } from \"./models\";\n\nconst routes: Routes = [\n  { path: \"front-page\", component: FrontPageComponent },\n  { path: \"viewer\", component: ViewerComponent, canActivate: [AuthGuard] },\n  { path: \"modeler\", component: ModellerPageComponent },\n  {\n    path: \"administration\",\n    component: AdministrationComponent,\n    canActivate: [AuthGuard],\n    data: { roles: ['ADMIN'] }\n  },\n  { path: \"\", redirectTo: \"/front-page\", pathMatch: \"full\" },\n  { path: \"**\", redirectTo: \"/front-page\", pathMatch: \"full\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, apiService: ApiService, logger: NGXLogger, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {Observable, Subject, from} from 'rxjs';\nimport {ApiService} from '../services/api.service';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { NGXLogger } from 'ngx-logger';\nimport { RoleType } from '../models/role-type';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private apiService: ApiService,\n              private logger: NGXLogger,\n              private authService: AuthService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authService.currentUserValue;\n    if (currentUser) {\n        // check if route is restricted by role\n        this.logger.debug(`Authguard canActivate currentUser.role == ${currentUser.role}`, currentUser)\n        // if( currentUser.role === '1') {\n        if( currentUser.role ===  (RoleType.User || RoleType.Admin)) {\n        // if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n            // role not authorised so redirect to home page\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        // authorised so return true\n        return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n//   public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | boolean {\n//     // var t: boolean = true;\n//     // if (t) return true;   //Uncomment to turn off AuthGuard\n\n\n//     if (this.authService.isAuthenticated()) {\n//       return true;\n//   }\n\n//   // navigate to login page\n//   this.router.navigate(['/login']);\n//   // you can save redirect url so after authing we can move them back to the page they requested\n//   return false;\n// }\n// const subject = new Subject();\n// this.apiService.login_status()\n// .subscribe(\n//   (response: any) => {\n//     if (response.loggedIn) {\n//             subject.next(true);\n//           } else {\n//             this.router.navigate(['/front-page']);\n//             subject.next(false);\n//           }\n//         },\n//         error => {\n//           console.log(error);\n//           this.router.navigate(['/front-page']);\n//           subject.next(false);\n//         });\n//     return from(subject).pipe(first()); // subject.asObservable().first();\n\n  // }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                BACKEND_URI\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BACKEND_URI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.SERVER_HOST + \":\" + environment.SERVER_PORT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, pipe, throwError, BehaviorSubject } from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport decode from \"jwt-decode\";\n// import { User } from \"../models\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { LoginPayloadDto } from \"../models/DTO/LoginPayloadDto\";\nimport { UserEntity } from \"../models/user.entity\";\nimport { UserDto } from \"../models/DTO/UserDto\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  private message: string;\n  private BACKEND_URI: string =\n    environment.SERVER_HOST + \":\" + environment.SERVER_PORT;\n\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private logger: NGXLogger) {\n    this.currentUserSubject = new BehaviorSubject(\n      JSON.parse(localStorage.getItem(\"adamo.currentUser\"))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): UserDto {\n    return this.currentUserSubject.value;\n  }\n\n  // login(): void {\n  //   localStorage.setItem('token', `eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE1MzMyNzM5NjksImV4cCI6MTU2NDgxMDAwNSwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoiVGVzdCBHdWFyZCIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20ifQ.GA0Y9gYIjmx1jLwuRHuBgZ8m6o-NgkD84nO0ym68CWo`);\n\n  //   this._router.navigate(['/dashboard']);\n  // }\n  public login(email: string, password: string) {\n    this.logger.debug(`login @${this.BACKEND_URI}/auth/login with ${email} and ${password}`);\n    return (\n      this.http.post(\n          `${this.BACKEND_URI}/auth/login`,\n          {\n            email: email,\n            password: password\n          },\n          {\n            withCredentials: true\n          }\n        )\n        .pipe(\n          map( (response: LoginPayloadDto) => {\n            // login successful if there's a jwt token in the response\n            this.logger.debug(`user = ${response}`);\n            this.logger.debug(`user.token = ${response.token}`);\n            if (response.user && response.token) {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem(\"adamo.currentUser\", JSON.stringify(response.user));\n              this.currentUserSubject.next(response.user);\n            }\n            return response.user;\n          })\n        )\n    );\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem(\"adamo.currentUser\");\n    this.currentUserSubject.next(null);\n    return this.http.get(this.BACKEND_URI + \"/logout\", {\n        withCredentials: true\n      })\n  }\n\n  //Session handling: Login status of user\n//   public login_status() {\n//     return this.http.get(this.BACKEND_URI + \"/login_status\", {\n//       withCredentials: true\n//     });\n//   }\n\n  /**\n   * check for expiration and if token is still existing or not\n   * @return {boolean}\n   */\n//   isAuthenticated(): boolean {\n//     return localStorage.getItem(\"token\") != null && !this.isTokenExpired();\n//   }\n\n  // simulate jwt token is valid\n  // https://github.com/theo4u/angular4-auth/blob/master/src/app/helpers/jwt-helper.ts\n//   isTokenExpired(): boolean {\n//     return false;\n//   }\n\n  //   loginAdmin(): void {\n  //     localStorage.setItem(\n  //       \"token\",\n  //       `eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE1MzMyNzM5NjksImV4cCI6MTU2NDgxMDAwNSwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoiVGVzdCBHdWFyZCIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJyb2xlIjoiQWRtaW4ifQ.rEkg53_IeCLzGHlmaHTEO8KF5BNfl6NEJ8w-VEq2PkE`\n  //     );\n\n  //     this._router.navigate([\"/dashboard\"]);\n  //   }\n\n  /**\n   * this is used to clear local storage and also the route to login\n   */\n\n//   decode() {\n//     return decode(localStorage.getItem(\"token\"));\n//   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticatedHttpService.html":{"url":"injectables/AuthenticatedHttpService.html","title":"injectable - AuthenticatedHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticatedHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authenticatedHttp.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Http\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backend: XHRBackend, defaultOptions: RequestOptions, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authenticatedHttp.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backend\n                                                  \n                                                        \n                                                                    XHRBackend\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultOptions\n                                                  \n                                                        \n                                                                    RequestOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(url: string | Request, options?: RequestOptionsArgs)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authenticatedHttp.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                            string | Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            RequestOptionsArgs\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Http, Request, RequestOptions, RequestOptionsArgs, Response, XHRBackend} from '@angular/http';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticatedHttpService extends Http {\n\n  constructor(backend: XHRBackend, defaultOptions: RequestOptions, private router: Router) {\n    super(backend, defaultOptions);\n  }\n\n  public request(url: string | Request, options?: RequestOptionsArgs): Observable {\n    return super.request(url, options).pipe(catchError((error: Response) => {\n      if (\n        error.status === 401 ||\n        error.status === 403 ||\n        error.status === 497 ||\n        error.status === 496\n      ) {\n        console.log('The authentication session expires or the user is not authorised. Force to Login Page.');\n        this.router.navigate(['/front-page']);\n\n      }\n      return Observable.throw(error);\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationResponse.html":{"url":"classes/AuthenticationResponse.html","title":"class - AuthenticationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/AuthenticationResponse.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Response\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                bodyUsed\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                permission\n                            \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Public\n                                redirected\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                statusText\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                trailer\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                arrayBuffer\n                            \n                            \n                                    Public\n                                blob\n                            \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Public\n                                formData\n                            \n                            \n                                    Public\n                                json\n                            \n                            \n                                    Public\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReadableStream\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bodyUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trailer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResponseType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/AuthenticationResponse.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            arrayBuffer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    arrayBuffer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            blob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blob()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            json\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    json()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            text\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    text()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/AuthenticationResponse.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthenticationResponse implements Response {\n  public headers: Headers;\n  public ok: boolean;\n  public redirected: boolean;\n  public status: number;\n  public statusText: string;\n  public trailer: Promise;\n  public type: ResponseType;\n  public url: string;\n  public clone(): Response {\n    throw new Error('Method not implemented.');\n  }\n  public body: ReadableStream;\n  public bodyUsed: boolean;\n  public arrayBuffer(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public blob(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public formData(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public json(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public text(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public email: string;\n  public permission: string;\n\n  public message: string;\n\n  public profile: string;\n  public success: boolean;\n  public loggedIn: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BPMNStore.html":{"url":"injectables/BPMNStore.html","title":"injectable - BPMNStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BPMNStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/bpmn-store/bpmn-store.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                paletteEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/bpmn-store/bpmn-store.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            paletteEntries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paletteEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/bpmn-store/bpmn-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport { COMMANDS } from './commandstore.service';\n\nimport {faChevronLeft, faChevronRight} from '@fortawesome/fontawesome-free-solid';\nimport fontawesome from '@fortawesome/fontawesome';\n\nexport class Link {\n    constructor(public readonly href: string, public readonly text?: string, public readonly rel?: string) {\n        this.text = text || href;\n        this.rel = rel || 'none';\n    }\n}\n\n@Injectable()\nexport class BPMNStore {\n\n    constructor(private http: Http) {\n        fontawesome.library.add(faChevronLeft, faChevronRight);\n    }\n\n    // public listDiagrams(): Observable {\n    //     // console.log('listDiagrams');\n    //     // This could be async and coming from a server:\n\n    //     // TODO: async read from folder via fs read async\n    //     return Observable.of([\n    //         new Link('/diagrams/scrum.bpmn'),\n    //         new Link('/diagrams/initial.bpmn'),\n    //         new Link('/diagrams/initial2.bpmn'),\n    //         new Link('/diagrams/pizza-collaboration.bpmn')\n    //     ]).delay(2);\n    // }\n\n    public paletteEntries(): Observable {\n        // This could be async and coming from a server:\n        return of({\n            [COMMANDS.TWO_COLUMN] : {\n                group: 'row',\n                className: ['fa', 'fa-th-large', 'fa-lg'],\n                title: COMMANDS.TWO_COLUMN,\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n          [COMMANDS.SAVE] : {\n            group: 'row',\n            className: ['fa-arrow-circle-down', 'glyphicfaon'],\n            title: 'Export to BPMN',\n            action: {\n              click: () => console.log('save')\n            }\n          },\n          [COMMANDS.SAVETODB] : {\n            group: 'row',\n            className: ['fa-cloud-upload-alt', 'fa'],\n            title: 'Save to Database',\n            action: {\n              click: () => console.log('save')\n            }\n          },\n            [COMMANDS.SET_IPIM_VALUES]: {\n                group: 'ipim',\n                className: ['fa-cog', 'fas'],\n                title: 'Set Variables',\n                action: {\n                    click: () => console.log('openVariableModal')\n                }\n            },\n            [COMMANDS.SET_TERM]: {\n                group: 'ipim',\n                className: ['fa-tasks', 'fas'],\n                title: 'Set Term',\n                action: {\n                    click: () => console.log('openTermModal')\n                }\n            },\n            [COMMANDS.SET_IPIM_VALUES_EVALUATE]: {\n                group: 'ipim',\n                className: ['fa-tag', 'fas'],\n                title: 'Evaluate Process',\n                action: {\n                    click: () => console.log('openInputModal')\n                }\n            },\n            [COMMANDS.SET_IPIM_EVALUATOR]: {\n                group: 'ipim',\n                className: ['fa-tags', 'fas'],\n                title: 'Start cascading Evaluation',\n                action: {\n                    click: () => console.log(COMMANDS.SET_IPIM_EVALUATOR)\n                }\n            },\n            [COMMANDS.SET_IPIM_SUBPROCESS]: {\n                group: 'ipim',\n                className: ['fa-list-alt', 'fas'],\n                title: 'Set Subprocess',\n                action: {\n                    click: () => console.log(COMMANDS.SET_IPIM_SUBPROCESS)\n                }\n            },\n            [COMMANDS.OPEN_SUBPROCESS_MODEL]: {\n                group: 'ipim',\n                className: ['fa-download', 'fas'],\n                title: 'Open Model of Subprocess',\n                action: {\n                    click: () => console.log(COMMANDS.OPEN_SUBPROCESS_MODEL)\n                }\n            },\n            [COMMANDS.HIGHLIGHT]: {\n                group: 'ipim',\n                className: ['fa-tint', 'fas'],\n                title:  'Highlight Elements',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n            [COMMANDS.RESET]: {\n                group: 'ipim',\n                className: ['fa-undo', 'fas'],\n                title: 'Reset Diagram',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n            [COMMANDS.OPEN_USAGE_MODEL]: {\n                group: 'ipim',\n                className: ['fa-share', 'fas'],\n                title: 'See Processes references',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            }\n        }); //.delay(1);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandStack.html":{"url":"classes/CommandStack.html","title":"class - CommandStack","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandStack\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ModelerComponent/command/CommandStack.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commandLogger\n                            \n                            \n                                    Private\n                                commandStack\n                            \n                            \n                                    Private\n                                COMMANDSTACK\n                            \n                            \n                                    Public\n                                commandTest\n                            \n                            \n                                    Private\n                                defaultTopic\n                            \n                            \n                                    Private\n                                dragging\n                            \n                            \n                                    Private\n                                DRAGGING\n                            \n                            \n                                    Private\n                                ELEMENTREGISTRY\n                            \n                            \n                                    Private\n                                eleReg\n                            \n                            \n                                    Private\n                                EVENTBUS\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                modeler\n                            \n                            \n                                    Private\n                                modelerComponenetRoot\n                            \n                            \n                                    Private\n                                mqttString\n                            \n                            \n                                    Public\n                                publishXML\n                            \n                            \n                                    Public\n                                receiveMessage\n                            \n                            \n                                    Public\n                                startEvaluateMode\n                            \n                            \n                                    Public\n                                stopEvaluateMode\n                            \n                            \n                                    Private\n                                stopEvaluationisRunning\n                            \n                            \n                                    Private\n                                topic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                guidGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modeler: any, modelerComponenetRoot: ModelerComponent, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/command/CommandStack.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modeler\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelerComponenetRoot\n                                                  \n                                                        \n                                                                        ModelerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commandLogger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            commandStack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            COMMANDSTACK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'commandStack'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commandTest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTopic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IPIM Default'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DRAGGING\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dragging'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ELEMENTREGISTRY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'elementRegistry'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eleReg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            EVENTBUS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'eventBus'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modelerComponenetRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mqttString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.SERVER_HOST + ':' + environment.MQTT_PORT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publishXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            receiveMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startEvaluateMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopEvaluateMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopEvaluationisRunning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            topic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/command/CommandStack.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            guidGenerator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    guidGenerator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/command/CommandStack.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ModelComponent} from '../../components/ModelComponent/model.component';\nimport {ModelerComponent} from '../modeler.component';\nimport {IPIM_OPTIONS} from '../../modelerConfig.service';\n\nimport {AdamoMqttService} from '../../services/mqtt.service';\nconst commandInterceptor = require('diagram-js/lib/command/CommandInterceptor');\nimport { environment } from './../../../environments/environment';\n\nexport class CommandStack {\n  private modeler: any;  //Modeler from Main Application\n  private COMMANDSTACK: string = 'commandStack';  //Commandstack from Modeler ... used for tests\n  private EVENTBUS: string = 'eventBus';  //Eventbus from Modeler to trigger for element changed Event\n  private ELEMENTREGISTRY: string = 'elementRegistry';  //ElementRegistry from Modeler for testing purposes\n  private DRAGGING: string = 'dragging';   //Dragging Class from Modeler, used for aborting possible movement while refreshing\n  private mqttString: string = environment.SERVER_HOST + ':' + environment.MQTT_PORT;  //Connection path for the mqtt Server\n  private defaultTopic: string = 'IPIM Default';  //Default Topic to subscribe on\n  private commandStack: any;   //commandStack for testing purposes\n  private eleReg: any;  //elementRegistry for Testing purposes\n  private id: any;       //Generated unique ID for Client to avoid Echos\n  private dragging: any; //Dragging State from Modeler\n  private topic: any;     //Currently subscribed Topic\n  private modelerComponenetRoot: ModelerComponent;\n  private stopEvaluationisRunning: boolean;\n\n//Commandstack Class\n\n  constructor(modeler: any, modelerComponenetRoot: ModelerComponent, private mqttService: AdamoMqttService) {\n    this.modeler = modeler;    //take modeler from super function\n    this.commandStack = this.modeler.get(this.COMMANDSTACK);  //get commandStack from Modeler\n    this.eleReg = this.modeler.get(this.ELEMENTREGISTRY);  //get ElementRegistry from Modeler\n    this.dragging = this.modeler.get(this.DRAGGING);   //get Dragging State from Modeler\n    this.id = this.guidGenerator();  //generate the unique ID for this Browser\n    this.modelerComponenetRoot = modelerComponenetRoot;\n    // this.topic = this.modelerComponenetRoot.modelId;\n    this.topic = '' +\n      'model_' +\n      this.modelerComponenetRoot.model.id +\n      '_' +\n      this.modelerComponenetRoot.model.version;\n    this.stopEvaluationisRunning = false;\n\n    this.mqttService.getClient().subscribe('MODEL/' + this.topic);  //subscribe Client to defaulttopic on MQTT Server\n    this.mqttService.getClient().subscribe('modelupsert');\n\n//Register Event to trigger when a new Message is received ... triggers only if topic is subscribed!\n    this.mqttService.getClient().on('message', (topic: any, message: any) => {\n//call function to handle the new message\n      this.receiveMessage(topic, message);\n    });\n\n//Call Publish function if something changes here we use the Eventbus Event element changed!\n    this.modeler.on('elements.changed', this.publishXML);\n\n  }\n\n//Starts Evaluation Mode ... Model will unsubscribe and no longer publish!\n  public startEvaluateMode = () => {\n    this.stopEvaluationisRunning = true;\n    // this.mqttService.getClient().unsubscribe('MODEL/' + this.topic);\n  }\n\n//Stop Evaluation Mode ... Model will resubscribe and publish again!\n  public stopEvaluateMode = () => {\n    this.stopEvaluationisRunning = false;\n    // this.mqttService.getClient().subscribe('MODEL/' + this.topic);\n  }\n\n//Handle a new Message from MQTT-Server\n  public receiveMessage = (topic: any, message: any) => {\n    console.log(topic);\n    const event = JSON.parse(message);\n    if (topic.startsWith('MODEL/')) {\n//Parse event from String to variable\n\n//check if the Event was issued from remote or self\n    if (event.IPIMID !== this.id && 'MODEL/' + this.topic === topic) {\n      if (this.stopEvaluationisRunning) {\n        return;\n      }\n//event was remote so cancel dragging if active an import new XML String\n      console.log('Test from remote:' + message.toString());\n\n      this.dragging.cancel();\n\n      this.modeler.importXML(event.XMLDoc.toString(), (err: any) => {\n        console.log(err);\n      });\n    }\n\n    } else if (topic === 'modelupsert') {\n      const model = this.modelerComponenetRoot.model;\n      if (model.id === event.mid && model.version === event.version) {\n        model.version = event.newVersion;\n        this.mqttService.getClient().unsubscribe('MODEL/model_' + event.mid + '_' + event.version);\n        this.mqttService.getClient().subscribe('MODEL/model_' + event.mid + '_' + event.newVersion);\n        this.topic = 'model_' + event.mid + '_' + event.newVersion;\n      }\n    }\n  }\n\n//Publish the current Model as XML to the MQTT Server ... automatically called on element.changed\n  public publishXML = (): void => {\n    //If\n\n    if (this.stopEvaluationisRunning) {\n      return;\n    }\n    // user modeled something or\n    // performed a undo/redo operation\n    this.modeler.saveXML({format: true}, (err: any, xml: any) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n      const transfer: any = {\n        IPIMID: this.id,\n        XMLDoc: xml\n\n      };\n      this.mqttService.getClient().publish('MODEL/' + this.topic, JSON.stringify(transfer));\n    });\n  }\n\n//Testfunction for evaluating the CommandStack\n  public commandTest = () => {\n    const testTerm = this.commandStack._stack[0];\n    this.commandStack.execute(testTerm.command, testTerm.context);\n  }\n\n  public commandLogger = (eventBus: any) => {\n//Call Constructor for CommandInterceptor, Call function gets the Object itself and the required eventbus\n    commandInterceptor.call(commandInterceptor, eventBus);\n\n//Small trick to get the jquery class working with angular. Prototype functions are added as direct variable...\n    commandInterceptor.postExecuted = commandInterceptor.prototype.postExecuted;\n    commandInterceptor.executed = commandInterceptor.prototype.executed;\n    commandInterceptor.execute = commandInterceptor.prototype.execute;\n    commandInterceptor.on = commandInterceptor.prototype.on;\n\n//finally implement the hook and be happy!\n    commandInterceptor.prototype.executed.call(commandInterceptor, (event: any) => {\n      if (typeof event.context.IPIMremote === 'undefined') { //&& event.command === 'shape.create') {  //lane.updateRefs\n        event.context.IPIMremote = 'yes';\n\n        this.mqttService.getClient().publish('IPIM', JSON.stringify(event));\n\n      }\n    });\n  }\n\n//Creates a unique GUI for each Client to eliminate echos\n  public guidGenerator(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4() );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entry.html":{"url":"classes/Entry.html","title":"class - Entry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/builder/model/entry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Private\n                                title\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/builder/model/entry.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/model/entry.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/model/entry.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/model/entry.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/model/entry.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import uuid from 'uuid';\n\nexport class Entry {\n  public selected: boolean;\n  private title: string;\n  public uid : any;\n\n  public setTitle(title: string) {\n    this.title = title.trim();\n  }\n\n  constructor(title: string) {\n    this.uid = uuid.v4();\n    this.selected = false;\n    this.title = title.trim();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/error.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/error.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EvalModal.html":{"url":"components/EvalModal.html","title":"component - EvalModal","body":"\n                   \n\n\n\n\n\n  Components\n  EvalModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                eval-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./evaluatorModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Private\n                                IPIM_META\n                            \n                            \n                                    Private\n                                IPIM_VAL\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Private\n                                modeler\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                variables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                clearModal\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Public\n                                fillModal\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Public\n                                setProps\n                            \n                            \n                                    Private\n                                writeInputModalValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            accept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    accept()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearModal(s: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProps(modeler: any, root: any, variables: Variable[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modeler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    variables\n                                    \n                                                Variable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeInputModalValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeInputModalValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_META\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IPIM_Meta'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_VAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IPIM_Val'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            variables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Variable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { BsModalComponent } from 'ng2-bs3-modal';\nimport { Router } from '@angular/router';\nimport { Variable } from '../variable';\nimport { InputVarComponent } from '../InputComponent/input.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'eval-modal',\n  templateUrl: './evaluatorModal.html'\n})\n\nexport class EvalModal {\n\n  closeResult: string;\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n  private IPIM_VAL : string = 'IPIM_Val';\n  private IPIM_META : string = 'IPIM_Meta';\n\n  private modeler : any;\n  private root : any;\n\n  public variables: Variable[] = [];\n\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = '';\n\n  public  animation: boolean = true;\n  public  keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n\n  public setProps(modeler: any, root: any, variables: Variable[]) {\n    this.modeler = modeler;\n    this.variables = variables;\n    this.root = root;\n  }\n\n  public cancel() : void {\n      this.clearModal('evalfset');\n      // this.dismiss();\n  }\n\n  public accept(): void {\n      this.writeInputModalValues();\n  }\n\n  private opened() {\n    console.log('EvaluatorModal opened');\n  }\n\n  private dismissed() {\n    console.log('EvaluatorModal dismissed');\n  }\n\n  private closed() {\n    console.log('EvaluatorModal closed');\n  }\n\n  public clearModal(s: string) {\n    console.log('clear executed');\n  }\n\n  private writeInputModalValues() {\n    this.root.getEvaluator().evaluateProcesses(this.variables);\n    this.root.showOverlay();\n    // this.modal.close();\n  }\n\n  public fillModal() {\n    console.log('filled modal');\n  }\n\n}\n    \n\n    \n        \n    \n      IPIM Evaluation\n    \n    \n      Please specify the values used:\n      \n\n        \n           \n        \n      \n    \n    \n        Evaluate\n    \n   -->\n\n  \n      \n        \n        \n          \n          \n            Terms\n            &times;\n          \n          \n          \n          \n            Please define a new term for all elements:\n            \n              \n              \n              \n            \n            \n          \n          \n          \n          \n            Set Term\n                \n        \n      \n      -->\n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          IPIM Evaluation              Please specify the values used:                                                       Evaluate       -->                                                        Terms            ×                                                    Please define a new term for all elements:                                                                                                                                  Set Term                                    -->        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EvalModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/FakeBackendInterceptor.html":{"url":"interceptors/FakeBackendInterceptor.html","title":"interceptor - FakeBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  FakeBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/fake-backend.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/fake-backend.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// import { User, Role } from '../models';\nimport {RoleType} from '../models/role-type';\nimport {UserDto} from '../models/DTO/UserDto';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        const users: UserDto[] = [\n            // { id: '1', email: 'test', password: 'test', firstName: 'Test', role: RoleType.Admin, lastName: 'User' }\n            { id: '1', email: 'test', password: 'test', role: RoleType.Admin, token: '', createdAt: new Date(), updatedAt: new Date() }\n        ];\n\n        const authHeader = request.headers.get('Authorization');\n        const isLoggedIn = authHeader && authHeader.startsWith('Bearer fake-jwt-token');\n\n        // wrap in delayed observable to simulate server api call\n        return of(null).pipe(mergeMap(() => {\n\n            // authenticate - public\n            // if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n            if (request.url.endsWith('/authenticate') && request.method === 'POST') {\n                const user = users.find(x => x.email === request.body.email && x.password === request.body.password);\n                if (!user) return error('Username or password is incorrect');\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    // firstName: user.firstName,\n                    // lastName: user.lastName,\n                    token: `fake-jwt-token`\n                });\n            }\n\n            // get all users\n            if (request.url.endsWith('/users') && request.method === 'GET') {\n                if (!isLoggedIn) return unauthorised();\n                return ok(users);\n            }\n\n            // pass through any requests not handled above\n            return next.handle(request);\n        }))\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n        .pipe(materialize())\n        .pipe(delay(500))\n        .pipe(dematerialize());\n\n        // private helper functions\n\n        function ok(body) {\n            return of(new HttpResponse({ status: 200, body }));\n        }\n\n        function unauthorised() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function error(message) {\n            return throwError({ status: 400, error: { message } });\n        }\n    }\n}\n\nexport let fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileReaderEvent.html":{"url":"interfaces/FileReaderEvent.html","title":"interface - FileReaderEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileReaderEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ModelerComponent/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Event\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        target\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getMessage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/interfaces.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FileReaderEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileReaderEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface FileReaderEventTarget extends EventTarget {\n    result: string;\n}\n\nexport interface FileReaderEvent extends Event {\n    target: FileReaderEventTarget;\n    getMessage(): string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileReaderEventTarget.html":{"url":"interfaces/FileReaderEventTarget.html","title":"interface - FileReaderEventTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileReaderEventTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ModelerComponent/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EventTarget\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface FileReaderEventTarget extends EventTarget {\n    result: string;\n}\n\nexport interface FileReaderEvent extends Event {\n    target: FileReaderEventTarget;\n    getMessage(): string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterUnique.html":{"url":"pipes/FilterUnique.html","title":"pipe - FilterUnique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterUnique\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filterUnique.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filterUnique\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: Object[], args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filterUnique.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Object[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'filterUnique',\n  pure: false\n})\nexport class FilterUnique implements PipeTransform {\n  public transform(value: Object[], args?: any): any {\n    const propertyToBeFiltered = args[0];\n    if (args[1]) {\n      return value;\n    }\n    const mySet = new Set();\n    return value.filter(x => {\n      if (args[2]) {\n        if (args[2][propertyToBeFiltered] === x[propertyToBeFiltered]) {\n          return true;\n        }\n      }\n      const isNew = !mySet.has(x[propertyToBeFiltered]);\n      if (isNew) {\n        mySet.add(x[propertyToBeFiltered]);\n      }\n      return isNew;\n    });\n  }\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrontPageComponent.html":{"url":"components/FrontPageComponent.html","title":"component - FrontPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrontPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/front-page/FrontPageComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                front-page\n            \n\n            \n                styleUrls\n                ./front-page.component.less\n            \n\n\n\n            \n                templateUrl\n                ./front-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Private\n                                project\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, logger: NGXLogger, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/front-page/FrontPageComponent.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/front-page/FrontPageComponent.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/front-page/FrontPageComponent.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.PROJECTNAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/front-page/FrontPageComponent.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/front-page/FrontPageComponent.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AlertService } from \"../services/alert.service\";\nimport { ApiService } from \"../services/api.service\";\nimport { AdamoMqttService } from \"../services/mqtt.service\";\nimport { environment } from \"../../environments/environment\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../services\";\nimport { first } from \"rxjs/operators\";\n\n// import {version} from \"./../../../package.json\"; TODO\n//Include components for interface and styling\n@Component({\n  selector: \"front-page\",\n  templateUrl: \"./front-page.component.html\",\n  styleUrls: [\"./front-page.component.less\"]\n})\nexport class FrontPageComponent implements OnInit {\n  public loginForm: FormGroup;\n\n  private project = environment.PROJECTNAME;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private logger: NGXLogger,\n    private authService: AuthService\n  ) {\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.logger.debug(\"submit pressed\");\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      this.logger.debug(\"login form invalid\");\n      return;\n    }\n\n    this.logger.debug(\"form valid\");\n    this.loading = true;\n    this.authService\n      .login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.logger.debug(`data received ${this.returnUrl}`);\n\n          this.router.navigate([\"/modeler\"]);\n          // this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.logger.debug(\"error received \", error);\n          this.error = error;\n          this.loading = false;\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n -->\n\n -->\nThe front page-->\nFront-Page\n-->\n\n    \n        \n         -->\n         -->\n        \n            \n                \n                    Email\n                    \n                    \n                        Username is required\n                    \n                \n                \n                    Password\n                    \n                    \n                        Password is required\n                    \n                \n                \n                    Login\n                    \n                \n                {{error}}\n            \n        \n    \n\n\n        \n            \n\n            \n\n                \n                Username is required\n            \n\n            \n\n                \n                Password is required\n                \n            \n            \n                Login \n                \n            \n\n         -->\n\n\n\n\n\n\n -->\n\n\n\n    Normal User - U: user P: user\n    Administrator - U: admin P: admin\n\nLogin\n\n    \n        Username\n        \n        \n            Username is required\n        \n    \n    \n        Password\n        \n        \n            Password is required\n        \n    \n    \n        Login\n        \n    \n    {{error}}\n -->\n    \n\n    \n                \n                    ./front-page.component.less\n                \n                /*GRANIT's NEUER STAND 08-07-18*/\n\n\n/*\nmain {\n    padding: 1em;\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n    display: block;\n}\n\n#canvas {\n    width: 100%;\n    height: 500px;\n    outline: 2px solid orange;\n}*/\n\n\n/*\n * Specific styles of signin component\n */\n\n\n/*\n * General styles\n */\n\nbody, html {\n    height: 100%;\n}\n\n.login-form {\n    display: flex;\n    background-repeat: no-repeat;\n    /*background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\n    background-image: linear-gradient(#f5f5f5, #DDDDDD);\n    //height: inherit;\n\n    height: 100vh;\n    .card-container {\n        &.card {\n            max-width: 350px;\n            padding: 40px 40px;\n            border-radius: 10px;\n            border-style: solid;\n            margin: auto;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            /* transform: translate(-50%, -50%); */\n            &.ipim {\n                border-color: #be0000;\n                .profile-img-card {\n                    content:url(/logo_ipim.svg);\n                    background-image: url(/assets/logo_ipim.svg);\n                }\n                .btn.btn-signin {\n                    background-color: #be0000;\n                }\n            }\n            &.kip {\n                border-color: #3d8610;\n                .profile-img-card {\n                    background-image: url(/assets/logo_kip.svg);\n                    background-repeat: no-repeat;\n                    background-size: 100%;\n                  \n                }\n                .btn.btn-signin {\n                    background-color: #3d8610;\n                }\n            }\n           \n        }\n        .btn {\n            font-weight: 700;\n            height: 36px;\n            -moz-user-select: none;\n            -webkit-user-select: none;\n            user-select: none;\n            cursor: default;\n        }\n    }\n\n    \n.btn.btn-signin {\n    background-color: #be0000;\n    /*GREEN\n    background-color: #3d8610;*/\n    padding: 0px;\n    font-weight: 700;\n    font-size: 14px;\n    height: 36px;\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    border-radius: 3px;\n    border: none;\n    -o-transition: all 0.218s;\n    -moz-transition: all 0.218s;\n    -webkit-transition: all 0.218s;\n    transition: all 0.218s;\n}\n\n.btn.btn-signin:hover, .btn.btn-signin:active, .btn.btn-signin:focus {\n    /*background-color: #3d8610;*/\n    background-color: darkred;\n}\n}\n\n\n/*\n * Card component\n */\n\n.card {\n    background-color: #F7F7F7;\n    /* just in case there no content*/\n    padding: 20px 25px 30px;\n    margin: 0 auto 25px;\n    margin-top: 50px;\n    /* shadows and rounded borders */\n    -moz-border-radius: 2px;\n    -webkit-border-radius: 2px;\n    border-radius: 2px;\n    -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n    -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n}\n\n.profile-img-card {\n    width: 130px;\n    height: 130px;\n    padding: 0px 3px 0px 3px;\n    display: inline-block;\n    /*margin: 0 auto 10px;*/\n    /*display: block;*/\n    /* -moz-border-radius: 50%; */\n    /* -webkit-border-radius: 50%; */\n    /* border-radius: 50%; */\n}\n\n\n/*\n * Form styles\n */\n\n.profile-name-card {\n    font-size: 16px;\n    font-weight: bold;\n    text-align: center;\n    margin: 10px 0 0;\n    min-height: 1em;\n}\n\n.reauth-email {\n    display: block;\n    color: #404040;\n    line-height: 2;\n    margin-bottom: 10px;\n    font-size: 14px;\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n.form-signin #username, .form-signin #inputPassword {\n    direction: ltr;\n    height: 44px;\n    font-size: 16px;\n}\n\n.form-signin input[type=email], .form-signin input[type=password], .form-signin input[type=text], .form-signin button {\n    width: 100%;\n    display: block;\n    margin-bottom: 10px;\n    z-index: 1;\n    position: relative;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n.form-signin .form-control:focus {\n    border-color: rgb(104, 145, 162);\n    outline: 0;\n    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgb(104, 145, 162);\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgb(104, 145, 162);\n}\n\n\n.forgot-password {\n    color: rgb(104, 145, 162);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' --> -->The front page-->Front-Page-->                     -->         -->                                                        Email                                                                Username is required                                                                        Password                                                                Password is required                                                                        Login                                                    {{error}}                                                                                        Username is required                                                        Password is required                                                        Login                                      --> -->    Normal User - U: user P: user    Administrator - U: admin P: adminLogin            Username                            Username is required                        Password                            Password is required                        Login                {{error}} -->'\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FrontPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FrontPageModule.html":{"url":"modules/FrontPageModule.html","title":"module - FrontPageModule","body":"\n                   \n\n\n\n\n    Modules\n    FrontPageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/front-page/front-page.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class FrontPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputModal.html":{"url":"components/InputModal.html","title":"component - InputModal","body":"\n                   \n\n\n\n\n\n  Components\n  InputModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/InputModal/InputModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./InputModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Private\n                                IPIM_META\n                            \n                            \n                                    Private\n                                IPIM_VAL\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Private\n                                modeler\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                variables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                            \n                                    Public\n                                addVar\n                            \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                clearModal\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Public\n                                fillModal\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Public\n                                setProps\n                            \n                            \n                                    Private\n                                writeInputModalValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            accept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    accept()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addVar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addVar(name: string, value: string, meta: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearModal(s: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProps(modeler: any, root: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modeler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeInputModalValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeInputModalValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_META\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"IPIM_Meta\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_VAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"IPIM_Val\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            variables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Variable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputModal/InputModal.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from \"@angular/core\";\nimport { BsModalComponent } from \"ng2-bs3-modal\";\nimport { Router } from \"@angular/router\";\nimport { Variable } from \"../variable\";\nimport { InputVarComponent } from \"../InputComponent/input.component\";\n\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: \"input-modal\",\n  templateUrl: \"./InputModal.html\"\n})\nexport class InputModal {\n  private IPIM_VAL: string = \"IPIM_Val\";\n  private IPIM_META: string = \"IPIM_Meta\";\n\n  private modeler: any;\n  private root: any;\n\n  public variables: Variable[] = [];\n\n  closeResult: string;\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n  // @ViewChild(\"modal\")\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = \"\";\n\n  public animation: boolean = true;\n  public keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n\n  public setProps(modeler: any, root: any) {\n    this.modeler = modeler;\n    this.variables = [];\n    this.root = root;\n  }\n\n  public cancel(): void {\n    this.clearModal(\"inputfset\");\n    // this.dismiss();\n  }\n\n  public accept(): void {\n    this.writeInputModalValues();\n  }\n\n  private opened() {\n    this.fillModal();\n  }\n\n  private dismissed() {\n    console.log(\"InputModal dismissed\");\n  }\n\n  private closed() {\n    console.log(\"InputModal closed\");\n  }\n\n  public clearModal(s: string) {\n    //Bereich zum Löschen per getElement abfragen\n    const inpNode = document.getElementById(s);\n    //Solange es noch ein firstChild gibt, wird dieses entfernt!\n    while (inpNode.firstChild) {\n      inpNode.removeChild(inpNode.firstChild);\n    }\n  }\n\n  private writeInputModalValues() {\n    //Objekte vom this.modeler holen um nicht immer so viel tippen zu müssen.\n\n    const elementRegistry = this.modeler.get(\"elementRegistry\");\n\n    const modeling = this.modeler.get(\"modeling\");\n\n    //Alle Elemente der ElementRegistry holen\n\n    const elements = elementRegistry.getAll();\n\n    //Alle Elemente durchlaufen um Variablen zu finden\n\n    elements.forEach((element: any) => {\n      //Prüfen ob erweiterte Eigenschaften für das Objekt existieren\n\n      if (typeof element.businessObject.extensionElements !== \"undefined\") {\n        //Wenn vorhandne die Elemente auslesen\n\n        const extras = element.businessObject.extensionElements.get(\"values\");\n\n        if (extras[0].values) {\n          //Schleife über alle Elemente\n\n          for (let i = 0; i  {\n            if (\n              extras[0].values[index].name\n                .toLowerCase()\n                .startsWith(this.IPIM_VAL.toLowerCase() + \"_\")\n            ) {\n              this.addVar(\n                extras[0].values[index].name\n                  .toLowerCase()\n                  .replace(this.IPIM_VAL.toLowerCase() + \"_\", \"\"),\n\n                extras[0].values[index].value.toLowerCase(),\n                false\n              );\n            }\n          });\n        }\n      }\n    }\n  }\n\n  public addVar(name: string, value: string, meta: boolean): void {\n    this.variables.push(new Variable(name, value, meta));\n  }\n}\n\n    \n\n    \n        \n    \n      IPIM Evaluation\n    \n    \n      Please specify the values used:\n      \n\n        \n           \n        \n      \n    \n    \n        Evaluate\n\n    \n -->\n\n\n    \n      \n      \n        \n        \n          Terms\n          &times;\n        \n        \n        \n        \n          Please define a new term for all elements:\n          \n            \n            \n            \n          \n          \n        \n        \n        \n        \n          Set Term\n              \n      \n    \n    -->\n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          IPIM Evaluation              Please specify the values used:                                                       Evaluate     -->                                          Terms          ×                                          Please define a new term for all elements:                                                                                                            Set Term                            -->    '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputVarComponent.html":{"url":"components/InputVarComponent.html","title":"component - InputVarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputVarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/InputComponent/input.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                inputvar-comp\n            \n\n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                varName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        varName\n                    \n                \n                \n                    \n                        Type :         Variable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/InputComponent/input.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Variable} from '../variable';\n@Component({\n    selector: 'inputvar-comp',\n    templateUrl: './input.component.html'\n})\nexport class InputVarComponent {\n  @Input() public varName : Variable;\n}\n    \n\n    \n        \n     {{varName.name}}: \n    \n    \n    \n -->\n\n\n        \n          \n          \n            \n            \n              Terms\n              &times;\n            \n            \n            \n            \n              Please define a new term for all elements:\n              \n                \n                \n                \n              \n              \n            \n            \n            \n            \n              Set Term\n                  \n          \n        \n        -->\n      \n      \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{varName.name}}:              -->                                                                  Terms              ×                                                              Please define a new term for all elements:                                                                                                                                                        Set Term                                            -->            '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputVarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/helpers/jwt.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/jwt.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/bpmn-store/bpmn-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                href\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                rel\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(href: string, text?: string, rel?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/bpmn-store/bpmn-store.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        href\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        rel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            href\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bpmn-store/bpmn-store.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            rel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bpmn-store/bpmn-store.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bpmn-store/bpmn-store.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport { COMMANDS } from './commandstore.service';\n\nimport {faChevronLeft, faChevronRight} from '@fortawesome/fontawesome-free-solid';\nimport fontawesome from '@fortawesome/fontawesome';\n\nexport class Link {\n    constructor(public readonly href: string, public readonly text?: string, public readonly rel?: string) {\n        this.text = text || href;\n        this.rel = rel || 'none';\n    }\n}\n\n@Injectable()\nexport class BPMNStore {\n\n    constructor(private http: Http) {\n        fontawesome.library.add(faChevronLeft, faChevronRight);\n    }\n\n    // public listDiagrams(): Observable {\n    //     // console.log('listDiagrams');\n    //     // This could be async and coming from a server:\n\n    //     // TODO: async read from folder via fs read async\n    //     return Observable.of([\n    //         new Link('/diagrams/scrum.bpmn'),\n    //         new Link('/diagrams/initial.bpmn'),\n    //         new Link('/diagrams/initial2.bpmn'),\n    //         new Link('/diagrams/pizza-collaboration.bpmn')\n    //     ]).delay(2);\n    // }\n\n    public paletteEntries(): Observable {\n        // This could be async and coming from a server:\n        return of({\n            [COMMANDS.TWO_COLUMN] : {\n                group: 'row',\n                className: ['fa', 'fa-th-large', 'fa-lg'],\n                title: COMMANDS.TWO_COLUMN,\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n          [COMMANDS.SAVE] : {\n            group: 'row',\n            className: ['fa-arrow-circle-down', 'glyphicfaon'],\n            title: 'Export to BPMN',\n            action: {\n              click: () => console.log('save')\n            }\n          },\n          [COMMANDS.SAVETODB] : {\n            group: 'row',\n            className: ['fa-cloud-upload-alt', 'fa'],\n            title: 'Save to Database',\n            action: {\n              click: () => console.log('save')\n            }\n          },\n            [COMMANDS.SET_IPIM_VALUES]: {\n                group: 'ipim',\n                className: ['fa-cog', 'fas'],\n                title: 'Set Variables',\n                action: {\n                    click: () => console.log('openVariableModal')\n                }\n            },\n            [COMMANDS.SET_TERM]: {\n                group: 'ipim',\n                className: ['fa-tasks', 'fas'],\n                title: 'Set Term',\n                action: {\n                    click: () => console.log('openTermModal')\n                }\n            },\n            [COMMANDS.SET_IPIM_VALUES_EVALUATE]: {\n                group: 'ipim',\n                className: ['fa-tag', 'fas'],\n                title: 'Evaluate Process',\n                action: {\n                    click: () => console.log('openInputModal')\n                }\n            },\n            [COMMANDS.SET_IPIM_EVALUATOR]: {\n                group: 'ipim',\n                className: ['fa-tags', 'fas'],\n                title: 'Start cascading Evaluation',\n                action: {\n                    click: () => console.log(COMMANDS.SET_IPIM_EVALUATOR)\n                }\n            },\n            [COMMANDS.SET_IPIM_SUBPROCESS]: {\n                group: 'ipim',\n                className: ['fa-list-alt', 'fas'],\n                title: 'Set Subprocess',\n                action: {\n                    click: () => console.log(COMMANDS.SET_IPIM_SUBPROCESS)\n                }\n            },\n            [COMMANDS.OPEN_SUBPROCESS_MODEL]: {\n                group: 'ipim',\n                className: ['fa-download', 'fas'],\n                title: 'Open Model of Subprocess',\n                action: {\n                    click: () => console.log(COMMANDS.OPEN_SUBPROCESS_MODEL)\n                }\n            },\n            [COMMANDS.HIGHLIGHT]: {\n                group: 'ipim',\n                className: ['fa-tint', 'fas'],\n                title:  'Highlight Elements',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n            [COMMANDS.RESET]: {\n                group: 'ipim',\n                className: ['fa-undo', 'fas'],\n                title: 'Reset Diagram',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            },\n            [COMMANDS.OPEN_USAGE_MODEL]: {\n                group: 'ipim',\n                className: ['fa-share', 'fas'],\n                title: 'See Processes references',\n                action: {\n                    click: () => console.log('two-column')\n                }\n            }\n        }); //.delay(1);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayloadDto.html":{"url":"classes/LoginPayloadDto.html","title":"class - LoginPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DTO/LoginPayloadDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserDto, token: TokenPayloadDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/DTO/LoginPayloadDto.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        TokenPayloadDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenPayloadDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/LoginPayloadDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/LoginPayloadDto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TokenPayloadDto } from './TokenPayloadDto';\nimport { UserDto } from './UserDto';\n\n\nexport class LoginPayloadDto {\n\n    user: UserDto;\n\n    token: TokenPayloadDto;\n\n    constructor(user: UserDto, token: TokenPayloadDto) {\n        this.user = user;\n        this.token = token;\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/LoginResponse.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Response\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                bodyUsed\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                permission\n                            \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Public\n                                redirected\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                statusText\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                trailer\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                arrayBuffer\n                            \n                            \n                                    Public\n                                blob\n                            \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Public\n                                formData\n                            \n                            \n                                    Public\n                                json\n                            \n                            \n                                    Public\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReadableStream\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bodyUsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ok\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trailer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResponseType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/LoginResponse.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            arrayBuffer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    arrayBuffer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            blob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blob()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            json\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    json()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            text\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    text()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/LoginResponse.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LoginResponse implements Response {\n  public headers: Headers;\n  public ok: boolean;\n  public redirected: boolean;\n  public status: number;\n  public statusText: string;\n  public trailer: Promise;\n  public type: ResponseType;\n  public url: string;\n  public clone(): Response {\n    throw new Error('Method not implemented.');\n  }\n  public body: ReadableStream;\n  public bodyUsed: boolean;\n  public arrayBuffer(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public blob(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public formData(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public json(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public text(): Promise {\n    throw new Error('Method not implemented.');\n  }\n  public email: string;\n  public permission: string;\n\n  public message: string;\n\n  public profile: string;\n  public success: boolean;\n  public loggedIn: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Model.html":{"url":"classes/Model.html","title":"class - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _collaborator\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _modelerComponent\n                            \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Private\n                                _read\n                            \n                            \n                                    Private\n                                _showInfo\n                            \n                            \n                                    Private\n                                _version\n                            \n                            \n                                    Private\n                                _write\n                            \n                            \n                                    Private\n                                _xml\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    version\n                                \n                                \n                                    modelerComponent\n                                \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    xml\n                                \n                                \n                                    collaborator\n                                \n                                \n                                    showInfo\n                                \n                                \n                                    read\n                                \n                                \n                                    write\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/model.ts:84\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collaborator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _modelerComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _read\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _showInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _write\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _xml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/model.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        version\n                    \n                \n\n                \n                    \n                        getversion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:4\n                                \n                            \n\n                \n                    \n                        setversion(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        modelerComponent\n                    \n                \n\n                \n                    \n                        getmodelerComponent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:12\n                                \n                            \n\n                \n                    \n                        setmodelerComponent(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:20\n                                \n                            \n\n                \n                    \n                        setid(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:28\n                                \n                            \n\n                \n                    \n                        setname(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        xml\n                    \n                \n\n                \n                    \n                        getxml()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:36\n                                \n                            \n\n                \n                    \n                        setxml(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        collaborator\n                    \n                \n\n                \n                    \n                        getcollaborator()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:44\n                                \n                            \n\n                \n                    \n                        setcollaborator(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        showInfo\n                    \n                \n\n                \n                    \n                        getshowInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:52\n                                \n                            \n\n                \n                    \n                        setshowInfo(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        read\n                    \n                \n\n                \n                    \n                        getread()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:60\n                                \n                            \n\n                \n                    \n                        setread(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:64\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        write\n                    \n                \n\n                \n                    \n                        getwrite()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:68\n                                \n                            \n\n                \n                    \n                        setwrite(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/model.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {ModelerComponent} from '../ModelerComponent/modeler.component';\n\nexport class Model {\n  get version(): string {\n    return this._version;\n  }\n\n  set version(value: string) {\n    this._version = value;\n  }\n\n  get modelerComponent(): ModelerComponent {\n    return this._modelerComponent;\n  }\n\n  set modelerComponent(value: ModelerComponent) {\n    this._modelerComponent = value;\n  }\n\n  get id(): number {\n    return this._id;\n  }\n\n  set id(value: number) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  get xml(): string {\n    return this._xml;\n  }\n\n  set xml(value: string) {\n    this._xml = value;\n  }\n\n  get collaborator(): string[] {\n    return this._collaborator;\n  }\n\n  set collaborator(value: string[]) {\n    this._collaborator = value;\n  }\n\n  get showInfo(): boolean {\n    return this._showInfo;\n  }\n\n  set showInfo(value: boolean) {\n    this._showInfo = value;\n  }\n\n  get read(): boolean {\n    return this._read;\n  }\n\n  set read(value: boolean) {\n    this._read = value;\n  }\n\n  get write(): boolean {\n    return this._write;\n  }\n\n  set write(value: boolean) {\n    this._write = value;\n  }\n\n  private _xml: string;\n  private _name: string;\n  private _id: number;\n  private _modelerComponent: ModelerComponent;\n  private _version: string;\n  private _collaborator: string[];\n  private _showInfo: boolean;\n  private _read: boolean;\n  private _write: boolean;\n\n    constructor(){}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelComponent.html":{"url":"components/ModelComponent.html","title":"component - ModelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ModelComponent/model.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-management\n            \n\n\n\n\n            \n                templateUrl\n                ./model.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                models\n                            \n                            \n                                    Private\n                                newModel\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllModels\n                            \n                            \n                                    Public\n                                modelCreate\n                            \n                            \n                                    Public\n                                modelDelete\n                            \n                            \n                                    Public\n                                modelUpdate\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, snackbarService: SnackBarService, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ModelComponent/model.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelComponent/model.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelComponent/model.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelComponent/model.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelComponent/model.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelComponent/model.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelComponent/model.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelComponent/model.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelComponent/model.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ApiService} from '../../services/api.service';\nimport {AdamoMqttService} from '../../services/mqtt.service';\nimport { SnackBarService } from '../../services/snackbar.service';\n\n@Component({\n  selector: 'model-management',\n  templateUrl: './model.template.html'\n})\n\nexport class ModelComponent {\n  private selected: any;\n  private newModel: any;\n  private models: any;\n\n  constructor(private apiService: ApiService, private snackbarService: SnackBarService, private mqttService: AdamoMqttService) {\n  }\n\n  public ngOnInit() {\n    //defines the structure for a new empty model\n    this.newModel = {\n      modelname: '',\n      version: '',\n      lastchange: ''\n    };\n\n    this.getAllModels();\n\n    this.mqttService.getClient().subscribe('administration/model/#');\n    const i = this;\n    this.mqttService.getClient().on('message', (topic: any, message: any) => {\n        if (topic.startsWith('administration/model')) {\n        console.log('Test from remote:' + message.toString());\n        i.getAllModels();\n      }\n    });\n  }\n\n  //gets a list of all models from DB\n  // public getAllModels() {\n  //   this.models = [];\n\n    public getAllModels() {\n      this.models = [];\n  \n      this.apiService.getAllModels().subscribe(\n        (response: (any)) => {\n          // if (response.success) {\n            this.models = response;\n            this.selected = null;\n          // } else {\n          //   this.snackbarService.error(response._body);\n          // }\n        },\n        (error: { _body: string }) => {\n          this.snackbarService.error(error._body);\n          console.log(error);\n        }\n      );\n    }\n    \n  //   this.apiService.getAllModels()\n  //     .subscribe((response: { success: any; data: any; _body: string; }) => {\n  //         if (response.success) {\n  //           this.models = response.data;\n  //           this.selected = null;\n  //         } else {\n  //           this.snackbarService.error(response._body);\n  //         }\n  //       },\n  //       (        error: { _body: string; }) => {\n  //         console.log(error);\n  //         this.snackbarService.error(JSON.parse(error._body).status);\n  //       });\n  // }\n\n  //updates the selected model\n  public modelUpdate() {\n    this.apiService.modelUpdate(\n      this.selected.mid,\n      this.selected.modelname,\n      this.selected.lastchange,\n      this.selected.modelxml,\n      this.selected.version)\n      .subscribe((response: { success: any; status: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administration/model/update', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //creates a new model\n  public modelCreate() {\n    this.apiService.modelCreate(this.selected.modelname, this.selected.modelxml)\n      .subscribe((response: { success: any; status: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administration/model/create', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //deletes the selected model\n  public modelDelete() {\n    this.apiService.modelDelete(this.selected.mid, this.selected.version)\n      .subscribe((response: { success: any; status: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administration/model/delete', JSON.stringify({\n              mid: this.selected.mid,\n              version: this.selected.version\n            }));\n            this.snackbarService.success(response.status);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n}\n    \n\n    \n        \n    \n        Model\n    \n    \n        \n            \n            \n                \n            \n        \n        \n            \n            \n                ModelName\n                Version\n            \n            \n            \n            \n                {{model.modelname}}\n                {{model.version | version}}\n            \n            \n        \n         New Model -->\n    \n\n\n\n    \n        {{(selected.modelname === '' ? 'NewModel' : selected.modelname)}}\n    \n    \n\n\n\n        \n            \n                Modelname\n                \n            \n            \n                Version\n                {{selected.version | version}}\n            \n            \n                LastChange\n                \n            \n            Create\n            Change\n            Delete\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Model                                                                                                                            ModelName                Version                                                                {{model.modelname}}                {{model.version | version}}                                         New Model -->                {{(selected.modelname === \\'\\' ? \\'NewModel\\' : selected.modelname)}}                                            Modelname                                                        Version                {{selected.version | version}}                                        LastChange                                        Create            Change            Delete            '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelElement.html":{"url":"classes/ModelElement.html","title":"class - ModelElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ModelerComponent/evaluator/modelElement.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                xml\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, id: string, xml: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/evaluator/modelElement.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        xml\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/evaluator/modelElement.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/evaluator/modelElement.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            xml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/evaluator/modelElement.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ModelElement {\n    constructor(public name: string, public id: string, public xml: string) {\n    }\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelLoaderComponent.html":{"url":"components/ModelLoaderComponent.html","title":"component - ModelLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ModelLoaderComponent/modelloader.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modelloader\n            \n\n\n\n\n            \n                templateUrl\n                ./modelloader.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changesLast7Day\n                            \n                            \n                                    Private\n                                diskModelName\n                            \n                            \n                                    Private\n                                diskModelXml\n                            \n                            \n                                    Private\n                                models\n                            \n                            \n                                    Private\n                                newModel\n                            \n                            \n                                    Private\n                                newModelName\n                            \n                            \n                                    Private\n                                newModelXml\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeListener\n                            \n                            \n                                    Public\n                                createEmpty\n                            \n                            \n                                    Public\n                                createLoaded\n                            \n                            \n                                    Public\n                                createNew\n                            \n                            \n                                    Public\n                                getAllModels\n                            \n                            \n                                    Public\n                                getLatestChanges\n                            \n                            \n                                    Private\n                                initMqtt\n                            \n                            \n                                    Public\n                                loadFromDisk\n                            \n                            \n                                    Public\n                                loadSelected\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadError\n                            \n                            \n                                loadModel\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, apiService: ApiService, router: Router, snackbarService: SnackBarService, mqttService: AdamoMqttService, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        loadError\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loadModel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeListener\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeListener($event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLoaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createNew\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLatestChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatestChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMqtt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMqtt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadFromDisk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadFromDisk(inputValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changesLast7Day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diskModelName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diskModelXml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newModelName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newModelXml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : IPIM_OPTIONS.NEWMODEL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ModelLoaderComponent/modelloader.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { AuthService, ApiService } from '../../services';\nimport { Model } from '../../models/model';\n\nimport { AdamoMqttService } from '../../services/mqtt.service';\nimport { IPIM_OPTIONS } from '../../modelerConfig.service';\nimport { SnackBarService } from '../../services/snackbar.service';\nimport { Router } from '@angular/router';\nimport { NGXLogger } from 'ngx-logger';\n\n@Component({\n  selector: 'modelloader',\n  templateUrl: './modelloader.template.html'\n})\nexport class ModelLoaderComponent {\n  @Output() public loadModel: EventEmitter = new EventEmitter();\n  @Output() public loadError: EventEmitter = new EventEmitter();\n  private selected: any;\n  private newModel: any;\n  private models: any = [];\n  private changesLast7Day: any;\n  private diskModelName: string;\n  private diskModelXml: string;\n  private newModelName: string;\n  //Simple Empty Model ... taken from Camunda\n  private newModelXml: string = IPIM_OPTIONS.NEWMODEL;\n\n  constructor(\n    private authService: AuthService,\n    private apiService: ApiService,\n    private router: Router,\n    private snackbarService: SnackBarService,\n    private mqttService: AdamoMqttService,\n    private logger: NGXLogger\n  ) {}\n\n  //Bereitet dem MQTT vor, damit alle kollaborativen Modelle dort an den ExpressJS weitergeleitet werden\n  private initMqtt() {\n    try {\n\n      const self = this;\n      this.mqttService.getClient().subscribe('administration/model/#');\n      this.mqttService.getClient().on('message', (topic: any, message: any) => {\n        if (topic.startsWith('administration/model')) {\n          self.getAllModels();\n        }\n      });\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  public ngOnInit() {\n\n    let user = this.authService.currentUserValue;\n    this.mqttService.getClient(user.email);\n    // this.initMqtt();\n    this.getAllModels();\n    this.getLatestChanges();\n\n    // this.authService.currentUser.subscribe(\n    // // this.apiService.login_status().subscribe(\n    //   (response: any) => {\n    //     this.logger.debug(response);\n    //     if (response.success) {\n    //       //Only start Working when login was successfull\n    //       this.mqttService.getClient(response.email);\n    //       this.initMqtt();\n    //       this.getAllModels();\n    //       this.getLatestChanges();\n    //     } else {\n    //       this.snackbarService.error(response.status);\n    //       console.error('Error while retrieving session');\n    //       this.router.navigate(['/front-page']);\n    //     }\n    //   },\n    //   (error: any) => {\n    //     console.error(error);\n    //     this.snackbarService.error(\n    //       'Error could not connect to session management'\n    //     );\n    //     this.router.navigate(['/front-page']);\n    //   }\n    // );\n    //defines the structure for a new empty model\n    this.newModel = {\n      mid: '',\n      modelname: '',\n      modelxml: this.newModelXml,\n      version: '',\n      lastchange: ''\n    };\n  }\n\n  //Create an empty model in the database\n  public createEmpty() {\n    this.apiService.modelCreate(this.newModelName, this.newModelXml).subscribe(\n      (response: { status: string }) => {\n        this.snackbarService.success(response.status);\n        console.log(response);\n      },\n      (error: { _body: string }) => {\n        this.snackbarService.error(JSON.parse(error._body).status);\n        console.log(error);\n      }\n    );\n  }\n  //import a model from harddisk to database\n  public createLoaded() {\n    this.apiService\n      .modelCreate(this.diskModelName, this.diskModelXml)\n      .subscribe(\n        (response: { status: string }) => {\n          this.snackbarService.success(response.status);\n          console.log(response);\n        },\n        (error: { _body: string }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        }\n      );\n  }\n\n  //create a new model without anything\n  public createNew() {\n    // const model = new Model();\n    // model.xml = this.newModel.modelxml;\n    // model.name = this.newModel.modelname;\n    // model.id = this.newModel.mid;\n    // model.collaborator = [];\n\n    const model : any = {\n      modelVersion: 1, \n      modelName : this.newModel.modelname, \n      modelXML : IPIM_OPTIONS.NEWMODEL\n    } \n\n    this.loadModel.emit(model);\n  }\n\n  //gets the event when the select file dialog finishes\n  public changeListener($event: any): void {\n    this.loadFromDisk($event.target);\n  }\n\n  //reads a file from disk\n  public loadFromDisk(inputValue: any) {\n    const file: File = inputValue.files[0];\n    const myReader: FileReader = new FileReader();\n\n    //event is called when file is loaded from disk\n    myReader.onloadend = e => {\n      this.diskModelName = file.name.split('.')[0];\n      this.diskModelXml = myReader.result as string;\n      this.createLoaded();\n    };\n\n    //read File as textfile\n    myReader.readAsText(file);\n  }\n\n  //Selected model from list will be loaded as new tabbed modeler\n  public loadSelected() {\n    const model = new Model();\n    model.xml = this.selected.modelxml;\n    model.name = this.selected.modelname;\n    model.id = this.selected.mid;\n    model.version = this.selected.version;\n    model.read = this.selected.read;\n    model.write = this.selected.write;\n    model.collaborator = [];\n\n    //if model has empty data get the model first else directly emit the event\n    if (this.selected.mid !== '') {\n      this.apiService\n        .getModel(this.selected.id, this.selected.modelVersion)\n        .subscribe(\n          (response: any) => {\n            model.xml = response.modelXML;\n            console.info(model);\n            this.loadModel.emit(model);\n          },\n          (error: { _body: string }) => {\n            this.snackbarService.error(JSON.parse(error._body).status);\n            this.loadError.emit(error);\n            console.log('Error Loading', error);\n          }\n        );\n    } else {\n      this.loadModel.emit(model);\n    }\n  }\n\n  //get a list of all models from DB\n  public getAllModels() {\n    this.models = [];\n\n    this.apiService.getAllModels().subscribe(\n      (response: (any)) => {\n        // if (response.success) {\n          this.models = response;\n          this.selected = null;\n        // } else {\n        //   this.snackbarService.error(response._body);\n        // }\n      },\n      (error: { _body: string }) => {\n        this.snackbarService.error(error._body);\n        console.log(error);\n      }\n    );\n  }\n\n  //Get latest changes to models from database\n  public getLatestChanges() {\n    this.models = [];\n\n    this.apiService.getModelsChangedLast7Days().subscribe(\n      (response: { success: any; data: any; _body: string }) => {\n        if (response.success) {\n          this.changesLast7Day = response.data;\n        } else {\n          this.snackbarService.error(response._body);\n        }\n      },\n      (error: { _body: string }) => {\n        this.snackbarService.error(error._body);\n        console.log(error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                \n            \n        \n\n        \n            \n            \n                Model Name\n                Version\n                Permission\n            \n            \n            \n            \n                {{model.modelName}}\n                {{model.modelVersion | version}}\n                \n                         \n                        \n                        \n                \n            \n            \n        \n\n        \n            \n                 Import to DB\n            \n            \n                 Load from DB\n            \n            \n            \n                \n                \n                    \n                         New\n                    \n                \n            \n        \n\n\n        \n\n        \n            Latest Changes:\n            \n                \n                \n                    Model Name\n                    Version\n                    Last Change\n                \n                \n                \n                \n                    {{changedModel.modelname}}\n                    {{changedModel.version | version}}\n                    {{changedModel.lastchange | timestamp2date}}\n                \n                \n            \n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        Model Name                Version                Permission                                                                {{model.modelName}}                {{model.modelVersion | version}}                                                                                                                                                                              Import to DB                                         Load from DB                                                                                                                 New                                                                                    Latest Changes:                                                                Model Name                    Version                    Last Change                                                                                    {{changedModel.modelname}}                    {{changedModel.version | version}}                    {{changedModel.lastchange | timestamp2date}}                                                        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModellerPageComponent.html":{"url":"components/ModellerPageComponent.html","title":"component - ModellerPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModellerPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modellerPage/modellerPage.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./modellerPage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modellerPage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                permission\n                            \n                            \n                                    Public\n                                snackBarMessages\n                            \n                            \n                                    Public\n                                snackbarTextPage\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                xml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initMqtt\n                            \n                            \n                                    Public\n                                loadError\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onExportModel\n                            \n                            \n                                    Public\n                                onLoadedCompletely\n                            \n                            \n                                    Public\n                                onLoadModel\n                            \n                            \n                                    Public\n                                onLoadSubProcess\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, mqttService: AdamoMqttService, snackbarService: SnackBarService, authService: AuthService, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/modellerPage/modellerPage.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initMqtt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initMqtt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onExportModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onExportModel(modelerComponent: ModelerComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelerComponent\n                                    \n                                                ModelerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoadedCompletely\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoadedCompletely()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoadModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoadModel(model: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLoadSubProcess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoadSubProcess(model: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modellerPage/modellerPage.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Model[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"+\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBarMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarMessage[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackbarTextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Angular 2 with BPMN-JS\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            xml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : IPIM_OPTIONS.NEWMODEL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modellerPage/modellerPage.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../services/api.service\";\nimport { Model } from \"../models/model\";\nimport { ModelerComponent } from \"../ModelerComponent/modeler.component\";\nimport { AdamoMqttService } from \"../services/mqtt.service\";\nimport { IPIM_OPTIONS } from \"../modelerConfig.service\";\nimport { SnackBarService } from \"../services/snackbar.service\";\nimport { SnackBarMessage } from \"../services/snackBarMessage\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../services\";\n// import { User, Role } from \"../models\";\nimport { NGXLogger } from \"ngx-logger\";\nimport { UserDto } from \"../models/DTO/UserDto\";\nimport { RoleType } from \"../models/role-type\";\n//Include components for interface and styling\n@Component({\n  templateUrl: \"./modellerPage.component.html\",\n  styleUrls: [\"./modellerPage.component.css\"]\n})\nexport class ModellerPageComponent implements OnInit {\n  public title: string = \"Angular 2 with BPMN-JS\";\n  public model: any = {};\n  public loading: boolean = false;\n  public page: string = \"+\";\n  public permission: number;\n  public xml: string = IPIM_OPTIONS.NEWMODEL;\n  public models: Model[] = [];\n  public snackBarMessages: SnackBarMessage[] = [];\n  public snackbarTextPage: string = \"\";\n  public username: string = \"\";\n  private currentUser: UserDto;\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private mqttService: AdamoMqttService,\n    private snackbarService: SnackBarService,\n    private authService: AuthService,\n    private logger: NGXLogger\n  ) {\n    this.authService.currentUser.subscribe(x => (this.currentUser = x));\n  }\n  get isAdmin() {\n    return this.currentUser && this.currentUser.role === RoleType.Admin;\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n\n  private initMqtt() {\n    try {\n      this.mqttService.getClient().subscribe(\"collaborator/update/+/+\");\n      this.mqttService.getClient().subscribe(\"modelupsert\");\n      this.mqttService.getClient().on(\"message\", (topic: any, message: any) => {\n        console.log(topic);\n        if (topic === \"modelupsert\") {\n          const event = JSON.parse(message);\n          const idAndVersion = this.page.split(\"_\");\n          if (\n            idAndVersion[0] === event.mid.toString() &&\n            idAndVersion[1] === event.version\n          ) {\n            this.page = event.mid + \"_\" + event.newVersion;\n            console.log(this.page);\n          }\n        } else if (topic.startsWith(\"collaborator/update\")) {\n          console.log(topic, JSON.parse(message));\n          console.log(this.models);\n          this.models.forEach(model => {\n            console.log(\n              model.id,\n              parseInt(topic.split(\"/\")[2]),\n              model.version,\n              topic.split(\"/\")[3]\n            );\n            if (\n              model.id === parseInt(topic.split(\"/\")[2]) &&\n              model.version === topic.split(\"/\")[3]\n            ) {\n              model.collaborator = JSON.parse(message);\n            }\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //Initialization after ModellerPageComponent component was loaded\n  public ngOnInit() {\n    this.snackbarService.snackBarMessages$.subscribe(\n      (data: SnackBarMessage[]) => {\n        this.snackBarMessages = data;\n      }\n    );\n\n    this.currentUser = this.authService.currentUserValue;\n    this.logger.debug(\n      `current user is probably null? ${this.currentUser}`,\n      this.currentUser\n    );\n    //   this.authService.currentUser.subscribe(\n    //     (response: any) => {\n    //       this.logger.debug(`response is probably null? ${response}`,response);\n    //       if (response.success) {\n    //         this.username = response.email;\n    //         this.mqttService.getClient(response.email);\n    //         this.initMqtt();\n    //         this.permission = parseInt(response.permission);\n    //       } else {\n    //         this.username = \"\";\n    //         this.snackbarService.error(\"error while retrieving session\");\n    //         this.router.navigate([\"/front-page\"]);\n    //       }\n    //     },\n    //     error => {\n    //       this.username = \"\";\n    //       this.snackbarService.error(\n    //         \"Error could not connect to session management\"\n    //       );\n    //       this.router.navigate([\"/front-page\"]);\n    //     }\n    //   );\n  }\n\n  public remove(index: number): void {\n    console.log(this.models[index]);\n    const modelId =\n      \"MODEL/model_\" + this.models[index].id + \"_\" + this.models[index].version;\n    try {\n      this.mqttService.getClient().unsubscribe(modelId);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    this.models.splice(index, 1);\n    this.page = \"+\";\n  }\n\n  public loadError(error: any): void {\n    if (JSON.parse(error._body).status !== \"no permission to read!\") {\n      this.snackbarService.newSnackBarMessage(\n        \"Error: \" + JSON.parse(error._body).status,\n        \"red\"\n      );\n    }\n  }\n\n  //Show previous versions of a model, if the last one was selected\n  public onLoadModel(model: Model): void {\n    model.collaborator = [];\n    this.loading = true;\n    let exists: boolean;\n    this.models.forEach(element => {\n      if (element.id === model.id && element.version === model.version) {\n        exists = true;\n      }\n    });\n    !exists ? this.models.push(model) : (this.loading = false);\n    this.page = model.id + \"_\" + model.version;\n  }\n\n  public onExportModel(modelerComponent: ModelerComponent): void {\n    this.models[this.models.length - 1].modelerComponent = modelerComponent;\n  }\n\n  public onLoadSubProcess(model: Model): void {\n    console.log(\"loadedModel\", model);\n    this.onLoadModel(model);\n  }\n\n  public onLoadedCompletely(): void {\n    this.loading = false;\n    console.log(\"loading complected\");\n  }\n}\n\n    \n\n    \n        \n\n    \n        ADAMO\n        \n            \n        \n        \n            \n                \n                    \n                        {{model.name + ' v' +(model.version | version) || 'unsaved model'}}\n                        \n                        \n                         1\" style=\"margin-right: 0;\" class=\"badge badge-light\">\n                            {{model.collaborator.length}}\n                        \n                        &times;\n                    \n                    X -->\n                     1 && model.showInfo\"\n                        style=\"position: absolute; top: 100%; z-index: 100\" class=\"panel panel-default\">\n                        \n                            Collaborators\n                        \n                        \n                            \n                                \n                                    {{collaborator}}\n                                \n                            \n                        \n                    \n                \n                +\n                \n                Administration\n                \n                                \n                             -->\n\n            \n            \n                \n                    {{currentUser.username}}\n                    \n                        \n                            Menu\n                        \n                        \n                            \n                                \n                                    Logout\n                                \n                            \n                        \n                    \n                \n            \n            Home (current)\n                    Features\n                    Pricing\n                    Disabled -->\n\n        \n    \n    \n\n                    ADAMO\n            \n                \n                    \n                        {{model.name + ' v' +(model.version | version) || 'unsaved model'}}\n                         \n                        \n                         1\" style=\"margin-right: 0;\" class=\"badge badge-light\">\n                            {{model.collaborator.length}}\n                        \n                        &times;\n                    \n\n                     1 && model.showInfo\"\n                         style=\"position: absolute; top: 100%; z-index: 100\"\n                         class=\"panel panel-default\">\n                        \n                            Collaborators\n                        \n                        \n                            \n                                \n                                    {{collaborator}}\n                                \n                            \n                        \n                    \n                \n                +\n                Administration\n               \n                \n                    {{username}}\n                        \n                               \n                                   Menu\n                               \n                               \n                                   \n                                       \n                                         Logout\n                                       \n                                   \n                               \n                           \n                \n            \n        \n    \n\n-->\n    \n        \n    \n    \n    \n     -->\n    \n        \n            {{message.text}}\n         -->\n         -->\n    \n\n\n    \n\n    \n                \n                    ./modellerPage.component.css\n                \n                .table-hover tbody tr:hover > td {\n    cursor: pointer;\n}\n\n.pointer {\n    cursor: pointer;\n}\n\n.disabled {\n    pointer-events: none;\n    opacity: 0.6;\n}\n\n.userimage {\n    height: 30px; \n    width: 30px; \n    border-radius: 15px;\n}\n\n.centered {\n    text-align: center;\n}\n\n#snackbarPage {\n    visibility: hidden;\n    min-width: 250px;\n    /* margin-left: -125px; */\n    background: transparent;\n    color: #fff;\n    text-align: center;\n    border-radius: 2px;\n    padding: 16px;\n    position: fixed;\n    z-index: 102;\n    /* left: 50%;  */\n    bottom: 30px;\n    font-size: 17px;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%)\n}\n\n.snackbarItem {\n    min-width: 250px;\n    /* margin-left: -125px; */\n    color: #fff;\n    text-align: center;\n    border-radius: 2px;\n    padding: 16px;\n    font-size: 17px;\n    margin-bottom: 25px;\n    border-radius: 25px;\n}\n\n#snackbarPage.show {\n    visibility: visible;\n    /* -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s; */\n    /* animation: fadein 0.5s, fadeout 0.5s 2.5s; */\n}\n\n@-webkit-keyframes fadein {\n    from {bottom: 0; opacity: 0;} \n    to {bottom: 30px; opacity: 1;}\n}\n\n@keyframes fadein {\n    from {bottom: 0; opacity: 0;}\n    to {bottom: 30px; opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n    from {bottom: 30px; opacity: 1;} \n    to {bottom: 0; opacity: 0;}\n}\n\n@keyframes fadeout {\n    from {bottom: 30px; opacity: 1;}\n    to {bottom: 0; opacity: 0;}\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ADAMO                                                                                                            {{model.name + \\' v\\' +(model.version | version) || \\'unsaved model\\'}}                                                                         1\" style=\"margin-right: 0;\" class=\"badge badge-light\">                            {{model.collaborator.length}}                                                ×                                        X -->                     1 && model.showInfo\"                        style=\"position: absolute; top: 100%; z-index: 100\" class=\"panel panel-default\">                                                    Collaborators                                                                                                                                                {{collaborator}}                                                                                                                                        +                                Administration                                                                             -->                                                            {{currentUser.username}}                                                                        Menu                                                                                                                                                Logout                                                                                                                                                Home (current)                    Features                    Pricing                    Disabled -->                                    ADAMO                                                                        {{model.name + \\' v\\' +(model.version | version) || \\'unsaved model\\'}}                                                                          1\" style=\"margin-right: 0;\" class=\"badge badge-light\">                            {{model.collaborator.length}}                                                ×                                         1 && model.showInfo\"                         style=\"position: absolute; top: 100%; z-index: 100\"                         class=\"panel panel-default\">                                                    Collaborators                                                                                                                                                {{collaborator}}                                                                                                                                        +                Administration                                                   {{username}}                                                                                          Menu                                                                                                                                                                                 Logout                                                                                                                                                                            -->                             -->                        {{message.text}}         -->         -->    '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModellerPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionComponent.html":{"url":"components/PermissionComponent.html","title":"component - PermissionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermissionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/PermissionComponent/permission.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                permission-management\n            \n\n\n\n\n            \n                templateUrl\n                ./permission.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                models\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                selectedModel\n                            \n                            \n                                    Private\n                                selectedPermission\n                            \n                            \n                                    Private\n                                selectedRole\n                            \n                            \n                                    Private\n                                selectedUser\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllModels\n                            \n                            \n                                    Public\n                                getAllRoles\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Public\n                                getPermission\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                permissionCreate\n                            \n                            \n                                    Private\n                                permissionDelete\n                            \n                            \n                                    Private\n                                permissionUpdate\n                            \n                            \n                                    Private\n                                selectModel\n                            \n                            \n                                    Private\n                                selectUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, snackbarService: SnackBarService, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/PermissionComponent/permission.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPermission\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermission(user: any, model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            permissionCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    permissionCreate(uid: any, mid: any, role: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            permissionDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    permissionDelete(pid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            permissionUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    permissionUpdate(role: any, pid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectModel(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/PermissionComponent/permission.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedPermission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/PermissionComponent/permission.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ApiService} from '../../services/api.service';\n\nimport {AdamoMqttService} from '../../services/mqtt.service';\nimport { SnackBarService } from '../../services/snackbar.service';\n\n@Component({\n  selector: 'permission-management',\n  templateUrl: './permission.component.html'\n})\n\nexport class PermissionComponent {\n  private selectedUser: any;\n  private selectedPermission: any;\n  private selectedModel: any;\n  private selectedRole: any;\n  private users: any;\n  private roles: any;\n  private models: any;\n\n  constructor(private apiService: ApiService, private snackbarService: SnackBarService, private mqttService: AdamoMqttService) {\n  }\n\n  //selects a user that is maintained in a permission\n  private selectUser(user: any) {\n    this.selectedUser = user;\n    if (this.selectedModel) {\n      this.getPermission(user.uid, this.selectedModel.mid);\n    }\n  }\n\n  //selects a model that is maintained in a permission\n  private selectModel(model: any) {\n    this.selectedModel = model;\n    if (this.selectedUser) {\n      this.getPermission(this.selectedUser.uid, model.mid);\n    }\n  }\n\n  //creates a new permission\n  private permissionCreate(uid: any, mid: any, role: any) {\n    this.apiService.permissionCreate(uid, mid, role)\n      .subscribe((response: { success: any; error: string; }) => {\n          if (response.success) {\n            this.snackbarService.success('Permission successfully created');\n            this.selectedPermission = null;\n            this.selectedUser = null;\n            this.selectedModel = null;\n          } else {\n            this.snackbarService.error(response.error)\n            ;\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //deletes the selected permission\n  private permissionDelete(pid: any) {\n    this.apiService.permissionDelete(pid)\n      .subscribe((response: { success: any; error: string; }) => {\n          if (response.success) {\n            this.snackbarService.success('Permission deleted');\n            this.selectedPermission = null;\n            this.selectedUser = null;\n            this.selectedModel = null;\n          } else {\n            this.snackbarService.error(response.error)\n            ;\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //updates the selected permission\n  private permissionUpdate(role: any, pid: any) {\n    this.apiService.permissionUpdate(role, pid)\n      .subscribe((response: { success: any; error: string; }) => {\n          if (response.success) {\n            this.snackbarService.success('Permission updated');\n            this.selectedPermission = null;\n            this.selectedUser = null;\n            this.selectedModel = null;\n          } else {\n            this.snackbarService.error(response.error)\n            ;\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  public ngOnInit() {\n\n    this.getAllRoles();\n    this.getAllUsers();\n    this.getAllModels();\n    this.mqttService.getClient().subscribe('PERMISSION');\n    const self = this;\n    this.mqttService.getClient().on('message', (topic: any, message: any) => {\n      if (topic === 'PERMISSION') {\n      console.log('PermissonMQTT');\n      self.getAllModels();\n      self.getAllUsers();\n      }\n    });\n  }\n\n  //gets a list of all roles from DB\n  public getAllRoles() {\n    this.roles = [];\n    this.apiService.getAllRoles()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.roles = response.data;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //gets a list of all users from DB\n  public getAllUsers() {\n    this.users = [];\n    this.apiService.getAllUsers()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.users = response.data;\n            this.selectedUser = null;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //gets a list of all models from DB\n  public getAllModels() {\n    this.models = [];\n    this.apiService.getAllModels()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.models = response.data;\n            this.selectedModel = null;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //gets the permission of the selected user and model\n  public getPermission(user: any, model: any) {\n    this.apiService.getPermission(user, model)\n      .subscribe((response: { success: any; data: any; status: string; }) => {\n          if (response.success) {\n            this.selectedPermission = response.data;\n          } else {\n            this.snackbarService.error(response.status);\n          }\n        },\n        (        error: any) => {\n          this.snackbarService.error('Error receiving permissions');\n          console.log(error);\n        });\n  }\n}\n\n    \n\n    \n        \n    \n        Permission\n    \n    \n        \n            \n                \n                \n                    Email\n                \n                \n                \n                \n                    {{user.email}}\n                \n                \n            \n        \n        \n            \n                \n                \n                    ModelName\n                \n                \n                \n                \n                    {{model.modelname}}\n                \n                \n            \n        \n    \n\n\n\n    \n        {{selectedUser.email}} - {{selectedModel.modelname}} {{selectedModel.version | version}}\n    \n    \n        -->\n        \n            \n                Role\n                \n                    {{role.role}}\n                \n            \n            \n                create relation\n            \n        \n        \n            \n                Role\n                \n                    {{role.role}}\n                \n            \n            \n                change relation\n            \n\n            delete\n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Permission                                                                                Email                                                                                    {{user.email}}                                                                                                                            ModelName                                                                                    {{model.modelname}}                                                                    {{selectedUser.email}} - {{selectedModel.modelname}} {{selectedModel.version | version}}                -->                                    Role                                    {{role.role}}                                                        create relation                                                        Role                                    {{role.role}}                                                        change relation                        delete                        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermissionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ProfileComponent/profile.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-management\n            \n\n\n\n\n            \n                templateUrl\n                ./profile.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newProfile\n                            \n                            \n                                    Private\n                                profiles\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllProfiles\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                profileCreate\n                            \n                            \n                                    Public\n                                profileDelete\n                            \n                            \n                                    Public\n                                profileUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, snackbarService: SnackBarService, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ProfileComponent/profile.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllProfiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ProfileComponent/profile.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ProfileComponent/profile.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ProfileComponent/profile.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ProfileComponent/profile.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ProfileComponent/profile.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ProfileComponent/profile.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ProfileComponent/profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ProfileComponent/profile.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\n\nimport { AdamoMqttService } from '../../services/mqtt.service';\nimport { SnackBarService } from '../../services/snackbar.service';\n\n@Component({\n  selector: 'profile-management',\n  templateUrl: './profile.template.html'\n})\nexport class ProfileComponent {\n  private selected: any;\n  private newProfile: any;\n  private profiles: any;\n\n  constructor(\n    private apiService: ApiService,\n    private snackbarService: SnackBarService,\n    private mqttService: AdamoMqttService\n  ) {}\n\n  public ngOnInit() {\n    //defines the structure for a new empty profile\n    this.newProfile = {\n      rid: '',\n      profile: '',\n      read: '',\n      write: '',\n      admin: ''\n    };\n\n    this.getAllProfiles();\n\n    this.mqttService.getClient().subscribe('administrations/Profile');\n    const i = this;\n    this.mqttService.getClient().on('message', (topic: any, message: any) => {\n      if (topic.startsWith('administrations/Profile')) {\n        console.log('Test from remote:' + message.toString());\n        i.getAllProfiles();\n      }\n    });\n  }\n\n  //gets a list of all profiles from DB\n  public getAllProfiles() {\n    this.profiles = [];\n\n    this.apiService.getAllProfiles().subscribe(\n      (response: { success: any; data: any; _body: string }) => {\n        if (response.success) {\n          this.profiles = response.data;\n          this.selected = null;\n        } else {\n          this.snackbarService.error(response._body);\n        }\n      },\n      (error: { _body: string }) => {\n        this.snackbarService.error(JSON.parse(error._body).status);\n        console.log(error);\n      }\n    );\n  }\n\n  //updates the selected profile\n  public profileUpdate() {\n    this.apiService\n      .profileUpdate(\n        this.selected.rid,\n        this.selected.profile,\n        this.selected.read,\n        this.selected.write,\n        this.selected.admin\n      )\n      .subscribe(\n        (response: { success: any; status: string; _body: string }) => {\n          if (response.success) {\n            this.mqttService\n              .getClient()\n              .publish('administrations/Profile', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (error: { _body: string }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        }\n      );\n  }\n\n  //creates a new profile\n  public profileCreate() {\n    this.apiService\n      .profileCreate(\n        this.selected.profile,\n        this.selected.read,\n        this.selected.write,\n        this.selected.admin\n      )\n      .subscribe(\n        (response: { success: any; status: string; _body: string }) => {\n          if (response.success) {\n            this.mqttService\n              .getClient()\n              .publish('administrations/Profile', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (error: { _body: string }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        }\n      );\n  }\n\n  //deletes the selected profile\n  public profileDelete() {\n    this.apiService.profileDelete(this.selected.rid).subscribe(\n      (response: { success: any; status: string; _body: string }) => {\n        if (response.success) {\n          this.mqttService\n            .getClient()\n            .publish('administrations/Profile', JSON.stringify({}));\n          this.snackbarService.success(response.status);\n        } else {\n          this.snackbarService.error(response._body);\n        }\n      },\n      (error: { _body: string }) => {\n        this.snackbarService.error(JSON.parse(error._body).status);\n        console.log(error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        Profile\n    \n    \n        \n\n\n\n            \n            \n                \n            \n        \n\n        \n            \n            \n                ProfileID\n                Profilename\n            \n            \n            \n            \n                {{profile.upid}}\n                {{profile.profile}}\n            \n            \n        \n        \n         New Profile\n    \n\n\n\n    \n        {{(selected.profilename === '' ? 'NewProfile' : selected.profilename)}}\n    \n    \n\n\n        \n            \n                Profilename\n                \n            \n\n            \n                Read\n                \n            \n            \n                Write\n                \n            \n            \n                Admin\n                \n            \n            Create\n            Change\n            Delete\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profile                                                                                                                            ProfileID                Profilename                                                                {{profile.upid}}                {{profile.profile}}                                                 New Profile                {{(selected.profilename === \\'\\' ? \\'NewProfile\\' : selected.profilename)}}                                            Profilename                                                        Read                                                        Write                                                        Admin                                        Create            Change            Delete            '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoleComponent.html":{"url":"components/RoleComponent.html","title":"component - RoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/RoleComponent/role.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                role-management\n            \n\n\n\n\n            \n                templateUrl\n                ./role.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllRoles\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                roleCreate\n                            \n                            \n                                    Public\n                                roleDelete\n                            \n                            \n                                    Public\n                                roleUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, snackbarService: SnackBarService, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/RoleComponent/role.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/RoleComponent/role.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/RoleComponent/role.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            roleCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roleCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/RoleComponent/role.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            roleDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roleDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/RoleComponent/role.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            roleUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roleUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/RoleComponent/role.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/RoleComponent/role.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/RoleComponent/role.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/RoleComponent/role.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ApiService} from '../../services/api.service';\n\nimport {AdamoMqttService} from '../../services/mqtt.service';\nimport { SnackBarService } from '../../services/snackbar.service';\n\n@Component({\n  selector: 'role-management',\n  templateUrl: './role.template.html'\n})\n\nexport class RoleComponent {\n  private selected: any;\n  private newRole: any;\n  private roles: any;\n\n  constructor(private apiService: ApiService, private snackbarService: SnackBarService, private mqttService: AdamoMqttService) {\n  }\n\n  public ngOnInit() {\n    //defines the structure for a new empty role\n    this.newRole = {\n      rid: '',\n      role: '',\n      read: '',\n      write: '',\n      admin: ''\n    };\n\n    this.getAllRoles();\n\n    this.mqttService.getClient().subscribe('administrations/role');\n    const i = this;\n    this.mqttService.getClient().on('message', (topic: any, message: any) => {\n      if (topic.startsWith('administrations/role')) {\n        console.log('Test from remote:' + message.toString());\n        i.getAllRoles();\n      }\n    });\n  }\n\n  //gets a list of all roles from DB\n  public getAllRoles() {\n    this.roles = [];\n\n    this.apiService.getAllRoles()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.roles = response.data;\n            this.selected = null;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //updates the selected role\n  public roleUpdate() {\n    this.apiService.roleUpdate(this.selected.rid, this.selected.role, this.selected.read, this.selected.write, this.selected.admin)\n      .subscribe((response: { success: any; status: string; _body: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administrations/role', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //creates a new role\n  public roleCreate() {\n    this.apiService.roleCreate(this.selected.role, this.selected.read, this.selected.write, this.selected.admin)\n      .subscribe((response: { success: any; status: string; _body: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administrations/role', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          } else {\n            this.snackbarService.error(response.status);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  //deletes the selected role\n  public roleDelete() {\n    this.apiService.roleDelete(this.selected.rid)\n      .subscribe((response: { success: any; status: string; _body: string; }) => {\n          console.log(response);\n          if (response.success) {\n            this.mqttService.getClient().publish('administrations/role', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n          } else {\n            this.snackbarService.error(response.toString());\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n}\n\n    \n\n    \n        \n    \n        Role\n    \n    \n        \n\n\n\n            \n            \n                \n            \n        \n\n        \n            \n            \n                RoleID\n                Rolename\n            \n            \n            \n            \n                {{role.rid}}\n                {{role.role}}\n            \n            \n        \n        \n         New Role\n    \n\n\n\n    \n        {{(selected.rolename === '' ? 'NewRole' : selected.rolename)}}\n    \n    \n\n\n        \n\n                \n                    Rolename\n                    \n                \n\n                \n                    Read\n                    \n                \n                \n                    Write\n                    \n                \n                \n                    Admin\n                    \n                \n\n             \n                Create\n                Change\n                Delete\n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Role                                                                                                                            RoleID                Rolename                                                                {{role.rid}}                {{role.role}}                                                 New Role                {{(selected.rolename === \\'\\' ? \\'NewRole\\' : selected.rolename)}}                                                    Rolename                                                                        Read                                                                        Write                                                                        Admin                                                                 Create                Change                Delete                        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/role.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/role.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from \"@angular/core\";\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable, Subject, from } from \"rxjs\";\nimport { AuthService, UserService } from \"../services\";\nimport { first } from \"rxjs/operators\";\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n\n  public canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | boolean {\n    // var t: boolean = true;\n    // if (t) return true;   //Uncomment to turn off AuthGuard\n\n    // const user = this.apiService.decode();\n    const user = this.authService.currentUserValue;\n\n    if (user.role === route.data.role) {\n      return true;\n    }\n\n    // navigate to not found page\n    this.router.navigate([\"/404\"]);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveModal.html":{"url":"components/SaveModal.html","title":"component - SaveModal","body":"\n                   \n\n\n\n\n\n  Components\n  SaveModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/SaveModal/SaveModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                save-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./SaveModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alsoExists\n                            \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                root\n                            \n                            \n                                    Public\n                                version1\n                            \n                            \n                                    Public\n                                version2\n                            \n                            \n                                    Public\n                                version3\n                            \n                            \n                                    Public\n                                version4\n                            \n                            \n                                    Public\n                                xml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                open\n                            \n                            \n                                    Public\n                                opened\n                            \n                            \n                                    Public\n                                saveSubProcesses\n                            \n                            \n                                    Public\n                                saveSuperVersion\n                            \n                            \n                                    Public\n                                saveWithVersion\n                            \n                            \n                                    Public\n                                setModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            accept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    accept()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveSubProcesses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveSubProcesses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveSuperVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveSuperVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveWithVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveWithVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setModel(model: Model, xml: string, apiService: ApiService, root: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    xml\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiService\n                                    \n                                                ApiService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alsoExists\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Model\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            xml\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SaveModal/SaveModal.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Component, ViewChild} from '@angular/core';\nimport {BsModalComponent} from 'ng2-bs3-modal';\nimport {Model} from '../../../models/model';\nimport {ApiService} from '../../../services/api.service';\nimport {Http} from '@angular/http';\n\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nconst bigInt = require('big-integer');\n\n@Component({\n  selector: 'save-modal',\n  templateUrl: './SaveModal.html'\n})\n\n@Injectable()\nexport class SaveModal  {\n  closeResult: string;\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n\n  public apiService: ApiService;\n  public root: any;\n  public xml: string;\n  public model: Model;\n  public version1: number;\n  public version2: number;\n  public version3: number;\n  public version4: number;\n  public alsoExists: boolean = false;\n\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n\n  public setModel(model: Model, xml: string, apiService: ApiService, root: any) {\n    this.root = root;\n    this.xml = xml;\n    this.model = model;\n    this.apiService = apiService;\n    this.version1 = bigInt(model.version).shiftRight(48);\n    this.version2 = bigInt(model.version).and(bigInt('0000FFFF00000000', 16)).shiftRight(32);\n    this.version3 = bigInt(model.version).and(bigInt('00000000FFFF0000', 16)).shiftRight(16);\n    this.version4 = bigInt(model.version).and(bigInt('000000000000FFFF', 16));\n  }\n  public saveSuperVersion() {\n    this.apiService.modelUpsert(this.model.id, this.model.name, this.xml, this.model.version)\n    .subscribe((response: { status: string; }) => {\n      if (response.status === 'Next Version already exists') {\n        this.alsoExists = true;\n        return;\n      }\n        this.alsoExists = false;\n        console.log(response);\n        this.saveSubProcesses();\n        // this.modal.close();\n      },\n      (      error: any) => {\n        console.log(error);\n      });\n  }\n  public saveWithVersion() {\n    this.model.version =\n      bigInt(this.version1).shiftLeft(48) +\n      bigInt(this.version2).shiftLeft(32) +\n      bigInt(this.version3).shiftLeft(16) +\n      bigInt(this.version4);\n    this.apiService.modelUpsert(this.model.id, this.model.name, this.xml, this.model.version)\n    .subscribe((response: { status: string; }) => {\n      if (response.status === 'Next Version already exists') {\n        this.alsoExists = true;\n        return;\n      }\n        this.alsoExists = false;\n        console.log(response);\n        this.saveSubProcesses();\n        // this.modal.close();\n      },\n      (      error: any) => {\n        console.log(error);\n      });\n  }\n  //save all active subprocesses for this model/version\n  public saveSubProcesses() {\n  const partmodels = this.root.returnSubProcessList(this.root.lookup.ELEMENTREGISTRY);\n    partmodels.forEach((pmid: string) => {\n    this.apiService.partModelCreate(this.root.modelId.split('_')[1], this.root.modelId.split('_')[2], pmid)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n    });\n  }\n\n  public opened() {\n    console.log('SaveModal opened');\n  }\n\n  private dismissed() {\n    console.log('SaveModal dismissed');\n  }\n\n  private closed() {\n    console.log('SaveModal closed');\n  }\n\n  public cancel(): void {\n    // this.dismiss();\n  }\n\n  public accept(): void {\n    console.log('VariableModal accept');\n  }\n}\n    \n\n    \n        \n    \n        Save Model\n    \n    \n        \n            Next Version would already exist\n            Save it with newest version\n            or save it with given version\n        \n        .\n        .\n        .\n        \n\n        \n            given version also exists\n        \n    \n    \n        \n            Save with given version\n        \n        \n            Save as newest version\n        \n    \n -->\n\n        \n          \n          \n            \n            \n              Terms\n              &times;\n            \n            \n            \n            \n              Please define a new term for all elements:\n              \n                \n                \n                \n              \n              \n            \n            \n            \n            \n              Set Term\n                  \n          \n        \n        -->\n      \n      \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Save Model                            Next Version would already exist            Save it with newest version            or save it with given version                .        .        .                            given version also exists                                    Save with given version                            Save as newest version             -->                                                                  Terms              ×                                                              Please define a new term for all elements:                                                                                                                                                        Set Term                                            -->            '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnackBarMessage.html":{"url":"classes/SnackBarMessage.html","title":"class - SnackBarMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnackBarMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snackBarMessage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/snackBarMessage.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/snackBarMessage.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/snackBarMessage.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SnackBarMessage {\n    constructor(public text: string, public color: string) {\n    }\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackBarService.html":{"url":"injectables/SnackBarService.html","title":"injectable - SnackBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/snackbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                snackBarMessageArray\n                            \n                            \n                                    Private\n                                snackBarMessages\n                            \n                            \n                                    Public\n                                snackBarMessages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                newSnackBarMessage\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            newSnackBarMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newSnackBarMessage(text: string, color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            success\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    success(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/snackbar.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            snackBarMessageArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarMessage[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/snackbar.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            snackBarMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/snackbar.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBarMessages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.snackBarMessages.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/snackbar.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Observable} from 'rxjs';\nimport { SnackBarMessage } from './snackBarMessage';\nimport { IPIM_OPTIONS } from '../modelerConfig.service';\n\n@Injectable()\nexport class SnackBarService {\n  private snackBarMessages: Subject = new Subject();\n  private snackBarMessageArray: SnackBarMessage[] = [];\n  public snackBarMessages$: Observable = this.snackBarMessages.asObservable();\n\n  public newSnackBarMessage(text: string, color: string) {\n    //get snackbar HTML element\n    const snackBarHTML = document.getElementById('snackbarPage');\n    if (snackBarHTML) {\n        this.snackBarMessageArray.push(new SnackBarMessage(text, color));\n        this.snackBarMessages.next(this.snackBarMessageArray);\n\n        //show it for some seconds\n        snackBarHTML.className = 'show';\n        setTimeout(() => {\n            //delete first element after timer\n            this.snackBarMessageArray.shift();\n            //if there is nothing to show anymore then hide snackbar\n            if (this.snackBarMessageArray.length \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreService.html":{"url":"injectables/StoreService.html","title":"injectable - StoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/builder/store.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                completedTodos\n                            \n                            \n                                    Private\n                                entrys\n                            \n                            \n                                    Private\n                                remainingEntries\n                            \n                            \n                                    Public\n                                todos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _clearCache\n                            \n                            \n                                    Private\n                                _findByUid\n                            \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                allCompleted\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getCompleted\n                            \n                            \n                                    Public\n                                getRemaining\n                            \n                            \n                                    Public\n                                persist\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                removeCompleted\n                            \n                            \n                                    Public\n                                setAllTo\n                            \n                            \n                                    Public\n                                toggleCompletion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/builder/store.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _clearCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _clearCache()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _findByUid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _findByUid(uid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            allCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    allCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(state: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRemaining\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRemaining()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            persist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    persist()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(uid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAllTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllTo(completed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    completed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleCompletion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleCompletion(uid: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/builder/store.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            completedTodos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/store.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entrys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Entry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/store.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            remainingEntries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/store.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/builder/store.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Entry } from './model/entry';\n\n@Injectable()\nexport class StoreService {\n  private entrys : Entry []= [];\n  public todos: any;\n  private remainingEntries : any ;\n  private completedTodos : any;\n  constructor() {\n    const persistedTodos = JSON.parse(localStorage.getItem('angular2-todos')) || [];\n\n    this.todos = persistedTodos.map((todo : any) => {\n      const ret = new Entry(todo.title);\n      ret.selected = todo.completed;\n      ret.uid = todo.uid;\n      return ret;\n    });\n  }\n\n  public get(state : any) {\n    return this.todos.filter((todo : any) => todo.completed === state.completed);\n  }\n\n  public allCompleted() {\n    return this.todos.length === this.getCompleted().length;\n  }\n\n  public setAllTo(completed : boolean) {\n    this.todos.forEach((todo : any) => todo.completed = completed);\n    this.persist();\n  }\n\n  public removeCompleted() {\n    this.todos = this.get({ completed: false });\n    this.persist();\n  }\n\n  public getRemaining() {\n    if (!this.remainingEntries) {\n      this.remainingEntries = this.get({ completed: false });\n    }\n    return this.remainingEntries;\n  }\n\n  public getCompleted() {\n    if (!this.completedTodos) {\n      this.completedTodos = this.get({ completed: true });\n    }\n    return this.completedTodos;\n  }\n\n  public toggleCompletion(uid : any) {\n    const todo = this._findByUid(uid);\n\n    if (todo) {\n      todo.completed = !todo.completed;\n      this.persist();\n    }\n  }\n\n  public remove(uid : any) {\n    const todo = this._findByUid(uid);\n\n    if (todo) {\n      this.todos.splice(this.todos.indexOf(todo), 1);\n      this.persist();\n    }\n  }\n\n  public add(title: string) {\n    this.todos.push(new Entry(title));\n    this.persist();\n  }\n\n  public persist() {\n    this._clearCache();\n    localStorage.setItem('angular2-todos', JSON.stringify(this.todos));\n  }\n\n  private _findByUid(uid : any) {\n    return this.todos.find((todo: any) => todo.uid === uid);\n  }\n\n  private _clearCache() {\n    this.completedTodos = null;\n    this.remainingEntries = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubProcessModal.html":{"url":"components/SubProcessModal.html","title":"component - SubProcessModal","body":"\n                   \n\n\n\n\n\n  Components\n  SubProcessModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                subprocess-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./SubProcessModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                firstSubprocess\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                modeler\n                            \n                            \n                                    Public\n                                models\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Public\n                                root\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                selectedModel\n                            \n                            \n                                    Public\n                                selectedModelName\n                            \n                            \n                                    Public\n                                subProcessList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Protected\n                                fillModal\n                            \n                            \n                                    Private\n                                fillSubprocessModal\n                            \n                            \n                                    Public\n                                getAllModels\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Public\n                                openSubProcessModel\n                            \n                            \n                                    Public\n                                selectionChanged\n                            \n                            \n                                    Public\n                                setProps\n                            \n                            \n                                    Private\n                                writeSubprocessModalValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fillSubprocessModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillSubprocessModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllModels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openSubProcessModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSubProcessModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectionChanged(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProps(modeler: any, subProcessList: any, root: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modeler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subProcessList\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeSubprocessModalValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeSubprocessModalValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstSubprocess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedModelName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subProcessList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input , ViewChild } from '@angular/core';\nimport { BsModalComponent } from 'ng2-bs3-modal';\nimport { Router } from '@angular/router';\nimport { Model } from '../../../models/model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'subprocess-modal',\n  templateUrl: './SubProcessModal.html'\n})\n\nexport class SubProcessModal {\n  closeResult: string;\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n  public modeler: any;\n  public models: any = [];\n  public selectedModelName: any;\n\n  public subProcessList: any;\n  public firstSubprocess: any;\n  public selectedModel: any;\n\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = '';\n\n  public  animation: boolean = true;\n  public  keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n  public root: any;\n  public loading: boolean = true;\n\n  public setProps(modeler: any, subProcessList: any, root: any) {\n     this.subProcessList = subProcessList;\n    this.modeler = modeler;\n    this.root = root;\n    if (subProcessList.length > 0) {this.firstSubprocess = subProcessList[0]; } else {this.firstSubprocess = ' '; }\n    this.loading = true;\n    this.getAllModels();\n  }\n\n  //get a list of all possible processes of models in database to reference\n  public getAllModels() {\n    this.root.apiService.getAllModels()\n      .subscribe((response: any) => {\n          this.loading = false;\n          if (response.success) {\n            this.models = response.data;\n            this.models.forEach((element: any) => {\n              if (element.mid.toString() === this.firstSubprocess) {\n                this.selectedModelName = element.modelname;\n                this.selectedModel = element;\n              }\n            });\n\n          } else {\n            this.root.snackbarService.error('Could not get permissons');\n            console.log(response._body);\n          }\n        },\n        (error: any) => {\n          this.loading = false;\n          this.root.snackbarService.error(JSON.parse(error._body).status);\n          console.log(error);\n        });\n  }\n\n  private opened() {\n    console.log('SubprocessModal Opended');\n  }\n\n  protected fillModal(): void {\n    console.log(this.constructor.name + ' fillModal');\n  }\n\n  private dismissed() {\n    console.log('SubprocessModal dismissed');\n  }\n\n  private closed() {\n    console.log('SubprocessModal closed');\n  }\n\n  public cancel(): void {\n    // this.dismiss();\n  }\n\n  private  fillSubprocessModal() {\n    //take subprocess list and display first item, warn if more than one is selected\n    const terms = this.subProcessList;\n\n    if (terms.length > 1) {window.alert('Attention! Selected Elements already have different SubProcesses!'); }\n\n  }\n\n  private writeSubprocessModalValues() {\n    const firstSubprocessString = this.selectedModel.mid.toString();\n    console.log(firstSubprocessString);\n    //get moddle Object\n    const moddle = this.modeler.get('moddle');\n    //Objekte vom this.modeler holen um nicht immer so viel tippen zu müssen.\n    const elements = this.modeler.get('selection').get();\n    //Alle Elemente durchlaufen um Variablen zu finden\n    elements.forEach((element: any) => {\n      //Prüfen ob erweiterte Eigenschaften für das Objekt existieren\n      if (typeof element.businessObject.extensionElements !== 'undefined') {\n        //Wenn vorhandne die Elemente auslesen\n        const extras = element.businessObject.extensionElements.get('values');\n        if (extras[0].values) {\n        //Schleife über alle Elemente\n          let found = false;\n          for (let i = 0; i  {\n            model.xml = response.data.modelxml;\n            console.info(model);\n            //emit event for new model\n            this.root.loadSubProcess.emit(model);\n            //remove Overlay for user\n            this.root.hideOverlay();\n            this.root.snackbarService.newSnackBarMessage('successfully loaded', 'limegreen');\n          },\n          (error: any) => {\n            //remove Overlay in any case\n            this.root.hideOverlay();\n            this.root.snackbarService.newSnackBarMessage('Error: ' + JSON.parse(error._body).status, 'red');\n            console.log(error);\n          });\n\n    } else {\n      window.alert('Noting selected!');\n      return;\n    }\n    // this.modal.close();\n  }\n}\n\n    \n\n    \n        \n    \n      IPIM SubProcess\n    \n    \n      Please wait loading...\n      Please define a new subprocess ID for all selected Subprocesses!\n        \n        \n        Currently selected:\n        \n        \n\n        \n          \n              \n              \n                  \n                  \n                      \n                  \n              \n\n              \n                  \n                  \n                      Model Name\n                      Version\n                  \n                  \n                  \n                  \n                      {{model.modelname}}\n                      {{model.version | version}}\n                  \n                  \n              \n            \n        \n        \n        Open Model\n      \n      \n    \n    \n        Set Subprocess\n    \n   -->\n  \n      \n        \n        \n          \n          \n            Terms\n            &times;\n          \n          \n          \n          \n            Please define a new term for all elements:\n            \n              \n              \n              \n            \n            \n          \n          \n          \n          \n            Set Term\n                \n        \n      \n      -->\n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          IPIM SubProcess              Please wait loading...      Please define a new subprocess ID for all selected Subprocesses!                        Currently selected:                                                                                                                                                                                                                                Model Name                      Version                                                                                              {{model.modelname}}                      {{model.version | version}}                                                                                      Open Model                            Set Subprocess       -->                                                        Terms            ×                                                    Please define a new term for all elements:                                                                                                                                  Set Term                                    -->        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubProcessModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermModal.html":{"url":"components/TermModal.html","title":"component - TermModal","body":"\n                   \n\n\n\n\n\n  Components\n  TermModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/TermModal/TermModal.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                term-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./TermModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                createPropertyElement\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Protected\n                                fillModal\n                            \n                            \n                                    Private\n                                fillTermModal\n                            \n                            \n                                    Private\n                                getFirstTerm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                passBack\n                            \n                            \n                                    Private\n                                writeTermModalValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modeler\n                            \n                            \n                                termlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                passEntry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modeler\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        termlist\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        passEntry\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createPropertyElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPropertyElement(element, moddle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moddle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fillTermModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillTermModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstTerm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstTerm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passBack\n                        \n                        \n                    \n                \n            \n            \n                \npassBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeTermModalValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeTermModalValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/TermModal/TermModal.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  TemplateRef,\n  ContentChild,\n  OnInit,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\n\nimport { NGXLogger } from \"ngx-logger\";\n\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { BsModalRef } from \"ngx-bootstrap\";\n\n@Component({\n  selector: \"term-modal\",\n  templateUrl: './TermModal.html'\n})\nexport class TermModal implements OnInit {\n  @Input() modeler: any;\n  @Input() termlist: any;\n  @Output() passEntry: EventEmitter = new EventEmitter();\n  \n  passBack() {\n    // this.passEntry.emit(this.user);\n    }\n  // public modeler: any;\n  // public termList: any;\n  // public firstTerm: any;\n  // public root: any;\n\n  // closeResult: string;\n  constructor(private modalService: NgbModal, private logger: NGXLogger) {}\n\n  title: string;\n  // constructor(public bsModalRef: BsModalRef ) {}\n  ngOnInit() { \n\n  }\n\n  // open(content) {\n  //   this.logger.debug(`Open Modal! ${this.termModalTermplate}`);\n  //   this.modalService\n  //     .open(this.termModalTermplate, {\n  //       ariaLabelledBy: \"modal-basic-title\",\n  //       backdropClass: \"light-blue-backdrop\",\n  //       size: \"lg\"\n  //     })\n  //     .result.then(\n  //       result => {\n  //         this.logger.debug(\"termmodal closed\");\n  //         this.closeResult = `Closed with: ${result}`;\n  //       },\n  //       reason => {\n  //         this.logger.debug(`Dismissed USING!${this.getDismissReason(reason)}`);\n  //         this.closeResult = `Dismissed USING!${this.getDismissReason(reason)}`;\n  //       }\n  //     );\n  // }\n  // private getDismissReason(reason: any): string {\n  //   if (reason === ModalDismissReasons.ESC) {\n  //     return \"by pressing ESC\";\n  //   } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n  //     return \"by clicking on a backdrop\";\n  //   } else {\n  //     return `with: ${reason}`;\n  //   }\n  // }\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = \"\";\n\n  public animation: boolean = true;\n  public keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n\n  // public setProps(modeler: any, termList: any, root: any) {\n  //   this.termList = termList;\n  //   this.modeler = modeler;\n  //   this.root = root;\n  //   //if more than one term is selected take only the first\n  //   if (termList.length > 0) {\n  //     this.firstTerm = termList[0];\n  //   } else {\n  //     this.firstTerm = \" \";\n  //   }\n  // }\n\n  private opened() {\n    console.log(\"TermModal Opended\");\n    // this.fillTermModal();\n  }\n\n  protected fillModal(): void {\n    console.log(this.constructor.name + \" fillModal\");\n  }\n\n  private dismissed() {\n    console.log(\"TermModal dismissed\");\n  }\n\n  private closed() {\n    console.log(\"TermModal closed\");\n  }\n\n  public cancel(): void {\n    // this.dismiss();\n  }\n\n  //get first selected term, show warning if more are selected\n  private fillTermModal() {\n    const terms = this.modeler.getTermList();\n    if (terms.length > 1) {\n      window.alert(\n        \"Attention! Selected Elements already have different Terms!\"\n      );\n    }\n  }\n\n  private getFirstTerm(){\n    return this.modeler.getTermList()[0];\n  }\n\n  private writeTermModalValues() {\n    //get moddle Object\n    const moddle = this.modeler.getModeler().get(\"moddle\");\n    //Objekte vom this.modeler holen um nicht immer so viel tippen zu müssen.\n    const elements = this.modeler.getModeler().get(\"selection\").get();\n    //Alle Elemente durchlaufen um Variablen zu finden\n    elements.forEach((element: any) => {\n      //Prüfen ob erweiterte Eigenschaften für das Objekt existieren\n      if (typeof element.businessObject.extensionElements !== \"undefined\") {\n        //Wenn vorhandne die Elemente auslesen\n        const extras = element.businessObject.extensionElements.get(\"values\");\n        if (extras[0].values) {\n          //Schleife über alle Elemente\n          for (let i = 0; i \n    \n\n    \n        \n  Terms\n  \n    &times;\n  \n\n\n  Please define a new term for all elements:\n  \n    \n     -->\n    \n  \n\n  \n    Save changes\n    Close -->\n    \n      Save\n      Set Term -->\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Terms      ×    Please define a new term for all elements:           -->            Save changes    Close -->          Save      Set Term -->      '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TermModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Timestamp2Date.html":{"url":"pipes/Timestamp2Date.html","title":"pipe - Timestamp2Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Timestamp2Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/timestamp.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timestamp2date\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/timestamp.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'timestamp2date',\n  pure: false\n})\n\n/*  converts a postgress timestamp to local date time string*/\nexport class Timestamp2Date implements PipeTransform {\n\n  public transform(value: any, args?: any): any {\n\n    const date = new Date(value);\n\n    const datestring = ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n\n    const timestring = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2);\n\n    return datestring + ' ' + timestring;\n  }\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPayloadDto.html":{"url":"classes/TokenPayloadDto.html","title":"class - TokenPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DTO/TokenPayloadDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/DTO/TokenPayloadDto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/TokenPayloadDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiresIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/TokenPayloadDto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TokenPayloadDto {\n\n    expiresIn: number;\n\n\n    accessToken: string;\n\n    constructor(data: { expiresIn: number; accessToken: string; }) {\n        this.expiresIn = data.expiresIn;\n        this.accessToken = data.accessToken;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsageModal.html":{"url":"components/UsageModal.html","title":"component - UsageModal","body":"\n                   \n\n\n\n\n\n  Components\n  UsageModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/UsageModal/UsageModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                usage-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./UsageModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                modeler\n                            \n                            \n                                    Public\n                                noReferences\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Public\n                                referencingModels\n                            \n                            \n                                    Public\n                                root\n                            \n                            \n                                    Public\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                closeModal\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Protected\n                                fillModal\n                            \n                            \n                                    Private\n                                fillUsageModal\n                            \n                            \n                                    Private\n                                getSubPartModelsFromDB\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Public\n                                setProps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fillUsageModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillUsageModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSubPartModelsFromDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubPartModelsFromDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProps(modeler: any, root: any, apiService: ApiService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modeler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiService\n                                    \n                                                ApiService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noReferences\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencingModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/UsageModal/UsageModal.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input , ViewChild } from '@angular/core';\nimport { BsModalComponent } from 'ng2-bs3-modal/';\nimport { Router } from '@angular/router';\nimport { Model } from '../../../models/model';\nimport { ApiService } from '../../../services/api.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'usage-modal',\n  templateUrl: './UsageModal.html'\n})\n\nexport class UsageModal {\n\n  closeResult: string;\n  constructor(private modalService: NgbModal) {}\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n  public modeler: any;\n\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = '';\n\n  public  animation: boolean = true;\n  public  keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n  public root: any;\n  public referencingModels: any[] = [];  //[{mid: '2', modelname: 'Testname', version: 'test'}];\n  public noReferences: boolean = true;\n  public apiService: ApiService;\n  public loading: boolean;\n\n  public setProps(modeler: any, root: any, apiService: ApiService) {\n    this.modeler = modeler;\n    this.root = root;\n    this.apiService = apiService;\n    this.selected = '';\n    this.referencingModels = [];\n    this.loading = true;\n    this.getSubPartModelsFromDB();\n  }\n\n  //get a list of all processes that refernce this model!\n  private getSubPartModelsFromDB() {\n    this.apiService.getPartModelUsage(this.root.modelId.split('_')[1])\n    .subscribe((response: { data: any[]; }) => {\n      this.referencingModels = response.data;\n      console.log('Received referencing Processes', response.data);\n      this.loading = false;\n    },\n      (    error: any) => {\n      this.root.snackbarService.newSnackBarMessage(error);\n      console.log(error);\n    });\n  }\n\n  private opened() {\n    console.log('UsageModal Opended');\n  }\n\n  protected fillModal(): void {\n    console.log(this.constructor.name + ' fillModal');\n  }\n\n  private dismissed() {\n    console.log('UsageModal dismissed');\n  }\n\n  private closed() {\n    console.log('UsageModal closed');\n  }\n\n  public cancel(): void {\n    // this.dismiss();\n  }\n\n  private  fillUsageModal() {\n    console.log('UsageModal fill');\n  }\n\n  private closeModal() {\n    // this.modal.close();\n  }\n}\n\n    \n\n    \n        \n    \n      IPIM Usage\n    \n    \n      The following processes reference the newest version of this model as a subprocess: \n      \n      checking database....\n      No processes reference this model\n       0 && loading == false)\" class=\"input-group\">\n        \n        \n            \n        \n      \n      \n       0 && loading == false)\" class=\"table table-striped table-bordered table-hover\">\n        \n        \n            Model Name\n            Version\n        \n        \n        \n        \n                {{model.modelname}}\n                {{model.version | version}}\n        \n        \n      \n      \n      \n    \n    \n        Close\n    \n   -->\n  \n      \n        \n        \n          \n          \n            Terms\n            &times;\n          \n          \n          \n          \n            Please define a new term for all elements:\n            \n              \n              \n              \n            \n            \n          \n          \n          \n          \n            Set Term\n                \n        \n      \n      -->\n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          IPIM Usage              The following processes reference the newest version of this model as a subprocess:             checking database....      No processes reference this model       0 && loading == false)\" class=\"input-group\">                                                       0 && loading == false)\" class=\"table table-striped table-bordered table-hover\">                            Model Name            Version                                                {{model.modelname}}                {{model.version | version}}                                                  Close       -->                                                        Terms            ×                                                    Please define a new term for all elements:                                                                                                                                  Set Term                                    -->        '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsageModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/UserComponent/user.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-management\n            \n\n            \n                styleUrls\n                ./user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.template.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mqtt\n                            \n                            \n                                    Private\n                                newUser\n                            \n                            \n                                    Private\n                                profiles\n                            \n                            \n                                    Private\n                                selected\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllProfiles\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                userCreate\n                            \n                            \n                                    Public\n                                userDelete\n                            \n                            \n                                    Public\n                                userPassword\n                            \n                            \n                                    Public\n                                userUpdate\n                            \n                            \n                                    Private\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, snackbarService: SnackBarService, mqttService: AdamoMqttService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/UserComponent/user.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mqttService\n                                                  \n                                                        \n                                                                        AdamoMqttService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllProfiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/UserComponent/user.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mqtt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/UserComponent/user.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/UserComponent/user.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/UserComponent/user.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/UserComponent/user.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/UserComponent/user.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ApiService} from '../../services/api.service';\nimport {AdamoMqttService} from '../../services/mqtt.service';\nimport { SnackBarService } from '../../services/snackbar.service';\n\n@Component({\n  selector: 'user-management',\n  templateUrl: './user.template.html',\n  styleUrls: ['./user.component.css']\n\n})\n\nexport class UserComponent {\n  private selected: any;\n  private newUser: any;\n  private users: any;\n  private profiles: any;\n  private mqtt: any;\n\n  constructor(private apiService: ApiService, private snackbarService: SnackBarService, private mqttService: AdamoMqttService) {\n  }\n\n  public ngOnInit() {\n    //defines the structure for a new empty user\n    this.newUser = {\n      uid: '',\n      email: '',\n      password: '',\n      lastlogin: '',\n      firstname: '',\n      lastname: '',\n      profile: ''\n    };\n\n    this.getAllUsers();\n    this.getAllProfiles();\n    try {\n\n      this.mqttService.getClient().subscribe('administrations/user');\n      const i = this;\n      this.mqttService.getClient().on('message', (topic: any, message: any) => {\n        if (topic.startsWith('administrations/user')) {\n          console.log('Test from remote:' + message.toString());\n          i.getAllUsers();\n        }\n      });\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  //checks if the email which is entered is valid or not\n    private validateEmail(email: string) {\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    }\n\n  //gets a list of all profiles from DB\n  public getAllProfiles() {\n    this.profiles = [];\n\n    this.apiService.getAllProfiles()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.profiles = response.data;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n        });\n  }\n\n  //gets a list of all users from DB\n  public getAllUsers() {\n    this.users = [];\n\n    this.apiService.getAllUsers()\n      .subscribe((response: { success: any; data: any; _body: string; }) => {\n          if (response.success) {\n            this.users = response.data;\n            this.selected = null;\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n        });\n  }\n\n  //updates the selected user\n  public userUpdate() {\n      //E-Mail validation Abfrage\n    if (this.validateEmail(this.selected.email)) {\n        this.apiService.userUpdate(\n            this.selected.uid,\n            this.selected.email,\n            this.selected.firstname,\n            this.selected.lastname,\n            this.selected.profile)\n            .subscribe((response: { success: any; status: string; _body: string; }) => {\n                    if (response.success) {\n                        this.mqttService.getClient().publish('administrations/user', JSON.stringify({}));\n                        this.snackbarService.success(response.status);\n                        console.log(response);\n                    } else {\n                        this.snackbarService.error(response._body);\n                    }\n                },\n              (                error: { _body: string; }) => {\n                    this.snackbarService.error(JSON.parse(error._body).status);\n                });\n    } else {\n        this.snackbarService.error('Not a valid E-Mail!');\n    }\n  }\n\n  //updates the password of the selected user\n  public userPassword() {\n    this.apiService.userPassword(this.selected.uid, this.selected.password)\n      .subscribe((response: { success: any; status: string; _body: string; }) => {\n          if (response.success) {\n            this.mqttService.getClient().publish('administrations/user', JSON.stringify({}));\n            this.snackbarService.success(response.status);\n            console.log(response);\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n        });\n  }\n\n  //creates a new user\n  public userCreate() {\n      if (this.validateEmail(this.selected.email)) {\n          this.apiService.userCreate(\n              this.selected.email,\n              this.selected.firstname,\n              this.selected.lastname,\n              this.selected.profile,\n              this.selected.password)\n              .subscribe((response: { success: any; status: string; _body: string; }) => {\n                      console.log('debug');\n                      if (response.success) {\n                          this.mqttService.getClient().publish('administrations/user', JSON.stringify({}));\n                          this.snackbarService.success(response.status);\n                          console.log(response);\n                      } else {\n                          this.snackbarService.error(response._body);\n                      }\n                  },\n                (                  error: { _body: string; }) => {\n                      this.snackbarService.error(JSON.parse(error._body).status);\n                  });\n      } else {\n          this.snackbarService.error('Not a valid E-Mail!');\n      }\n  }\n\n  //deletes the selected user\n  public userDelete() {\n    this.apiService.userDelete(this.selected.uid)\n      .subscribe((response: { success: any; _body: string; }) => {\n\n          if (response.success) {\n            this.mqttService.getClient().publish('administrations/user', JSON.stringify({}));\n            this.snackbarService.success('User successfully deleted');\n          } else {\n            this.snackbarService.error(response._body);\n          }\n        },\n        (        error: { _body: string; }) => {\n          this.snackbarService.error(JSON.parse(error._body).status);\n        });\n  }\n}\n\n    \n\n    \n        \n    \n        User\n    \n    \n        \n\n\n            \n            \n                \n            \n        \n\n        \n            \n            \n                Firstname\n                Lastname\n                Email\n            \n            \n            \n            \n                {{user.firstname}}\n                {{user.lastname}}\n                {{user.email}}\n            \n            \n        \n        \n         New User\n        \n    \n\n\n\n    \n        {{(selected.username === '' ? 'NewUser' : selected.username)}}\n    \n    \n\n\n        \n            \n                Lastlogin\n                \n            \n            \n                Email\n                \n            \n            \n                Firstname\n                \n            \n            \n                Lastname\n                \n            \n            \n                Password\n                \n            \n            \n                Profile\n                \n                    {{profile.profile}}\n                \n            \n            Create\n            \n            Change\n            Delete\n            Change Password\n        \n    \n\n    \n\n    \n                \n                    ./user.component.css\n                \n                /*\n\n.btn {\n    background-color: darkgrey;\n}\n\n\n*/\n\n.panel-body>.ng-untouched>.form-group>.form-control{\n    width:250px;\n}\n\n.panel-body>.ng-untouched>.form-group>.labelContainer>.col-md-4{\n    margin-top:10px;\n}\n\n.labelContainer{\n    width:80px;\n}\n\n/*\n.panel-body._deineKlasse{\n    color:red;\n}*/\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            User                                                                                                                            Firstname                Lastname                Email                                                                {{user.firstname}}                {{user.lastname}}                {{user.email}}                                                 New User                        {{(selected.username === \\'\\' ? \\'NewUser\\' : selected.username)}}                                            Lastlogin                                                        Email                                                        Firstname                                                        Lastname                                                        Password                                                        Profile                                    {{profile.profile}}                                        Create                        Change            Delete            Change Password            '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DTO/UserDto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                token\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/UserDto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/UserDto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/UserDto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/DTO/UserDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractDto:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractDto:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractDto } from './AbstractDto';\nimport { RoleType } from '../role-type';\n\nexport class UserDto extends AbstractDto {\n\n\n    // firstName: string;\n    // lastName: string;\n\n    // @ApiModelPropertyOptional()\n    // username: string;\n\n\n    role: RoleType;\n\n    token: string;\n    email: string;\n    password: string;\n\n    // @ApiModelPropertyOptional()\n    // avatar: string;\n\n    // @ApiModelPropertyOptional()\n    // thumbnail: string;\n\n    // @ApiModelPropertyOptional()\n    // companyEmail: string;\n\n    // @ApiModelPropertyOptional()\n    // companyName: string;\n\n    // @ApiModelPropertyOptional()\n    // phone: string;\n\n    // @ApiModelPropertyOptional()\n    // industry: string;\n\n    // @ApiModelPropertyOptional()\n    // address: string;\n\n    // @ApiModelPropertyOptional()\n    // country: string;\n\n    // @ApiModelPropertyOptional()\n    // state: string;\n\n    // @ApiModelPropertyOptional()\n    // city: string;\n\n    // @ApiModelPropertyOptional()\n    // zipCode: string;\n\n    // constructor(user: UserEntity) {\n    //     super(user);\n    //     this.firstName = user.firstName;\n    //     this.lastName = user.lastName;\n    //     // this.username = user.username;\n    //     this.role = user.role;\n    //     this.email = user.email;\n    //     // this.avatar = user.avatar;\n    //     // this.thumbnail = user.thumbnail;\n    //     // this.companyEmail = user.companyEmail;\n    //     // this.companyName = user.companyName;\n    //     // this.phone = user.phone;\n    //     // this.industry = user.industry;\n    //     // this.address = user.address;\n    //     // this.country = user.country;\n    //     // this.state = user.state;\n    //     // this.city = user.city;\n    //     // this.zipCode = user.zipCode;\n    // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoleType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractEntity } from \"./abstract.entity\";\nimport { UserDto } from \"./DTO/UserDto\";\nimport { RoleType } from \"./role-type\";\n// import { PasswordTransformer } from \"./password.transformer\";\n\nexport class UserEntity {\n  firstName: string;\n\n  lastName: string;\n\n  username: string;\n\n  role: RoleType;\n\n  email: string;\n\n  password: string;\n\n  // @Column({ nullable: true })\n  // avatar: string;\n\n  // @Column({ nullable: true })\n  // thumbnail: string;\n\n  // @Column({ nullable: true })\n  // companyEmail: string;\n\n  // @Column({ nullable: true })\n  // companyName: string;\n\n  // @Column({ nullable: true })\n  // phone: string;\n\n  // @Column({ nullable: true })\n  // industry: string;\n\n  // @Column({ nullable: true })\n  // address: string;\n\n  // @Column({ nullable: true })\n  // country: string;\n\n  // @Column({ nullable: true })\n  // state: string;\n\n  // @Column({ nullable: true })\n  // city: string;\n\n  // @Column({ nullable: true })\n  // zipCode: string;\n\n  // dtoClass = UserDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                BACKEND_URI\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getAllProfiles\n                            \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                getById\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                getUserBy\n                            \n                            \n                                    Public\n                                profileCreate\n                            \n                            \n                                    Public\n                                profileDelete\n                            \n                            \n                                    Public\n                                profileUpdate\n                            \n                            \n                                    Public\n                                setUser\n                            \n                            \n                                    Public\n                                userCreate\n                            \n                            \n                                    Public\n                                userDelete\n                            \n                            \n                                    Public\n                                userPassword\n                            \n                            \n                                    Public\n                                userUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllProfiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserDto\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserBy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserBy(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileCreate(profile: string, read: boolean, write: boolean, admin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    read\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    write\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    admin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileDelete(profileid: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            profileUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    profileUpdate(profileid: number, profile: string, read: boolean, write: boolean, admin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    read\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    write\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    admin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUser(user: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userCreate(email: string, firstname: string, lastname: string, profile: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userDelete(uid: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userPassword(uid: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userUpdate(uid: number, email: string, firstname: string, lastname: string, profile: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            BACKEND_URI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.SERVER_HOST + \":\" + environment.SERVER_PORT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { IPIM_OPTIONS } from \"../modelerConfig.service\";\nimport { ModelElement } from \"../ModelerComponent/evaluator/modelElement\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"../../environments/environment\";\nimport { UserDto } from \"../models/DTO/UserDto\";\n// import { User } from \"../models/user\";\nconst options = {\n  withCredentials: true\n};\n// options.params.set('withCredentials', 'true');\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  private user: UserDto; \n\n  public setUser(user: UserDto) {\n    this.user = user;\n  }\n\n  public getUser(): UserDto {\n    return this.user;\n  }\n  getById(id: number) {\n    return this.http.get(`${this.BACKEND_URI}/users/${id}`);\n}\n\n  constructor(public http: HttpClient) {}\n  private BACKEND_URI: string =\n    environment.SERVER_HOST + \":\" + environment.SERVER_PORT;\n\n\n\n\n\n    public getAll() {\n        return this.http.get(`${this.BACKEND_URI}/users`);\n    }\n\n  //Administration page: Show all users\n  public getAllUsers() {\n    return this.http.get(this.BACKEND_URI + \"/user/all\", options);\n  }\n\n  public getUserBy(id: String) {\n    return this.http.get(this.BACKEND_URI + `user/${id}`, options)\n  }\n\n  //Administration page: Delete user\n  public userDelete(uid: number) {\n    return this.http.post(\n      this.BACKEND_URI + \"/user/delete\",\n      { uid: uid },\n      options\n    );\n  }\n\n  //Administration page: Update user\n  public userUpdate(\n    uid: number,\n    email: string,\n    firstname: string,\n    lastname: string,\n    profile: string\n  ) {\n    return this.http.post(\n      this.BACKEND_URI + \"/user/update\",\n      {\n        uid: uid,\n        email: email,\n        firstname: firstname,\n        lastname: lastname,\n        profile: profile\n      },\n      options\n    );\n  }\n\n  //Administration page: Change password\n  public userPassword(uid: number, password: string) {\n    return this.http.post(\n      this.BACKEND_URI + \"/user/password\",\n      {\n        uid: uid,\n        password: password\n      },\n      options\n    );\n  }\n\n  //Administration page: Create user\n  public userCreate(\n    email: string,\n    firstname: string,\n    lastname: string,\n    profile: string,\n    password: string\n  ) {\n    return this.http.post(\n      this.BACKEND_URI + \"/user/create\",\n      {\n        email: email,\n        firstname: firstname,\n        lastname: lastname,\n        profile: profile,\n        password: password\n      },\n      options\n    );\n  }\n\n  //Administration page: Show all profiles when creating a new user\n  public getAllProfiles() {\n    return this.http.get(this.BACKEND_URI + \"/profile/all\", options);\n  }\n\n  //Administration page: Delete profile of user\n  public profileDelete(profileid: number) {\n    return this.http.post(\n      this.BACKEND_URI + \"/profile/delete\",\n      { profileid: profileid },\n      options\n    );\n  }\n\n  //Administration page: Update profile of user\n  public profileUpdate(\n    profileid: number,\n    profile: string,\n    read: boolean,\n    write: boolean,\n    admin: boolean\n  ) {\n    return this.http.post(\n      this.BACKEND_URI + \"/profile/update\",\n      {\n        profileid: profileid,\n        profile: profile,\n        read: read,\n        write: write,\n        admin: admin\n      },\n      options\n    );\n  }\n\n  //Administration page: Create new profile\n  public profileCreate(\n    profile: string,\n    read: boolean,\n    write: boolean,\n    admin: boolean\n  ) {\n    return this.http.post(\n      this.BACKEND_URI + \"/profile/create\",\n      {\n        profile: profile,\n        read: read,\n        write: write,\n        admin: admin\n      },\n      options\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Variable.html":{"url":"classes/Variable.html","title":"class - Variable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Variable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ModelerComponent/modals/variable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                meta\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: string, meta: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/variable.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/variable.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/variable.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/variable.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Variable {\n    constructor(public name: string, public value: string, public meta: boolean) {\n    }\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VariableComponent.html":{"url":"components/VariableComponent.html","title":"component - VariableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VariableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/VariablesComponent/variables.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                variable-comp\n            \n\n\n\n\n            \n                templateUrl\n                ./variables.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                varName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        varName\n                    \n                \n                \n                    \n                        Type :         Variable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariablesComponent/variables.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Variable} from '../variable';\n@Component({\n    selector: 'variable-comp',\n    templateUrl: './variables.component.html'\n})\nexport class VariableComponent {\n  @Input() public varName : Variable;\n}\n    \n\n    \n        \n  \n    \n       Variable: \n      \n      \n      \n       Value: \n      \n      \n      \n       Expression?\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Variable:                          Value:                          Expression?      '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VariableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VariableModal.html":{"url":"components/VariableModal.html","title":"component - VariableModal","body":"\n                   \n\n\n\n\n\n  Components\n  VariableModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ModelerComponent/modals/VariableModal/VariableModal.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                variable-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./VariableModal.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animation\n                            \n                            \n                                    Public\n                                backdrop\n                            \n                            \n                                closeResult\n                            \n                            \n                                    Public\n                                css\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                index\n                            \n                            \n                                    Private\n                                IPIM_META\n                            \n                            \n                                    Private\n                                IPIM_VAL\n                            \n                            \n                                    Public\n                                keyboard\n                            \n                            \n                                    Private\n                                modalTemplateReference\n                            \n                            \n                                    Private\n                                modeler\n                            \n                            \n                                    Public\n                                output\n                            \n                            \n                                    Public\n                                root\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                termList\n                            \n                            \n                                    Public\n                                variables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accept\n                            \n                            \n                                    Public\n                                addNewVar\n                            \n                            \n                                    Public\n                                addVar\n                            \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Private\n                                closed\n                            \n                            \n                                    Private\n                                dismissed\n                            \n                            \n                                    Public\n                                fillModal\n                            \n                            \n                                open\n                            \n                            \n                                    Public\n                                opened\n                            \n                            \n                                    Public\n                                setProps\n                            \n                            \n                                    Private\n                                writeVariableModalValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            accept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    accept()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewVar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewVar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addVar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addVar(name: string, value: string, meta: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            closed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dismissed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fillModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fillModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            opened\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    opened()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProps(modeler: any, root: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modeler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    root\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            writeVariableModalValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeVariableModalValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backdrop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_META\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"IPIM_Meta\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            IPIM_VAL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"IPIM_Val\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyboard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalTemplateReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('variablemodal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modeler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            variables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Variable[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    // new Variable('prepacked', 'yes', true),\n    // new Variable('bookonwithdrawal', 'yes', true),\n    // new Variable('noOperation', 'no', false)\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ModelerComponent/modals/VariableModal/VariableModal.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, TemplateRef } from \"@angular/core\";\nimport { BsModalComponent } from \"ng2-bs3-modal\";\nimport { VariableComponent } from \"../VariablesComponent/variables.component\";\nimport { Variable } from \"../variable\";\n\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NGXLogger } from \"ngx-logger\";\n@Component({\n  selector: \"variable-modal\",\n  templateUrl: \"./VariableModal.html\"\n})\nexport class VariableModal {\n  private IPIM_VAL: string = \"IPIM_Val\";\n  private IPIM_META: string = \"IPIM_Meta\";\n\n  @ViewChild(\"variablemodal\")\n  private modalTemplateReference: TemplateRef;\n\n  closeResult: string;\n\n  constructor(private modalService: NgbModal, private logger: NGXLogger) {}\n\n  open(content) {\n    this.modalService\n      .open(this.modalTemplateReference, {\n        ariaLabelledBy: \"modal-basic-title\"\n      })\n      .result.then(\n        result => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        reason => {}\n      );\n  }\n  //private variables: Variable[];\n\n  public variables: Variable[] = [\n    // new Variable('prepacked', 'yes', true),\n    // new Variable('bookonwithdrawal', 'yes', true),\n    // new Variable('noOperation', 'no', false)\n  ];\n\n  private modeler: any;\n  public termList: any;\n  public root: any;\n  /*   constructor() {\n        super();\n        console.log('VariableModal constructor');\n        this.fillModal();\n\n    } */\n\n  // @ViewChild('modal')\n  // public modal: BsModalComponent;\n  public selected: string;\n  public output: string;\n  public index: number = 0;\n  public cssClass: string = \"\";\n\n  public animation: boolean = true;\n  public keyboard: boolean = true;\n  public backdrop: string | boolean = true;\n  public css: boolean = false;\n\n  public opened() {\n    console.log(\"opened Variable Modal\");\n    this.variables = [];\n    this.fillModal();\n  }\n\n  public setProps(modeler: any, root: any) {\n    console.log(\"Variable Modal Set Props\");\n    this.root = root;\n    this.modeler = modeler;\n  }\n\n  public addNewVar(): void {\n    this.addVar(\"newVariable\", \"newValue\", false);\n  }\n\n  public addVar(name: string, value: string, meta: boolean): void {\n    this.variables.push(new Variable(name, value, meta));\n  }\n\n  public fillModal(): void {\n    console.log(\"VariableModal fillModal\");\n    //Objekte vom this.modeler holen um nicht immer so viel tippen zu müssen.\n    const elementRegistry = this.modeler.get(\"elementRegistry\");\n    const modeling = this.modeler.get(\"modeling\");\n    //Alle Elemente der ElementRegistry holen\n    const elements = elementRegistry.getAll();\n    const element = elements[0];\n    //Prüfen ob erweiterte Eigenschaften für das Objekt existieren\n    if (element.businessObject.extensionElements) {\n      //Wenn vorhandne die Elemente auslesen\n      const extras = element.businessObject.extensionElements.get(\"values\");\n      if (extras[0].values) {\n        //Schleife über alle Elemente\n        for (let i = 0; i \n    \n\n    \n        \n      \n        IPIM Variables\n      \n      \n        Please specify the variables used:\n            \n\n                \n                   \n                \n            \n      \n      \n         Add Variable\n         Set\n      \n -->\n\n    \n      \n      \n        \n        \n          Terms\n          &times;\n        \n        \n        \n        \n          Please define a new term for all elements:\n          \n            \n            \n            \n          \n          \n        \n        \n        \n        \n          Set Term\n              \n      \n    \n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              IPIM Variables                    Please specify the variables used:                                                                                                Add Variable         Set       -->                                          Terms          ×                                          Please define a new term for all elements:                                                                                                            Set Term                            -->  '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VariableModal'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Version.html":{"url":"pipes/Version.html","title":"pipe - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/version.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        version\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, args?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/version.pipe.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\nconst bigInt = require('big-integer');\n\n@Pipe({\n  name: 'version',\n  pure: false\n})\n\n/*Version of model when updating this or previous version\n  - Changing a model increments version number (example 1=>2)\n  - Changing sub-version of a model increments sub-version number (example 1.1=>1.2)\n  - Changing older version of model with no existing sub-version creates sub-version (example 1=>1.1)\n  - Maximum version number level is four\n  - Maximum version with maximum level equals 65535.65535.65535.65535\n*/\nexport class Version implements PipeTransform {\n\n  public transform(value: any, args?: any): any {\n    //Version number level 1: Does version + 2^48 already exist?\n    const vers1 = bigInt(value).shiftRight(48);\n    //Version number level 2: Does version + 2^32 already exist?\n    const vers2 = bigInt(value).and(bigInt('0000FFFF00000000', 16)).shiftRight(32);\n    //Version number level 3: Does version + 2^16 already exist?\n    const vers3 = bigInt(value).and(bigInt('00000000FFFF0000', 16)).shiftRight(16);\n    //Version number level 4: Does version + 1 already exist?\n    const vers4 = bigInt(value).and(bigInt('000000000000FFFF', 16));\n    let version = '';\n    if (!bigInt(vers4).isZero()) {\n      version = vers1 + '.' + vers2 + '.' + vers3 + '.' + vers4 + version;\n    } else if (!bigInt(vers3).isZero()) {\n      version = vers1 + '.' + vers2 + '.' + vers3;\n    } else if (!bigInt(vers2).isZero()) {\n      version = vers1 + '.' + vers2;\n    } else if (!bigInt(vers1).isZero()) {\n      version = vers1;\n    }\n    return version;\n  }\n}\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                loadSampleBPMN\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/viewer/viewer.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(err: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewer/viewer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadSampleBPMN\n                        \n                        \n                    \n                \n            \n            \n                \nloadSampleBPMN()\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewer/viewer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/viewer/viewer.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Angular 2 with BPMN-JS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/viewer/viewer.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/viewer/viewer.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Http} from '@angular/http';\n\nimport 'bpmn-js';\n\nconst bpmn = require(\"bpmn-js\");\n\n@Component({\n    selector: 'viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.css']\n})\nexport class ViewerComponent implements OnInit {\n    viewer: any;\n    title: string = 'Angular 2 with BPMN-JS';\n\n    constructor(private http: Http) {\n    }\n\n    ngOnInit() {\n        this.viewer = new bpmn({container: '#canvas'});\n        this.loadSampleBPMN();\n    }\n\n    handleError(err: any) {\n        if (err) {\n            console.log('error rendering', err);\n        } else {\n            console.log('rendered');\n        }\n    }\n\n    loadSampleBPMN() {\n        const url = '/diagrams/pizza-collaboration.bpmn';\n        this.http.get(url)\n            .toPromise()\n            .then(response => response.text())\n            .then(data => this.viewer.importXML(data, this.handleError))\n            .catch(this.handleError);\n    }\n\n}\n\n    \n\n    \n        \n    Viewer\n\n    Load sample diagram\n\n    \n\n\n\n    \n\n    \n                \n                    ./viewer.component.css\n                \n                main {\n    padding: 1em;\n    font-family: Arial, Helvetica, sans-serif;\n    /* text-align: center; */\n    /*margin-top: 50px;*/\n    display: block;\n}\n\n#canvas {\n    width: 100%;\n    height: 750px;\n    outline: 2px solid orange;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Viewer    Load sample diagram    '\n    var COMPONENTS = [{'name': 'AdministrationComponent', 'selector': 'administration'},{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'EvalModal', 'selector': 'eval-modal'},{'name': 'FrontPageComponent', 'selector': 'front-page'},{'name': 'InputModal', 'selector': 'input-modal'},{'name': 'InputVarComponent', 'selector': 'inputvar-comp'},{'name': 'ModelComponent', 'selector': 'model-management'},{'name': 'ModelerComponent', 'selector': 'modeler'},{'name': 'ModellerPageComponent', 'selector': ''},{'name': 'ModelLoaderComponent', 'selector': 'modelloader'},{'name': 'PermissionComponent', 'selector': 'permission-management'},{'name': 'ProfileComponent', 'selector': 'profile-management'},{'name': 'RoleComponent', 'selector': 'role-management'},{'name': 'SaveModal', 'selector': 'save-modal'},{'name': 'SubProcessModal', 'selector': 'subprocess-modal'},{'name': 'TermModal', 'selector': 'term-modal'},{'name': 'UsageModal', 'selector': 'usage-modal'},{'name': 'UserComponent', 'selector': 'user-management'},{'name': 'VariableComponent', 'selector': 'variable-comp'},{'name': 'VariableModal', 'selector': 'variable-modal'},{'name': 'ViewerComponent', 'selector': 'viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/polyfills.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        File\n                                \n                                \n                                        FileList\n                                \n                                \n                                        FileReader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        File\n                                    \n                                \n                                \n                                    \n                                        File:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FileList\n                                    \n                                \n                                \n                                    \n                                        FileList:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FileReader\n                                    \n                                \n                                \n                                    \n                                        FileReader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'core-js/es6';\nimport 'core-js/es7/reflect';\nrequire('zone.js/dist/zone');\n(window as any).process = {\n  env: { DEBUG: undefined }\n};\nif (process.env.ENV === 'production') {\n    // Production\n} else {\n    // Development\n    Error['stackTraceLimit'] = Infinity;\n    require('zone.js/dist/long-stack-trace-zone');\n}\ndeclare global {\n  interface Window {\n    File: any;\n    FileReader: any;\n    FileList: any;\n  }\n}\n\n(window as any).global = window;\nglobal.Buffer = global.Buffer || require('buffer').Buffer;\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/ModelerComponent/camunda-moddle.ts\n            \n            variable\n            camundaModdle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/command/CommandStack.ts\n            \n            class\n            CommandStack\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/command/CommandStack.ts\n            \n            variable\n            commandInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/custom.ts\n            \n            variable\n            custom\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/evaluator/evaluator.component.ts\n            \n            class\n            Evaluator\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/evaluator/evaluator.component.ts\n            \n            variable\n            customPaletteModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/evaluator/evaluator.component.ts\n            \n            variable\n            customPropertiesProviderModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/evaluator/modelElement.ts\n            \n            class\n            ModelElement\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/interfaces.ts\n            \n            interface\n            FileReaderEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/interfaces.ts\n            \n            interface\n            FileReaderEventTarget\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/InputComponent/input.component.ts\n            \n            component\n            InputVarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/InputModal/InputModal.ts\n            \n            component\n            InputModal\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/SaveModal/SaveModal.ts\n            \n            component\n            SaveModal\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/SaveModal/SaveModal.ts\n            \n            injectable\n            SaveModal\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/SaveModal/SaveModal.ts\n            \n            variable\n            bigInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/SubProcessModal/SubProcessModal.ts\n            \n            component\n            SubProcessModal\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/TermModal/TermModal.ts\n            \n            component\n            TermModal\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/UsageModal/UsageModal.ts\n            \n            component\n            UsageModal\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/VariableModal/VariableModal.ts\n            \n            component\n            VariableModal\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/VariablesComponent/variables.component.ts\n            \n            component\n            VariableComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/evaluatorModal/evaluatorModal.ts\n            \n            component\n            EvalModal\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modals/variable.ts\n            \n            class\n            Variable\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modeler.component.ts\n            \n            component\n            ModelerComponent\n            \n                1 %\n                (1/84)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/modeler.component.ts\n            \n            variable\n            customPaletteModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/palette/palette.ts\n            \n            function\n            PaletteProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            function\n            createCustomTabGroups\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            function\n            createGeneralTabGroups\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            function\n            CustomPropertiesProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            documentationProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            eventProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            idProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            inherits\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            linkProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            nameProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            processProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props-provider.ts\n            \n            variable\n            propertiesActivator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props.ts\n            \n            function\n            CustomProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props.ts\n            \n            variable\n            entryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ModelerComponent/properties/props.ts\n            \n            variable\n            is\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            MQTT_SERVICE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/bpmn-store/bpmn-store.service.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/bpmn-store/bpmn-store.service.ts\n            \n            injectable\n            BPMNStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/bpmn-store/commandstore.service.ts\n            \n            variable\n            COMMANDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/builder/model/entry.ts\n            \n            class\n            Entry\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/builder/store.service.ts\n            \n            injectable\n            StoreService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/Alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/AppFooterComponent/footer.component.ts\n            \n            component\n            AppFooterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/AppHeaderComponent/header.component.ts\n            \n            component\n            AppHeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/ModelComponent/model.component.ts\n            \n            component\n            ModelComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/ModelLoaderComponent/modelloader.component.ts\n            \n            component\n            ModelLoaderComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/components/PermissionComponent/permission.component.ts\n            \n            component\n            PermissionComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/ProfileComponent/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/RoleComponent/role.component.ts\n            \n            component\n            RoleComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/UserComponent/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/front-page/FrontPageComponent.ts\n            \n            component\n            FrontPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/helpers/fake-backend.ts\n            \n            interceptor\n            FakeBackendInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/helpers/fake-backend.ts\n            \n            variable\n            fakeBackendProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modelerConfig.service.ts\n            \n            variable\n            IPIM_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modellerPage/administration.component.ts\n            \n            component\n            AdministrationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modellerPage/modellerPage.component.ts\n            \n            component\n            ModellerPageComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/models/AuthenticationResponse.ts\n            \n            class\n            AuthenticationResponse\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/models/DTO/AbstractDto.ts\n            \n            class\n            AbstractDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/DTO/LoginPayloadDto.ts\n            \n            class\n            LoginPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/DTO/TokenPayloadDto.ts\n            \n            class\n            TokenPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/DTO/UserDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/LoginResponse.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/models/abstract.entity.ts\n            \n            class\n            AbstractEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/model.ts\n            \n            class\n            Model\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pipes/filterUnique.pipe.ts\n            \n            pipe\n            FilterUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/timestamp.pipe.ts\n            \n            pipe\n            Timestamp2Date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/version.pipe.ts\n            \n            pipe\n            Version\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/version.pipe.ts\n            \n            variable\n            bigInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/authenticatedHttp.service.ts\n            \n            injectable\n            AuthenticatedHttpService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/mqtt.service.ts\n            \n            injectable\n            AdamoMqttService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/permission.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/services/permission.service.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/services/role.service.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/snackBarMessage.ts\n            \n            class\n            SnackBarMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/snackbar.service.ts\n            \n            injectable\n            SnackBarService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/viewer/viewer.component.ts\n            \n            component\n            ViewerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/viewer/viewer.component.ts\n            \n            variable\n            bpmn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/polyfills.ts\n            \n            interface\n            Window\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/build-angular : ^0.13.4\n        \n            @angular-devkit/build-ng-packagr : ^0.13.8\n        \n            @angular/animations : ^7.2.15\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-bootstrap/ng-bootstrap : ^4.1.3\n        \n            array-unique : ^0.3.2\n        \n            big-integer : ^1.6.34\n        \n            bootstrap : ^4.3.1\n        \n            bpmn-js : ^3.2.1\n        \n            bpmn-js-properties-panel : ^0.29.0\n        \n            buffer : ^5.2.1\n        \n            camunda-bpmn-moddle : ^3.2.0\n        \n            core-js : ^2.4.1\n        \n            diagram-js-origin : ^1.1.1\n        \n            dotenv : ^6.2.0\n        \n            es6-promise : ^4.2.6\n        \n            es6-shim : ^0.35.4\n        \n            express : ^4.16.2\n        \n            file-saver : ^2.0.1\n        \n            immutable : ^4.0.0-rc.12\n        \n            jquery : ^3.2.1\n        \n            js-interpreter : ^1.4.6\n        \n            jszip : ^3.1.5\n        \n            jwt-decode : ^2.2.0\n        \n            mqtt : ^2.16.0\n        \n            ng2-bs3-modal : 0.15.0\n        \n            ng2-search-filter : ^0.4.7\n        \n            ngx-bootstrap : ^4.2.0\n        \n            ngx-logger : ^3.3.11\n        \n            ngx-mqtt : ^6.8.5\n        \n            ngx-mqtt-client : ^1.3.4\n        \n            ngx-smart-modal : ^7.1.1\n        \n            redux : ^4.0.1\n        \n            redux-logger : ^3.0.1\n        \n            redux-observable : ^1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : ^6.4.0\n        \n            safe-eval : ^0.4.1\n        \n            sass-loader : ^7.1.0\n        \n            systemjs : 3.0.1\n        \n            uuid : ^3.3.2\n        \n            winston : ^3.2.1\n        \n            yargs : ^13.2.1\n        \n            zone.js : ^0.8.9\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleType   (src/.../role-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/role-type.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleType\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCustomTabGroups   (src/.../props-provider.ts)\n                        \n                        \n                            createGeneralTabGroups   (src/.../props-provider.ts)\n                        \n                        \n                            CustomPropertiesProvider   (src/.../props-provider.ts)\n                        \n                        \n                            CustomProps   (src/.../props.ts)\n                        \n                        \n                            PaletteProvider   (src/.../palette.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ModelerComponent/properties/props-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createCustomTabGroups\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCustomTabGroups(element: any, elementRegistry: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementRegistry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGeneralTabGroups\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGeneralTabGroups(element: any, bpmnFactory: any, elementRegistry: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bpmnFactory\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementRegistry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CustomPropertiesProvider\n                        \n                        \n                    \n                \n            \n            \n                \nCustomPropertiesProvider(eventBus: any, bpmnFactory: any, elementRegistry: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventBus\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bpmnFactory\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementRegistry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/ModelerComponent/properties/props.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            CustomProps\n                        \n                        \n                    \n                \n            \n            \n                \nCustomProps(group: any, element: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/ModelerComponent/palette/palette.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PaletteProvider\n                        \n                        \n                    \n                \n            \n            \n                \nPaletteProvider(palette: any, create: any, elementFactory: any, spaceTool: any, lassoTool: any, handTool: any, globalConnect: any, extraPaletteEntries: any, commandQueue: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    palette\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    create\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementFactory\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    spaceTool\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lassoTool\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handTool\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    globalConnect\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    extraPaletteEntries\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commandQueue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSample Angular2 BPMN-JS project\nFeatures: \n\nAngular2-based single-page-application\nWebpack-based build (not angular-cli)\nDev-server with auto-refresh\nDist-build\nInclusion of javascript, css, less, fonts etc from various BPMN-JS npm repos\nbpmn-related stuff is put in a separate bundle\nProperties panel\nCustom properties\nCustom palette (with icons from font-awesome)\n\nSetup / Installation\n\nnpm install\nnpm start to start dev-server on localhost:8081\nnpm run build to build distribution into dist directory.  \n\nHow to (get) help / feedback / comments / suggestions\nThis is a sample project, set up by an generally experienced programmer without experience \nwith Angular2 / webpack. Hopefully people will find it useful. \nIt is NOT a super-project set up by experts, nor by the BPMN-JS team. \nIf you have comments, ideas, suggestions, improvements, praise, blame, whatever - \nplease, bring them on! Either as issues / pull-requests / whatever here on github, \nor on the BPMN-IO forum: \nhttps://forum.bpmn.io/t/bpmn-js-with-angular2-and-webpack/1291\nMisc todo's, suggestions welcome:  \n\nCoordination/integration between Angular-components and the BPMN.IO providers seems to be difficult. How should one implement (e.g.) save functionality? \n\nImprove development tools. Stacktrace in browser doesn't match typescript files. \nit is not possible to debug from IntelliJ. Any ideas?  \n\nbpmn-bundling is done by adding lots of stuff into src/bpmn.ts. Is it possible to \nautomate this process somehow? \n\nFurther typescriptify some of the javascript code\n\nTypings for bpmn-libs? Autocomplete / suggestions in IDEs would be very nice.  \n\nAdd some tests (probably standard webpack/angular2-stuff)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FrontPageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdministrationComponent\n\nAdministrationComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdministrationComponent->AppModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppFooterComponent\n\nAppFooterComponent\n\nAppModule -->\n\nAppFooterComponent->AppModule\n\n\n\n\n\nAppHeaderComponent\n\nAppHeaderComponent\n\nAppModule -->\n\nAppHeaderComponent->AppModule\n\n\n\n\n\nEvalModal\n\nEvalModal\n\nAppModule -->\n\nEvalModal->AppModule\n\n\n\n\n\nFilterUnique\n\nFilterUnique\n\nAppModule -->\n\nFilterUnique->AppModule\n\n\n\n\n\nFrontPageComponent\n\nFrontPageComponent\n\nAppModule -->\n\nFrontPageComponent->AppModule\n\n\n\n\n\nInputModal\n\nInputModal\n\nAppModule -->\n\nInputModal->AppModule\n\n\n\n\n\nInputVarComponent\n\nInputVarComponent\n\nAppModule -->\n\nInputVarComponent->AppModule\n\n\n\n\n\nModelComponent\n\nModelComponent\n\nAppModule -->\n\nModelComponent->AppModule\n\n\n\n\n\nModelLoaderComponent\n\nModelLoaderComponent\n\nAppModule -->\n\nModelLoaderComponent->AppModule\n\n\n\n\n\nModelerComponent\n\nModelerComponent\n\nAppModule -->\n\nModelerComponent->AppModule\n\n\n\n\n\nModellerPageComponent\n\nModellerPageComponent\n\nAppModule -->\n\nModellerPageComponent->AppModule\n\n\n\n\n\nPermissionComponent\n\nPermissionComponent\n\nAppModule -->\n\nPermissionComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRoleComponent\n\nRoleComponent\n\nAppModule -->\n\nRoleComponent->AppModule\n\n\n\n\n\nSaveModal\n\nSaveModal\n\nAppModule -->\n\nSaveModal->AppModule\n\n\n\n\n\nSubProcessModal\n\nSubProcessModal\n\nAppModule -->\n\nSubProcessModal->AppModule\n\n\n\n\n\nTermModal\n\nTermModal\n\nAppModule -->\n\nTermModal->AppModule\n\n\n\n\n\nTimestamp2Date\n\nTimestamp2Date\n\nAppModule -->\n\nTimestamp2Date->AppModule\n\n\n\n\n\nUsageModal\n\nUsageModal\n\nAppModule -->\n\nUsageModal->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nVariableComponent\n\nVariableComponent\n\nAppModule -->\n\nVariableComponent->AppModule\n\n\n\n\n\nVariableModal\n\nVariableModal\n\nAppModule -->\n\nVariableModal->AppModule\n\n\n\n\n\nVersion\n\nVersion\n\nAppModule -->\n\nVersion->AppModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nAppModule -->\n\nViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAdamoMqttService\n\nAdamoMqttService\n\nAppModule -->\n\nAdamoMqttService->AppModule\n\n\n\n\n\nAlertService\n\nAlertService\n\nAppModule -->\n\nAlertService->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nSnackBarService\n\nSnackBarService\n\nAppModule -->\n\nSnackBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
